/*
 * generated by Xtext 2.12.0
 */
grammar InternalRoQME;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.roqme.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.roqme.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.roqme.services.RoQMEGrammarAccess;

}
@parser::members {
	private RoQMEGrammarAccess grammarAccess;

	public void setGrammarAccess(RoQMEGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRoqmeModel
entryRuleRoqmeModel
:
{ before(grammarAccess.getRoqmeModelRule()); }
	 ruleRoqmeModel
{ after(grammarAccess.getRoqmeModelRule()); } 
	 EOF 
;

// Rule RoqmeModel
ruleRoqmeModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoqmeModelAccess().getGroup()); }
		(rule__RoqmeModel__Group__0)
		{ after(grammarAccess.getRoqmeModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedVariable
entryRuleTypedVariable
:
{ before(grammarAccess.getTypedVariableRule()); }
	 ruleTypedVariable
{ after(grammarAccess.getTypedVariableRule()); } 
	 EOF 
;

// Rule TypedVariable
ruleTypedVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedVariableAccess().getAlternatives()); }
		(rule__TypedVariable__Alternatives)
		{ after(grammarAccess.getTypedVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContext
entryRuleContext
:
{ before(grammarAccess.getContextRule()); }
	 ruleContext
{ after(grammarAccess.getContextRule()); } 
	 EOF 
;

// Rule Context
ruleContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContextAccess().getAlternatives()); }
		(rule__Context__Alternatives)
		{ after(grammarAccess.getContextAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveContext
entryRulePrimitiveContext
:
{ before(grammarAccess.getPrimitiveContextRule()); }
	 rulePrimitiveContext
{ after(grammarAccess.getPrimitiveContextRule()); } 
	 EOF 
;

// Rule PrimitiveContext
rulePrimitiveContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveContextAccess().getGroup()); }
		(rule__PrimitiveContext__Group__0)
		{ after(grammarAccess.getPrimitiveContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDerivedContext
entryRuleDerivedContext
:
{ before(grammarAccess.getDerivedContextRule()); }
	 ruleDerivedContext
{ after(grammarAccess.getDerivedContextRule()); } 
	 EOF 
;

// Rule DerivedContext
ruleDerivedContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDerivedContextAccess().getGroup()); }
		(rule__DerivedContext__Group__0)
		{ after(grammarAccess.getDerivedContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralPurposeVariable
entryRuleGeneralPurposeVariable
:
{ before(grammarAccess.getGeneralPurposeVariableRule()); }
	 ruleGeneralPurposeVariable
{ after(grammarAccess.getGeneralPurposeVariableRule()); } 
	 EOF 
;

// Rule GeneralPurposeVariable
ruleGeneralPurposeVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralPurposeVariableAccess().getGroup()); }
		(rule__GeneralPurposeVariable__Group__0)
		{ after(grammarAccess.getGeneralPurposeVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimer
entryRuleTimer
:
{ before(grammarAccess.getTimerRule()); }
	 ruleTimer
{ after(grammarAccess.getTimerRule()); } 
	 EOF 
;

// Rule Timer
ruleTimer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimerAccess().getGroup()); }
		(rule__Timer__Group__0)
		{ after(grammarAccess.getTimerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBeliefVariable
entryRuleBeliefVariable
:
{ before(grammarAccess.getBeliefVariableRule()); }
	 ruleBeliefVariable
{ after(grammarAccess.getBeliefVariableRule()); } 
	 EOF 
;

// Rule BeliefVariable
ruleBeliefVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeliefVariableAccess().getAlternatives()); }
		(rule__BeliefVariable__Alternatives)
		{ after(grammarAccess.getBeliefVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBeliefVariableImpl
entryRuleBeliefVariableImpl
:
{ before(grammarAccess.getBeliefVariableImplRule()); }
	 ruleBeliefVariableImpl
{ after(grammarAccess.getBeliefVariableImplRule()); } 
	 EOF 
;

// Rule BeliefVariableImpl
ruleBeliefVariableImpl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeliefVariableImplAccess().getGroup()); }
		(rule__BeliefVariableImpl__Group__0)
		{ after(grammarAccess.getBeliefVariableImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentence
entryRuleSentence
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentenceAccess().getObservationParserRuleCall()); }
		ruleObservation
		{ after(grammarAccess.getSentenceAccess().getObservationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObservation
entryRuleObservation
:
{ before(grammarAccess.getObservationRule()); }
	 ruleObservation
{ after(grammarAccess.getObservationRule()); } 
	 EOF 
;

// Rule Observation
ruleObservation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObservationAccess().getGroup()); }
		(rule__Observation__Group__0)
		{ after(grammarAccess.getObservationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimerAction
entryRuleTimerAction
:
{ before(grammarAccess.getTimerActionRule()); }
	 ruleTimerAction
{ after(grammarAccess.getTimerActionRule()); } 
	 EOF 
;

// Rule TimerAction
ruleTimerAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimerActionAccess().getAlternatives()); }
		(rule__TimerAction__Alternatives)
		{ after(grammarAccess.getTimerActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetVariable
entryRuleSetVariable
:
{ before(grammarAccess.getSetVariableRule()); }
	 ruleSetVariable
{ after(grammarAccess.getSetVariableRule()); } 
	 EOF 
;

// Rule SetVariable
ruleSetVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetVariableAccess().getGroup()); }
		(rule__SetVariable__Group__0)
		{ after(grammarAccess.getSetVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClearEvidence
entryRuleClearEvidence
:
{ before(grammarAccess.getClearEvidenceRule()); }
	 ruleClearEvidence
{ after(grammarAccess.getClearEvidenceRule()); } 
	 EOF 
;

// Rule ClearEvidence
ruleClearEvidence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClearEvidenceAccess().getGroup()); }
		(rule__ClearEvidence__Group__0)
		{ after(grammarAccess.getClearEvidenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetEvidence
entryRuleSetEvidence
:
{ before(grammarAccess.getSetEvidenceRule()); }
	 ruleSetEvidence
{ after(grammarAccess.getSetEvidenceRule()); } 
	 EOF 
;

// Rule SetEvidence
ruleSetEvidence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetEvidenceAccess().getGroup()); }
		(rule__SetEvidence__Group__0)
		{ after(grammarAccess.getSetEvidenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartTimer
entryRuleStartTimer
:
{ before(grammarAccess.getStartTimerRule()); }
	 ruleStartTimer
{ after(grammarAccess.getStartTimerRule()); } 
	 EOF 
;

// Rule StartTimer
ruleStartTimer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartTimerAccess().getGroup()); }
		(rule__StartTimer__Group__0)
		{ after(grammarAccess.getStartTimerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStopTimer
entryRuleStopTimer
:
{ before(grammarAccess.getStopTimerRule()); }
	 ruleStopTimer
{ after(grammarAccess.getStopTimerRule()); } 
	 EOF 
;

// Rule StopTimer
ruleStopTimer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopTimerAccess().getGroup()); }
		(rule__StopTimer__Group__0)
		{ after(grammarAccess.getStopTimerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResumeTimer
entryRuleResumeTimer
:
{ before(grammarAccess.getResumeTimerRule()); }
	 ruleResumeTimer
{ after(grammarAccess.getResumeTimerRule()); } 
	 EOF 
;

// Rule ResumeTimer
ruleResumeTimer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResumeTimerAccess().getGroup()); }
		(rule__ResumeTimer__Group__0)
		{ after(grammarAccess.getResumeTimerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition
:
{ before(grammarAccess.getDataTypeDefinitionRule()); }
	 ruleDataTypeDefinition
{ after(grammarAccess.getDataTypeDefinitionRule()); } 
	 EOF 
;

// Rule DataTypeDefinition
ruleDataTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeDefinitionAccess().getGroup()); }
		(rule__DataTypeDefinition__Group__0)
		{ after(grammarAccess.getDataTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanType
entryRuleBooleanType
:
{ before(grammarAccess.getBooleanTypeRule()); }
	 ruleBooleanType
{ after(grammarAccess.getBooleanTypeRule()); } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTypeAccess().getGroup()); }
		(rule__BooleanType__Group__0)
		{ after(grammarAccess.getBooleanTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumType
entryRuleEnumType
:
{ before(grammarAccess.getEnumTypeRule()); }
	 ruleEnumType
{ after(grammarAccess.getEnumTypeRule()); } 
	 EOF 
;

// Rule EnumType
ruleEnumType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumTypeAccess().getGroup()); }
		(rule__EnumType__Group__0)
		{ after(grammarAccess.getEnumTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral
:
{ before(grammarAccess.getEnumLiteralRule()); }
	 ruleEnumLiteral
{ after(grammarAccess.getEnumLiteralRule()); } 
	 EOF 
;

// Rule EnumLiteral
ruleEnumLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralAccess().getGroup()); }
		(rule__EnumLiteral__Group__0)
		{ after(grammarAccess.getEnumLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventType
entryRuleEventType
:
{ before(grammarAccess.getEventTypeRule()); }
	 ruleEventType
{ after(grammarAccess.getEventTypeRule()); } 
	 EOF 
;

// Rule EventType
ruleEventType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventTypeAccess().getGroup()); }
		(rule__EventType__Group__0)
		{ after(grammarAccess.getEventTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericType
entryRuleNumericType
:
{ before(grammarAccess.getNumericTypeRule()); }
	 ruleNumericType
{ after(grammarAccess.getNumericTypeRule()); } 
	 EOF 
;

// Rule NumericType
ruleNumericType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeAccess().getGroup()); }
		(rule__NumericType__Group__0)
		{ after(grammarAccess.getNumericTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericTypeConstraint
entryRuleNumericTypeConstraint
:
{ before(grammarAccess.getNumericTypeConstraintRule()); }
	 ruleNumericTypeConstraint
{ after(grammarAccess.getNumericTypeConstraintRule()); } 
	 EOF 
;

// Rule NumericTypeConstraint
ruleNumericTypeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeConstraintAccess().getAlternatives()); }
		(rule__NumericTypeConstraint__Alternatives)
		{ after(grammarAccess.getNumericTypeConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLowerBound
entryRuleLowerBound
:
{ before(grammarAccess.getLowerBoundRule()); }
	 ruleLowerBound
{ after(grammarAccess.getLowerBoundRule()); } 
	 EOF 
;

// Rule LowerBound
ruleLowerBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowerBoundAccess().getGroup()); }
		(rule__LowerBound__Group__0)
		{ after(grammarAccess.getLowerBoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpperBound
entryRuleUpperBound
:
{ before(grammarAccess.getUpperBoundRule()); }
	 ruleUpperBound
{ after(grammarAccess.getUpperBoundRule()); } 
	 EOF 
;

// Rule UpperBound
ruleUpperBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperBoundAccess().getGroup()); }
		(rule__UpperBound__Group__0)
		{ after(grammarAccess.getUpperBoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitMeasuredType
entryRuleUnitMeasuredType
:
{ before(grammarAccess.getUnitMeasuredTypeRule()); }
	 ruleUnitMeasuredType
{ after(grammarAccess.getUnitMeasuredTypeRule()); } 
	 EOF 
;

// Rule UnitMeasuredType
ruleUnitMeasuredType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitMeasuredTypeAccess().getGroup()); }
		(rule__UnitMeasuredType__Group__0)
		{ after(grammarAccess.getUnitMeasuredTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeType
entryRuleTimeType
:
{ before(grammarAccess.getTimeTypeRule()); }
	 ruleTimeType
{ after(grammarAccess.getTimeTypeRule()); } 
	 EOF 
;

// Rule TimeType
ruleTimeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeTypeAccess().getGroup()); }
		(rule__TimeType__Group__0)
		{ after(grammarAccess.getTimeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedValue
entryRuleTypedValue
:
{ before(grammarAccess.getTypedValueRule()); }
	 ruleTypedValue
{ after(grammarAccess.getTypedValueRule()); } 
	 EOF 
;

// Rule TypedValue
ruleTypedValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedValueAccess().getAlternatives()); }
		(rule__TypedValue__Alternatives)
		{ after(grammarAccess.getTypedValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleValue
entryRuleSingleValue
:
{ before(grammarAccess.getSingleValueRule()); }
	 ruleSingleValue
{ after(grammarAccess.getSingleValueRule()); } 
	 EOF 
;

// Rule SingleValue
ruleSingleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleValueAccess().getAlternatives()); }
		(rule__SingleValue__Alternatives)
		{ after(grammarAccess.getSingleValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventValue
entryRuleEventValue
:
{ before(grammarAccess.getEventValueRule()); }
	 ruleEventValue
{ after(grammarAccess.getEventValueRule()); } 
	 EOF 
;

// Rule EventValue
ruleEventValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventValueAccess().getGroup()); }
		(rule__EventValue__Group__0)
		{ after(grammarAccess.getEventValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueAccess().getGroup()); }
		(rule__BooleanValue__Group__0)
		{ after(grammarAccess.getBooleanValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumValue
entryRuleEnumValue
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumValueAccess().getGroup()); }
		(rule__EnumValue__Group__0)
		{ after(grammarAccess.getEnumValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericValue
entryRuleNumericValue
:
{ before(grammarAccess.getNumericValueRule()); }
	 ruleNumericValue
{ after(grammarAccess.getNumericValueRule()); } 
	 EOF 
;

// Rule NumericValue
ruleNumericValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericValueAccess().getAlternatives()); }
		(rule__NumericValue__Alternatives)
		{ after(grammarAccess.getNumericValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitMeasuredValue
entryRuleUnitMeasuredValue
:
{ before(grammarAccess.getUnitMeasuredValueRule()); }
	 ruleUnitMeasuredValue
{ after(grammarAccess.getUnitMeasuredValueRule()); } 
	 EOF 
;

// Rule UnitMeasuredValue
ruleUnitMeasuredValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitMeasuredValueAccess().getAlternatives()); }
		(rule__UnitMeasuredValue__Alternatives)
		{ after(grammarAccess.getUnitMeasuredValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericValue_Impl
entryRuleNumericValue_Impl
:
{ before(grammarAccess.getNumericValue_ImplRule()); }
	 ruleNumericValue_Impl
{ after(grammarAccess.getNumericValue_ImplRule()); } 
	 EOF 
;

// Rule NumericValue_Impl
ruleNumericValue_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericValue_ImplAccess().getGroup()); }
		(rule__NumericValue_Impl__Group__0)
		{ after(grammarAccess.getNumericValue_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitMeasuredValue_Impl
entryRuleUnitMeasuredValue_Impl
:
{ before(grammarAccess.getUnitMeasuredValue_ImplRule()); }
	 ruleUnitMeasuredValue_Impl
{ after(grammarAccess.getUnitMeasuredValue_ImplRule()); } 
	 EOF 
;

// Rule UnitMeasuredValue_Impl
ruleUnitMeasuredValue_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitMeasuredValue_ImplAccess().getGroup()); }
		(rule__UnitMeasuredValue_Impl__Group__0)
		{ after(grammarAccess.getUnitMeasuredValue_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeValue
entryRuleTimeValue
:
{ before(grammarAccess.getTimeValueRule()); }
	 ruleTimeValue
{ after(grammarAccess.getTimeValueRule()); } 
	 EOF 
;

// Rule TimeValue
ruleTimeValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeValueAccess().getGroup()); }
		(rule__TimeValue__Group__0)
		{ after(grammarAccess.getTimeValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeUnitEnum
entryRuleTimeUnitEnum
:
{ before(grammarAccess.getTimeUnitEnumRule()); }
	 ruleTimeUnitEnum
{ after(grammarAccess.getTimeUnitEnumRule()); } 
	 EOF 
;

// Rule TimeUnitEnum
ruleTimeUnitEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getAlternatives()); }
		(rule__TimeUnitEnum__Alternatives)
		{ after(grammarAccess.getTimeUnitEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayValue
entryRuleArrayValue
:
{ before(grammarAccess.getArrayValueRule()); }
	 ruleArrayValue
{ after(grammarAccess.getArrayValueRule()); } 
	 EOF 
;

// Rule ArrayValue
ruleArrayValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayValueAccess().getAlternatives()); }
		(rule__ArrayValue__Alternatives)
		{ after(grammarAccess.getArrayValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanArray
entryRuleBooleanArray
:
{ before(grammarAccess.getBooleanArrayRule()); }
	 ruleBooleanArray
{ after(grammarAccess.getBooleanArrayRule()); } 
	 EOF 
;

// Rule BooleanArray
ruleBooleanArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanArrayAccess().getGroup()); }
		(rule__BooleanArray__Group__0)
		{ after(grammarAccess.getBooleanArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumArray
entryRuleEnumArray
:
{ before(grammarAccess.getEnumArrayRule()); }
	 ruleEnumArray
{ after(grammarAccess.getEnumArrayRule()); } 
	 EOF 
;

// Rule EnumArray
ruleEnumArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumArrayAccess().getGroup()); }
		(rule__EnumArray__Group__0)
		{ after(grammarAccess.getEnumArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericArray
entryRuleNumericArray
:
{ before(grammarAccess.getNumericArrayRule()); }
	 ruleNumericArray
{ after(grammarAccess.getNumericArrayRule()); } 
	 EOF 
;

// Rule NumericArray
ruleNumericArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericArrayAccess().getAlternatives()); }
		(rule__NumericArray__Alternatives)
		{ after(grammarAccess.getNumericArrayAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitMeasuredArray
entryRuleUnitMeasuredArray
:
{ before(grammarAccess.getUnitMeasuredArrayRule()); }
	 ruleUnitMeasuredArray
{ after(grammarAccess.getUnitMeasuredArrayRule()); } 
	 EOF 
;

// Rule UnitMeasuredArray
ruleUnitMeasuredArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitMeasuredArrayAccess().getAlternatives()); }
		(rule__UnitMeasuredArray__Alternatives)
		{ after(grammarAccess.getUnitMeasuredArrayAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericArray_Impl
entryRuleNumericArray_Impl
:
{ before(grammarAccess.getNumericArray_ImplRule()); }
	 ruleNumericArray_Impl
{ after(grammarAccess.getNumericArray_ImplRule()); } 
	 EOF 
;

// Rule NumericArray_Impl
ruleNumericArray_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericArray_ImplAccess().getGroup()); }
		(rule__NumericArray_Impl__Group__0)
		{ after(grammarAccess.getNumericArray_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitMeasuredArray_Impl
entryRuleUnitMeasuredArray_Impl
:
{ before(grammarAccess.getUnitMeasuredArray_ImplRule()); }
	 ruleUnitMeasuredArray_Impl
{ after(grammarAccess.getUnitMeasuredArray_ImplRule()); } 
	 EOF 
;

// Rule UnitMeasuredArray_Impl
ruleUnitMeasuredArray_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getGroup()); }
		(rule__UnitMeasuredArray_Impl__Group__0)
		{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeArray
entryRuleTimeArray
:
{ before(grammarAccess.getTimeArrayRule()); }
	 ruleTimeArray
{ after(grammarAccess.getTimeArrayRule()); } 
	 EOF 
;

// Rule TimeArray
ruleTimeArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeArrayAccess().getGroup()); }
		(rule__TimeArray__Group__0)
		{ after(grammarAccess.getTimeArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataTypeDeclaration
entryRuleDataTypeDeclaration
:
{ before(grammarAccess.getDataTypeDeclarationRule()); }
	 ruleDataTypeDeclaration
{ after(grammarAccess.getDataTypeDeclarationRule()); } 
	 EOF 
;

// Rule DataTypeDeclaration
ruleDataTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeDeclarationAccess().getAlternatives()); }
		(rule__DataTypeDeclaration__Alternatives)
		{ after(grammarAccess.getDataTypeDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainedDeclaration
entryRuleContainedDeclaration
:
{ before(grammarAccess.getContainedDeclarationRule()); }
	 ruleContainedDeclaration
{ after(grammarAccess.getContainedDeclarationRule()); } 
	 EOF 
;

// Rule ContainedDeclaration
ruleContainedDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainedDeclarationAccess().getTypeAssignment()); }
		(rule__ContainedDeclaration__TypeAssignment)
		{ after(grammarAccess.getContainedDeclarationAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInbuiltDeclaration
entryRuleInbuiltDeclaration
:
{ before(grammarAccess.getInbuiltDeclarationRule()); }
	 ruleInbuiltDeclaration
{ after(grammarAccess.getInbuiltDeclarationRule()); } 
	 EOF 
;

// Rule InbuiltDeclaration
ruleInbuiltDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInbuiltDeclarationAccess().getInbuiltDeclarationAction()); }
		()
		{ after(grammarAccess.getInbuiltDeclarationAccess().getInbuiltDeclarationAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferencedDeclaration
entryRuleReferencedDeclaration
:
{ before(grammarAccess.getReferencedDeclarationRule()); }
	 ruleReferencedDeclaration
{ after(grammarAccess.getReferencedDeclarationRule()); } 
	 EOF 
;

// Rule ReferencedDeclaration
ruleReferencedDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferencedDeclarationAccess().getTypeAssignment()); }
		(rule__ReferencedDeclaration__TypeAssignment)
		{ after(grammarAccess.getReferencedDeclarationAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralExpression
entryRuleGeneralExpression
:
{ before(grammarAccess.getGeneralExpressionRule()); }
	 ruleGeneralExpression
{ after(grammarAccess.getGeneralExpressionRule()); } 
	 EOF 
;

// Rule GeneralExpression
ruleGeneralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralExpressionAccess().getTermAssignment()); }
		(rule__GeneralExpression__TermAssignment)
		{ after(grammarAccess.getGeneralExpressionAccess().getTermAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputTransformation
entryRuleOutputTransformation
:
{ before(grammarAccess.getOutputTransformationRule()); }
	 ruleOutputTransformation
{ after(grammarAccess.getOutputTransformationRule()); } 
	 EOF 
;

// Rule OutputTransformation
ruleOutputTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputTransformationAccess().getTermAssignment()); }
		(rule__OutputTransformation__TermAssignment)
		{ after(grammarAccess.getOutputTransformationAccess().getTermAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContextPattern
entryRuleContextPattern
:
{ before(grammarAccess.getContextPatternRule()); }
	 ruleContextPattern
{ after(grammarAccess.getContextPatternRule()); } 
	 EOF 
;

// Rule ContextPattern
ruleContextPattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContextPatternAccess().getTermAssignment()); }
		(rule__ContextPattern__TermAssignment)
		{ after(grammarAccess.getContextPatternAccess().getTermAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getAlternatives()); }
		(rule__Term__Alternatives)
		{ after(grammarAccess.getTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnceTerm
entryRuleOnceTerm
:
{ before(grammarAccess.getOnceTermRule()); }
	 ruleOnceTerm
{ after(grammarAccess.getOnceTermRule()); } 
	 EOF 
;

// Rule OnceTerm
ruleOnceTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnceTermAccess().getGroup()); }
		(rule__OnceTerm__Group__0)
		{ after(grammarAccess.getOnceTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileTerm
entryRuleWhileTerm
:
{ before(grammarAccess.getWhileTermRule()); }
	 ruleWhileTerm
{ after(grammarAccess.getWhileTermRule()); } 
	 EOF 
;

// Rule WhileTerm
ruleWhileTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileTermAccess().getGroup()); }
		(rule__WhileTerm__Group__0)
		{ after(grammarAccess.getWhileTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepetionTerm
entryRuleRepetionTerm
:
{ before(grammarAccess.getRepetionTermRule()); }
	 ruleRepetionTerm
{ after(grammarAccess.getRepetionTermRule()); } 
	 EOF 
;

// Rule RepetionTerm
ruleRepetionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepetionTermAccess().getGroup()); }
		(rule__RepetionTerm__Group__0)
		{ after(grammarAccess.getRepetionTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceTerm
entryRuleSequenceTerm
:
{ before(grammarAccess.getSequenceTermRule()); }
	 ruleSequenceTerm
{ after(grammarAccess.getSequenceTermRule()); } 
	 EOF 
;

// Rule SequenceTerm
ruleSequenceTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceTermAccess().getGroup()); }
		(rule__SequenceTerm__Group__0)
		{ after(grammarAccess.getSequenceTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrEventTerm
entryRuleOrEventTerm
:
{ before(grammarAccess.getOrEventTermRule()); }
	 ruleOrEventTerm
{ after(grammarAccess.getOrEventTermRule()); } 
	 EOF 
;

// Rule OrEventTerm
ruleOrEventTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrEventTermAccess().getGroup()); }
		(rule__OrEventTerm__Group__0)
		{ after(grammarAccess.getOrEventTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndEventTerm
entryRuleAndEventTerm
:
{ before(grammarAccess.getAndEventTermRule()); }
	 ruleAndEventTerm
{ after(grammarAccess.getAndEventTermRule()); } 
	 EOF 
;

// Rule AndEventTerm
ruleAndEventTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndEventTermAccess().getGroup()); }
		(rule__AndEventTerm__Group__0)
		{ after(grammarAccess.getAndEventTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotEventTerm
entryRuleNotEventTerm
:
{ before(grammarAccess.getNotEventTermRule()); }
	 ruleNotEventTerm
{ after(grammarAccess.getNotEventTermRule()); } 
	 EOF 
;

// Rule NotEventTerm
ruleNotEventTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotEventTermAccess().getGroup()); }
		(rule__NotEventTerm__Group__0)
		{ after(grammarAccess.getNotEventTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm
:
{ before(grammarAccess.getConditionalTermRule()); }
	 ruleConditionalTerm
{ after(grammarAccess.getConditionalTermRule()); } 
	 EOF 
;

// Rule ConditionalTerm
ruleConditionalTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalTermAccess().getGroup()); }
		(rule__ConditionalTerm__Group__0)
		{ after(grammarAccess.getConditionalTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrBooleanTerm
entryRuleOrBooleanTerm
:
{ before(grammarAccess.getOrBooleanTermRule()); }
	 ruleOrBooleanTerm
{ after(grammarAccess.getOrBooleanTermRule()); } 
	 EOF 
;

// Rule OrBooleanTerm
ruleOrBooleanTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrBooleanTermAccess().getGroup()); }
		(rule__OrBooleanTerm__Group__0)
		{ after(grammarAccess.getOrBooleanTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndBooleanTerm
entryRuleAndBooleanTerm
:
{ before(grammarAccess.getAndBooleanTermRule()); }
	 ruleAndBooleanTerm
{ after(grammarAccess.getAndBooleanTermRule()); } 
	 EOF 
;

// Rule AndBooleanTerm
ruleAndBooleanTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndBooleanTermAccess().getGroup()); }
		(rule__AndBooleanTerm__Group__0)
		{ after(grammarAccess.getAndBooleanTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotBooleanTerm
entryRuleNotBooleanTerm
:
{ before(grammarAccess.getNotBooleanTermRule()); }
	 ruleNotBooleanTerm
{ after(grammarAccess.getNotBooleanTermRule()); } 
	 EOF 
;

// Rule NotBooleanTerm
ruleNotBooleanTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotBooleanTermAccess().getGroup()); }
		(rule__NotBooleanTerm__Group__0)
		{ after(grammarAccess.getNotBooleanTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalTerm
entryRuleRelationalTerm
:
{ before(grammarAccess.getRelationalTermRule()); }
	 ruleRelationalTerm
{ after(grammarAccess.getRelationalTermRule()); } 
	 EOF 
;

// Rule RelationalTerm
ruleRelationalTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalTermAccess().getGroup()); }
		(rule__RelationalTerm__Group__0)
		{ after(grammarAccess.getRelationalTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionTerm
entryRuleAdditionTerm
:
{ before(grammarAccess.getAdditionTermRule()); }
	 ruleAdditionTerm
{ after(grammarAccess.getAdditionTermRule()); } 
	 EOF 
;

// Rule AdditionTerm
ruleAdditionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionTermAccess().getGroup()); }
		(rule__AdditionTerm__Group__0)
		{ after(grammarAccess.getAdditionTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationTerm
entryRuleMultiplicationTerm
:
{ before(grammarAccess.getMultiplicationTermRule()); }
	 ruleMultiplicationTerm
{ after(grammarAccess.getMultiplicationTermRule()); } 
	 EOF 
;

// Rule MultiplicationTerm
ruleMultiplicationTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationTermAccess().getGroup()); }
		(rule__MultiplicationTerm__Group__0)
		{ after(grammarAccess.getMultiplicationTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryTerm
entryRulePrimaryTerm
:
{ before(grammarAccess.getPrimaryTermRule()); }
	 rulePrimaryTerm
{ after(grammarAccess.getPrimaryTermRule()); } 
	 EOF 
;

// Rule PrimaryTerm
rulePrimaryTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryTermAccess().getAlternatives()); }
		(rule__PrimaryTerm__Alternatives)
		{ after(grammarAccess.getPrimaryTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarTerm
entryRuleVarTerm
:
{ before(grammarAccess.getVarTermRule()); }
	 ruleVarTerm
{ after(grammarAccess.getVarTermRule()); } 
	 EOF 
;

// Rule VarTerm
ruleVarTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarTermAccess().getVariableAssignment()); }
		(rule__VarTerm__VariableAssignment)
		{ after(grammarAccess.getVarTermAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstTerm
entryRuleConstTerm
:
{ before(grammarAccess.getConstTermRule()); }
	 ruleConstTerm
{ after(grammarAccess.getConstTermRule()); } 
	 EOF 
;

// Rule ConstTerm
ruleConstTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstTermAccess().getValueAssignment()); }
		(rule__ConstTerm__ValueAssignment)
		{ after(grammarAccess.getConstTermAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelfTerm
entryRuleSelfTerm
:
{ before(grammarAccess.getSelfTermRule()); }
	 ruleSelfTerm
{ after(grammarAccess.getSelfTermRule()); } 
	 EOF 
;

// Rule SelfTerm
ruleSelfTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelfTermAccess().getGroup()); }
		(rule__SelfTerm__Group__0)
		{ after(grammarAccess.getSelfTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionTerm
entryRuleFunctionTerm
:
{ before(grammarAccess.getFunctionTermRule()); }
	 ruleFunctionTerm
{ after(grammarAccess.getFunctionTermRule()); } 
	 EOF 
;

// Rule FunctionTerm
ruleFunctionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTermAccess().getAlternatives()); }
		(rule__FunctionTerm__Alternatives)
		{ after(grammarAccess.getFunctionTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScheduleFunction
entryRuleScheduleFunction
:
{ before(grammarAccess.getScheduleFunctionRule()); }
	 ruleScheduleFunction
{ after(grammarAccess.getScheduleFunctionRule()); } 
	 EOF 
;

// Rule ScheduleFunction
ruleScheduleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScheduleFunctionAccess().getGroup()); }
		(rule__ScheduleFunction__Group__0)
		{ after(grammarAccess.getScheduleFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithFunction
entryRuleArithFunction
:
{ before(grammarAccess.getArithFunctionRule()); }
	 ruleArithFunction
{ after(grammarAccess.getArithFunctionRule()); } 
	 EOF 
;

// Rule ArithFunction
ruleArithFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithFunctionAccess().getGroup()); }
		(rule__ArithFunction__Group__0)
		{ after(grammarAccess.getArithFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregationFunction
entryRuleAggregationFunction
:
{ before(grammarAccess.getAggregationFunctionRule()); }
	 ruleAggregationFunction
{ after(grammarAccess.getAggregationFunctionRule()); } 
	 EOF 
;

// Rule AggregationFunction
ruleAggregationFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregationFunctionAccess().getGroup()); }
		(rule__AggregationFunction__Group__0)
		{ after(grammarAccess.getAggregationFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternFunction
entryRulePatternFunction
:
{ before(grammarAccess.getPatternFunctionRule()); }
	 rulePatternFunction
{ after(grammarAccess.getPatternFunctionRule()); } 
	 EOF 
;

// Rule PatternFunction
rulePatternFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternFunctionAccess().getGroup()); }
		(rule__PatternFunction__Group__0)
		{ after(grammarAccess.getPatternFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionFunction
entryRuleCollectionFunction
:
{ before(grammarAccess.getCollectionFunctionRule()); }
	 ruleCollectionFunction
{ after(grammarAccess.getCollectionFunctionRule()); } 
	 EOF 
;

// Rule CollectionFunction
ruleCollectionFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionFunctionAccess().getGroup()); }
		(rule__CollectionFunction__Group__0)
		{ after(grammarAccess.getCollectionFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getGroup()); }
		(rule__EDouble__Group__0)
		{ after(grammarAccess.getEDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBoolean
entryRuleEBoolean
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
		(rule__EBoolean__Alternatives)
		{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralQualifiedName
entryRuleLiteralQualifiedName
:
{ before(grammarAccess.getLiteralQualifiedNameRule()); }
	 ruleLiteralQualifiedName
{ after(grammarAccess.getLiteralQualifiedNameRule()); } 
	 EOF 
;

// Rule LiteralQualifiedName
ruleLiteralQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralQualifiedNameAccess().getGroup()); }
		(rule__LiteralQualifiedName__Group__0)
		{ after(grammarAccess.getLiteralQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementDescription
entryRuleElementDescription
:
{ before(grammarAccess.getElementDescriptionRule()); }
	 ruleElementDescription
{ after(grammarAccess.getElementDescriptionRule()); } 
	 EOF 
;

// Rule ElementDescription
ruleElementDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getROQME_DESCRIPTIONTerminalRuleCall()); }
		RULE_ROQME_DESCRIPTION
		{ after(grammarAccess.getElementDescriptionAccess().getROQME_DESCRIPTIONTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule InfluenceEnum
ruleInfluenceEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfluenceEnumAccess().getAlternatives()); }
		(rule__InfluenceEnum__Alternatives)
		{ after(grammarAccess.getInfluenceEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule StrengthEnum
ruleStrengthEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrengthEnumAccess().getAlternatives()); }
		(rule__StrengthEnum__Alternatives)
		{ after(grammarAccess.getStrengthEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ArithFtnEnum
ruleArithFtnEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithFtnEnumAccess().getAlternatives()); }
		(rule__ArithFtnEnum__Alternatives)
		{ after(grammarAccess.getArithFtnEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AggregationFtnEnum
ruleAggregationFtnEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getAlternatives()); }
		(rule__AggregationFtnEnum__Alternatives)
		{ after(grammarAccess.getAggregationFtnEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PatternFtnEnum
rulePatternFtnEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternFtnEnumAccess().getAlternatives()); }
		(rule__PatternFtnEnum__Alternatives)
		{ after(grammarAccess.getPatternFtnEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CollectionFtnEnum
ruleCollectionFtnEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionFtnEnumAccess().getAlternatives()); }
		(rule__CollectionFtnEnum__Alternatives)
		{ after(grammarAccess.getCollectionFtnEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoqmeModelAccess().getDataTypesAssignment_2_0()); }
		(rule__RoqmeModel__DataTypesAssignment_2_0)
		{ after(grammarAccess.getRoqmeModelAccess().getDataTypesAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRoqmeModelAccess().getVariablesAssignment_2_1()); }
		(rule__RoqmeModel__VariablesAssignment_2_1)
		{ after(grammarAccess.getRoqmeModelAccess().getVariablesAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getRoqmeModelAccess().getSentencesAssignment_2_2()); }
		(rule__RoqmeModel__SentencesAssignment_2_2)
		{ after(grammarAccess.getRoqmeModelAccess().getSentencesAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedVariableAccess().getParameterParserRuleCall_0()); }
		ruleParameter
		{ after(grammarAccess.getTypedVariableAccess().getParameterParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypedVariableAccess().getTimerParserRuleCall_1()); }
		ruleTimer
		{ after(grammarAccess.getTypedVariableAccess().getTimerParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypedVariableAccess().getGeneralPurposeVariableParserRuleCall_2()); }
		ruleGeneralPurposeVariable
		{ after(grammarAccess.getTypedVariableAccess().getGeneralPurposeVariableParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypedVariableAccess().getContextParserRuleCall_3()); }
		ruleContext
		{ after(grammarAccess.getTypedVariableAccess().getContextParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypedVariableAccess().getBeliefVariableParserRuleCall_4()); }
		ruleBeliefVariable
		{ after(grammarAccess.getTypedVariableAccess().getBeliefVariableParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextAccess().getDerivedContextParserRuleCall_0()); }
		ruleDerivedContext
		{ after(grammarAccess.getContextAccess().getDerivedContextParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContextAccess().getPrimitiveContextParserRuleCall_1()); }
		rulePrimitiveContext
		{ after(grammarAccess.getContextAccess().getPrimitiveContextParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeliefVariableAccess().getBeliefVariableImplParserRuleCall_0()); }
		ruleBeliefVariableImpl
		{ after(grammarAccess.getBeliefVariableAccess().getBeliefVariableImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBeliefVariableAccess().getPropertyParserRuleCall_1()); }
		ruleProperty
		{ after(grammarAccess.getBeliefVariableAccess().getPropertyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup_3_0()); }
		(rule__Property__Group_3_0__0)
		{ after(grammarAccess.getPropertyAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getDeclarationAssignment_3_1()); }
		(rule__Property__DeclarationAssignment_3_1)
		{ after(grammarAccess.getPropertyAccess().getDeclarationAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getActionsAssignment_5_0()); }
		(rule__Observation__ActionsAssignment_5_0)
		{ after(grammarAccess.getObservationAccess().getActionsAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getObservationAccess().getGroup_5_1()); }
		(rule__Observation__Group_5_1__0)
		{ after(grammarAccess.getObservationAccess().getGroup_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getSetVariableParserRuleCall_0()); }
		ruleSetVariable
		{ after(grammarAccess.getActionAccess().getSetVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getClearEvidenceParserRuleCall_1()); }
		ruleClearEvidence
		{ after(grammarAccess.getActionAccess().getClearEvidenceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getSetEvidenceParserRuleCall_2()); }
		ruleSetEvidence
		{ after(grammarAccess.getActionAccess().getSetEvidenceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getTimerActionParserRuleCall_3()); }
		ruleTimerAction
		{ after(grammarAccess.getActionAccess().getTimerActionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerActionAccess().getStartTimerParserRuleCall_0()); }
		ruleStartTimer
		{ after(grammarAccess.getTimerActionAccess().getStartTimerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimerActionAccess().getStopTimerParserRuleCall_1()); }
		ruleStopTimer
		{ after(grammarAccess.getTimerActionAccess().getStopTimerParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimerActionAccess().getResumeTimerParserRuleCall_2()); }
		ruleResumeTimer
		{ after(grammarAccess.getTimerActionAccess().getResumeTimerParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getBooleanTypeParserRuleCall_0()); }
		ruleBooleanType
		{ after(grammarAccess.getDataTypeAccess().getBooleanTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getEnumTypeParserRuleCall_1()); }
		ruleEnumType
		{ after(grammarAccess.getDataTypeAccess().getEnumTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getEventTypeParserRuleCall_2()); }
		ruleEventType
		{ after(grammarAccess.getDataTypeAccess().getEventTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getNumericTypeParserRuleCall_3()); }
		ruleNumericType
		{ after(grammarAccess.getDataTypeAccess().getNumericTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getUnitMeasuredTypeParserRuleCall_4()); }
		ruleUnitMeasuredType
		{ after(grammarAccess.getDataTypeAccess().getUnitMeasuredTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getTimeTypeParserRuleCall_5()); }
		ruleTimeType
		{ after(grammarAccess.getDataTypeAccess().getTimeTypeParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeConstraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeConstraintAccess().getLowerBoundParserRuleCall_0()); }
		ruleLowerBound
		{ after(grammarAccess.getNumericTypeConstraintAccess().getLowerBoundParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypeConstraintAccess().getUpperBoundParserRuleCall_1()); }
		ruleUpperBound
		{ after(grammarAccess.getNumericTypeConstraintAccess().getUpperBoundParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedValueAccess().getSingleValueParserRuleCall_0()); }
		ruleSingleValue
		{ after(grammarAccess.getTypedValueAccess().getSingleValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypedValueAccess().getArrayValueParserRuleCall_1()); }
		ruleArrayValue
		{ after(grammarAccess.getTypedValueAccess().getArrayValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getBooleanValueParserRuleCall_0()); }
		ruleBooleanValue
		{ after(grammarAccess.getSingleValueAccess().getBooleanValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getEnumValueParserRuleCall_1()); }
		ruleEnumValue
		{ after(grammarAccess.getSingleValueAccess().getEnumValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getNumericValueParserRuleCall_2()); }
		ruleNumericValue
		{ after(grammarAccess.getSingleValueAccess().getNumericValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getEventValueParserRuleCall_3()); }
		ruleEventValue
		{ after(grammarAccess.getSingleValueAccess().getEventValueParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValueAccess().getNumericValue_ImplParserRuleCall_0()); }
		ruleNumericValue_Impl
		{ after(grammarAccess.getNumericValueAccess().getNumericValue_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericValueAccess().getUnitMeasuredValueParserRuleCall_1()); }
		ruleUnitMeasuredValue
		{ after(grammarAccess.getNumericValueAccess().getUnitMeasuredValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredValueAccess().getUnitMeasuredValue_ImplParserRuleCall_0()); }
		ruleUnitMeasuredValue_Impl
		{ after(grammarAccess.getUnitMeasuredValueAccess().getUnitMeasuredValue_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitMeasuredValueAccess().getTimeValueParserRuleCall_1()); }
		ruleTimeValue
		{ after(grammarAccess.getUnitMeasuredValueAccess().getTimeValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnitEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getMillisecondsKeyword_0()); }
		'milliseconds'
		{ after(grammarAccess.getTimeUnitEnumAccess().getMillisecondsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getSecondsKeyword_1()); }
		'seconds'
		{ after(grammarAccess.getTimeUnitEnumAccess().getSecondsKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getMinutesKeyword_2()); }
		'minutes'
		{ after(grammarAccess.getTimeUnitEnumAccess().getMinutesKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getHoursKeyword_3()); }
		'hours'
		{ after(grammarAccess.getTimeUnitEnumAccess().getHoursKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getDaysKeyword_4()); }
		'days'
		{ after(grammarAccess.getTimeUnitEnumAccess().getDaysKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getMillisecondKeyword_5()); }
		'millisecond'
		{ after(grammarAccess.getTimeUnitEnumAccess().getMillisecondKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getSecondKeyword_6()); }
		'second'
		{ after(grammarAccess.getTimeUnitEnumAccess().getSecondKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getMinuteKeyword_7()); }
		'minute'
		{ after(grammarAccess.getTimeUnitEnumAccess().getMinuteKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getHourKeyword_8()); }
		'hour'
		{ after(grammarAccess.getTimeUnitEnumAccess().getHourKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitEnumAccess().getDayKeyword_9()); }
		'day'
		{ after(grammarAccess.getTimeUnitEnumAccess().getDayKeyword_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getNumericArrayParserRuleCall_0()); }
		ruleNumericArray
		{ after(grammarAccess.getArrayValueAccess().getNumericArrayParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayValueAccess().getBooleanArrayParserRuleCall_1()); }
		ruleBooleanArray
		{ after(grammarAccess.getArrayValueAccess().getBooleanArrayParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getArrayValueAccess().getEnumArrayParserRuleCall_2()); }
		ruleEnumArray
		{ after(grammarAccess.getArrayValueAccess().getEnumArrayParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericArrayAccess().getNumericArray_ImplParserRuleCall_0()); }
		ruleNumericArray_Impl
		{ after(grammarAccess.getNumericArrayAccess().getNumericArray_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericArrayAccess().getUnitMeasuredArrayParserRuleCall_1()); }
		ruleUnitMeasuredArray
		{ after(grammarAccess.getNumericArrayAccess().getUnitMeasuredArrayParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredArrayAccess().getUnitMeasuredArray_ImplParserRuleCall_0()); }
		ruleUnitMeasuredArray_Impl
		{ after(grammarAccess.getUnitMeasuredArrayAccess().getUnitMeasuredArray_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitMeasuredArrayAccess().getTimeArrayParserRuleCall_1()); }
		ruleTimeArray
		{ after(grammarAccess.getUnitMeasuredArrayAccess().getTimeArrayParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeDeclarationAccess().getInbuiltDeclarationParserRuleCall_0()); }
		ruleInbuiltDeclaration
		{ after(grammarAccess.getDataTypeDeclarationAccess().getInbuiltDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeDeclarationAccess().getReferencedDeclarationParserRuleCall_1()); }
		ruleReferencedDeclaration
		{ after(grammarAccess.getDataTypeDeclarationAccess().getReferencedDeclarationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeDeclarationAccess().getContainedDeclarationParserRuleCall_2()); }
		ruleContainedDeclaration
		{ after(grammarAccess.getDataTypeDeclarationAccess().getContainedDeclarationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getOnceTermParserRuleCall_0()); }
		ruleOnceTerm
		{ after(grammarAccess.getTermAccess().getOnceTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getWhileTermParserRuleCall_1()); }
		ruleWhileTerm
		{ after(grammarAccess.getTermAccess().getWhileTermParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetionTermAccess().getGroup_1_0()); }
		(rule__RepetionTerm__Group_1_0__0)
		{ after(grammarAccess.getRepetionTermAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRepetionTermAccess().getGroup_1_1()); }
		(rule__RepetionTerm__Group_1_1__0)
		{ after(grammarAccess.getRepetionTermAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndEventTermAccess().getNotEventTermParserRuleCall_0_0()); }
		ruleNotEventTerm
		{ after(grammarAccess.getAndEventTermAccess().getNotEventTermParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndEventTermAccess().getConditionalTermParserRuleCall_0_1()); }
		ruleConditionalTerm
		{ after(grammarAccess.getAndEventTermAccess().getConditionalTermParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__RightAlternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndEventTermAccess().getRightNotEventTermParserRuleCall_1_2_0_0()); }
		ruleNotEventTerm
		{ after(grammarAccess.getAndEventTermAccess().getRightNotEventTermParserRuleCall_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndEventTermAccess().getRightConditionalTermParserRuleCall_1_2_0_1()); }
		ruleConditionalTerm
		{ after(grammarAccess.getAndEventTermAccess().getRightConditionalTermParserRuleCall_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndBooleanTermAccess().getNotBooleanTermParserRuleCall_0_0()); }
		ruleNotBooleanTerm
		{ after(grammarAccess.getAndBooleanTermAccess().getNotBooleanTermParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndBooleanTermAccess().getRelationalTermParserRuleCall_0_1()); }
		ruleRelationalTerm
		{ after(grammarAccess.getAndBooleanTermAccess().getRelationalTermParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__RightAlternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndBooleanTermAccess().getRightNotBooleanTermParserRuleCall_1_2_0_0()); }
		ruleNotBooleanTerm
		{ after(grammarAccess.getAndBooleanTermAccess().getRightNotBooleanTermParserRuleCall_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndBooleanTermAccess().getRightRelationalTermParserRuleCall_1_2_0_1()); }
		ruleRelationalTerm
		{ after(grammarAccess.getAndBooleanTermAccess().getRightRelationalTermParserRuleCall_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalTermAccess().getGroup_1_0_0()); }
		(rule__RelationalTerm__Group_1_0_0__0)
		{ after(grammarAccess.getRelationalTermAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalTermAccess().getGroup_1_0_1()); }
		(rule__RelationalTerm__Group_1_0_1__0)
		{ after(grammarAccess.getRelationalTermAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalTermAccess().getGroup_1_0_2()); }
		(rule__RelationalTerm__Group_1_0_2__0)
		{ after(grammarAccess.getRelationalTermAccess().getGroup_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalTermAccess().getGroup_1_0_3()); }
		(rule__RelationalTerm__Group_1_0_3__0)
		{ after(grammarAccess.getRelationalTermAccess().getGroup_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalTermAccess().getGroup_1_0_4()); }
		(rule__RelationalTerm__Group_1_0_4__0)
		{ after(grammarAccess.getRelationalTermAccess().getGroup_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalTermAccess().getGroup_1_0_5()); }
		(rule__RelationalTerm__Group_1_0_5__0)
		{ after(grammarAccess.getRelationalTermAccess().getGroup_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionTermAccess().getGroup_1_0_0()); }
		(rule__AdditionTerm__Group_1_0_0__0)
		{ after(grammarAccess.getAdditionTermAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionTermAccess().getGroup_1_0_1()); }
		(rule__AdditionTerm__Group_1_0_1__0)
		{ after(grammarAccess.getAdditionTermAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationTermAccess().getGroup_1_0_0()); }
		(rule__MultiplicationTerm__Group_1_0_0__0)
		{ after(grammarAccess.getMultiplicationTermAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationTermAccess().getGroup_1_0_1()); }
		(rule__MultiplicationTerm__Group_1_0_1__0)
		{ after(grammarAccess.getMultiplicationTermAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryTermAccess().getGroup_0()); }
		(rule__PrimaryTerm__Group_0__0)
		{ after(grammarAccess.getPrimaryTermAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryTermAccess().getConstTermParserRuleCall_1()); }
		ruleConstTerm
		{ after(grammarAccess.getPrimaryTermAccess().getConstTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryTermAccess().getVarTermParserRuleCall_2()); }
		ruleVarTerm
		{ after(grammarAccess.getPrimaryTermAccess().getVarTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryTermAccess().getSelfTermParserRuleCall_3()); }
		ruleSelfTerm
		{ after(grammarAccess.getPrimaryTermAccess().getSelfTermParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryTermAccess().getFunctionTermParserRuleCall_4()); }
		ruleFunctionTerm
		{ after(grammarAccess.getPrimaryTermAccess().getFunctionTermParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTermAccess().getArithFunctionParserRuleCall_0()); }
		ruleArithFunction
		{ after(grammarAccess.getFunctionTermAccess().getArithFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionTermAccess().getAggregationFunctionParserRuleCall_1()); }
		ruleAggregationFunction
		{ after(grammarAccess.getFunctionTermAccess().getAggregationFunctionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionTermAccess().getPatternFunctionParserRuleCall_2()); }
		rulePatternFunction
		{ after(grammarAccess.getFunctionTermAccess().getPatternFunctionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionTermAccess().getCollectionFunctionParserRuleCall_3()); }
		ruleCollectionFunction
		{ after(grammarAccess.getFunctionTermAccess().getCollectionFunctionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionTermAccess().getScheduleFunctionParserRuleCall_4()); }
		ruleScheduleFunction
		{ after(grammarAccess.getFunctionTermAccess().getScheduleFunctionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__TermsAlternatives_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0()); }
		ruleVarTerm
		{ after(grammarAccess.getArithFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1()); }
		ruleSelfTerm
		{ after(grammarAccess.getArithFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__TermsAlternatives_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0()); }
		ruleVarTerm
		{ after(grammarAccess.getAggregationFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1()); }
		ruleSelfTerm
		{ after(grammarAccess.getAggregationFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__TermsAlternatives_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0()); }
		ruleVarTerm
		{ after(grammarAccess.getPatternFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1()); }
		ruleSelfTerm
		{ after(grammarAccess.getPatternFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__TermsAlternatives_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0()); }
		ruleVarTerm
		{ after(grammarAccess.getCollectionFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1()); }
		ruleSelfTerm
		{ after(grammarAccess.getCollectionFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfluenceEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfluenceEnumAccess().getREINFORCEEnumLiteralDeclaration_0()); }
		('reinforces')
		{ after(grammarAccess.getInfluenceEnumAccess().getREINFORCEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getInfluenceEnumAccess().getUNDERMINEEnumLiteralDeclaration_1()); }
		('undermines')
		{ after(grammarAccess.getInfluenceEnumAccess().getUNDERMINEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrengthEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrengthEnumAccess().getVERY_HIGHEnumLiteralDeclaration_0()); }
		('veryhigh')
		{ after(grammarAccess.getStrengthEnumAccess().getVERY_HIGHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getStrengthEnumAccess().getHIGHEnumLiteralDeclaration_1()); }
		('high')
		{ after(grammarAccess.getStrengthEnumAccess().getHIGHEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getStrengthEnumAccess().getMEDIUMEnumLiteralDeclaration_2()); }
		('MEDIUM')
		{ after(grammarAccess.getStrengthEnumAccess().getMEDIUMEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getStrengthEnumAccess().getLOWEnumLiteralDeclaration_3()); }
		('low')
		{ after(grammarAccess.getStrengthEnumAccess().getLOWEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getStrengthEnumAccess().getVERY_LOWEnumLiteralDeclaration_4()); }
		('verylow')
		{ after(grammarAccess.getStrengthEnumAccess().getVERY_LOWEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFtnEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithFtnEnumAccess().getPOWEnumLiteralDeclaration_0()); }
		('pow')
		{ after(grammarAccess.getArithFtnEnumAccess().getPOWEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithFtnEnumAccess().getSQRTEnumLiteralDeclaration_1()); }
		('sqrt')
		{ after(grammarAccess.getArithFtnEnumAccess().getSQRTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getArithFtnEnumAccess().getEXPEnumLiteralDeclaration_2()); }
		('exp')
		{ after(grammarAccess.getArithFtnEnumAccess().getEXPEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getArithFtnEnumAccess().getABSEnumLiteralDeclaration_3()); }
		('abs')
		{ after(grammarAccess.getArithFtnEnumAccess().getABSEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFtnEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getAVGEnumLiteralDeclaration_0()); }
		('avg')
		{ after(grammarAccess.getAggregationFtnEnumAccess().getAVGEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getMINEnumLiteralDeclaration_1()); }
		('min')
		{ after(grammarAccess.getAggregationFtnEnumAccess().getMINEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getMAXEnumLiteralDeclaration_2()); }
		('max')
		{ after(grammarAccess.getAggregationFtnEnumAccess().getMAXEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getCOUNTEnumLiteralDeclaration_3()); }
		('count')
		{ after(grammarAccess.getAggregationFtnEnumAccess().getCOUNTEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getSUMEnumLiteralDeclaration_4()); }
		('sum')
		{ after(grammarAccess.getAggregationFtnEnumAccess().getSUMEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getDECREASINGEnumLiteralDeclaration_5()); }
		('decreasing')
		{ after(grammarAccess.getAggregationFtnEnumAccess().getDECREASINGEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getINCREASINGEnumLiteralDeclaration_6()); }
		('increasing')
		{ after(grammarAccess.getAggregationFtnEnumAccess().getINCREASINGEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationFtnEnumAccess().getSTABLEEnumLiteralDeclaration_7()); }
		('stable')
		{ after(grammarAccess.getAggregationFtnEnumAccess().getSTABLEEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFtnEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternFtnEnumAccess().getEVENT_WHENEnumLiteralDeclaration_0()); }
		('eventWhen')
		{ after(grammarAccess.getPatternFtnEnumAccess().getEVENT_WHENEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternFtnEnumAccess().getUPDATEEnumLiteralDeclaration_1()); }
		('update')
		{ after(grammarAccess.getPatternFtnEnumAccess().getUPDATEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPatternFtnEnumAccess().getPERIODEnumLiteralDeclaration_2()); }
		('period')
		{ after(grammarAccess.getPatternFtnEnumAccess().getPERIODEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFtnEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionFtnEnumAccess().getFIRSTEnumLiteralDeclaration_0()); }
		('first')
		{ after(grammarAccess.getCollectionFtnEnumAccess().getFIRSTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionFtnEnumAccess().getLASTEnumLiteralDeclaration_1()); }
		('last')
		{ after(grammarAccess.getCollectionFtnEnumAccess().getLASTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionFtnEnumAccess().getATEnumLiteralDeclaration_2()); }
		('at')
		{ after(grammarAccess.getCollectionFtnEnumAccess().getATEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionFtnEnumAccess().getSIZEEnumLiteralDeclaration_3()); }
		('size')
		{ after(grammarAccess.getCollectionFtnEnumAccess().getSIZEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionFtnEnumAccess().getIS_EMPTYEnumLiteralDeclaration_4()); }
		('isEmpty')
		{ after(grammarAccess.getCollectionFtnEnumAccess().getIS_EMPTYEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionFtnEnumAccess().getINCLUDESEnumLiteralDeclaration_5()); }
		('includes')
		{ after(grammarAccess.getCollectionFtnEnumAccess().getINCLUDESEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoqmeModel__Group__0__Impl
	rule__RoqmeModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoqmeModelAccess().getGroup_0()); }
	(rule__RoqmeModel__Group_0__0)?
	{ after(grammarAccess.getRoqmeModelAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoqmeModel__Group__1__Impl
	rule__RoqmeModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoqmeModelAccess().getSentencesAssignment_1()); }
	(rule__RoqmeModel__SentencesAssignment_1)*
	{ after(grammarAccess.getRoqmeModelAccess().getSentencesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoqmeModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoqmeModelAccess().getAlternatives_2()); }
	(rule__RoqmeModel__Alternatives_2)*
	{ after(grammarAccess.getRoqmeModelAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoqmeModel__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoqmeModel__Group_0__0__Impl
	rule__RoqmeModel__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoqmeModelAccess().getDescriptionAssignment_0_0()); }
	(rule__RoqmeModel__DescriptionAssignment_0_0)?
	{ after(grammarAccess.getRoqmeModelAccess().getDescriptionAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoqmeModel__Group_0__1__Impl
	rule__RoqmeModel__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoqmeModelAccess().getRoqmeKeyword_0_1()); }
	'roqme'
	{ after(grammarAccess.getRoqmeModelAccess().getRoqmeKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoqmeModel__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoqmeModelAccess().getNamespaceAssignment_0_2()); }
	(rule__RoqmeModel__NamespaceAssignment_0_2)
	{ after(grammarAccess.getRoqmeModelAccess().getNamespaceAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveContext__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveContext__Group__0__Impl
	rule__PrimitiveContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveContextAccess().getDescriptionAssignment_0()); }
	(rule__PrimitiveContext__DescriptionAssignment_0)?
	{ after(grammarAccess.getPrimitiveContextAccess().getDescriptionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveContext__Group__1__Impl
	rule__PrimitiveContext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveContextAccess().getContextKeyword_1()); }
	'context'
	{ after(grammarAccess.getPrimitiveContextAccess().getContextKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveContext__Group__2__Impl
	rule__PrimitiveContext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveContextAccess().getNameAssignment_2()); }
	(rule__PrimitiveContext__NameAssignment_2)
	{ after(grammarAccess.getPrimitiveContextAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveContext__Group__3__Impl
	rule__PrimitiveContext__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveContextAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getPrimitiveContextAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveContext__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveContextAccess().getDeclarationAssignment_4()); }
	(rule__PrimitiveContext__DeclarationAssignment_4)
	{ after(grammarAccess.getPrimitiveContextAccess().getDeclarationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivedContext__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedContext__Group__0__Impl
	rule__DerivedContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedContextAccess().getDescriptionAssignment_0()); }
	(rule__DerivedContext__DescriptionAssignment_0)?
	{ after(grammarAccess.getDerivedContextAccess().getDescriptionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedContext__Group__1__Impl
	rule__DerivedContext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedContextAccess().getContextKeyword_1()); }
	'context'
	{ after(grammarAccess.getDerivedContextAccess().getContextKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedContext__Group__2__Impl
	rule__DerivedContext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedContextAccess().getNameAssignment_2()); }
	(rule__DerivedContext__NameAssignment_2)
	{ after(grammarAccess.getDerivedContextAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedContext__Group__3__Impl
	rule__DerivedContext__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedContextAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getDerivedContextAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedContext__Group__4__Impl
	rule__DerivedContext__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedContextAccess().getDeclarationAssignment_4()); }
	(rule__DerivedContext__DeclarationAssignment_4)
	{ after(grammarAccess.getDerivedContextAccess().getDeclarationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedContext__Group__5__Impl
	rule__DerivedContext__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedContextAccess().getColonEqualsSignKeyword_5()); }
	':='
	{ after(grammarAccess.getDerivedContextAccess().getColonEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedContext__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedContextAccess().getDefinitionAssignment_6()); }
	(rule__DerivedContext__DefinitionAssignment_6)
	{ after(grammarAccess.getDerivedContextAccess().getDefinitionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralPurposeVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralPurposeVariable__Group__0__Impl
	rule__GeneralPurposeVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralPurposeVariableAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getGeneralPurposeVariableAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralPurposeVariable__Group__1__Impl
	rule__GeneralPurposeVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralPurposeVariableAccess().getNameAssignment_1()); }
	(rule__GeneralPurposeVariable__NameAssignment_1)
	{ after(grammarAccess.getGeneralPurposeVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralPurposeVariable__Group__2__Impl
	rule__GeneralPurposeVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralPurposeVariableAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getGeneralPurposeVariableAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralPurposeVariable__Group__3__Impl
	rule__GeneralPurposeVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralPurposeVariableAccess().getDeclarationAssignment_3()); }
	(rule__GeneralPurposeVariable__DeclarationAssignment_3)
	{ after(grammarAccess.getGeneralPurposeVariableAccess().getDeclarationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralPurposeVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralPurposeVariableAccess().getGroup_4()); }
	(rule__GeneralPurposeVariable__Group_4__0)
	{ after(grammarAccess.getGeneralPurposeVariableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralPurposeVariable__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralPurposeVariable__Group_4__0__Impl
	rule__GeneralPurposeVariable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralPurposeVariableAccess().getColonEqualsSignKeyword_4_0()); }
	':='
	{ after(grammarAccess.getGeneralPurposeVariableAccess().getColonEqualsSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralPurposeVariable__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralPurposeVariableAccess().getDefinitionAssignment_4_1()); }
	(rule__GeneralPurposeVariable__DefinitionAssignment_4_1)
	{ after(grammarAccess.getGeneralPurposeVariableAccess().getDefinitionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getDescriptionAssignment_0()); }
	(rule__Parameter__DescriptionAssignment_0)?
	{ after(grammarAccess.getParameterAccess().getDescriptionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParamKeyword_1()); }
	'param'
	{ after(grammarAccess.getParameterAccess().getParamKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_2()); }
	(rule__Parameter__NameAssignment_2)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__4__Impl
	rule__Parameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getDeclarationAssignment_4()); }
	(rule__Parameter__DeclarationAssignment_4)
	{ after(grammarAccess.getParameterAccess().getDeclarationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_5()); }
	(rule__Parameter__Group_5__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_5__0__Impl
	rule__Parameter__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getDefaultKeyword_5_0()); }
	'default'
	{ after(grammarAccess.getParameterAccess().getDefaultKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getInitializedToAssignment_5_1()); }
	(rule__Parameter__InitializedToAssignment_5_1)
	{ after(grammarAccess.getParameterAccess().getInitializedToAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__0__Impl
	rule__Timer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimerKeyword_0()); }
	'timer'
	{ after(grammarAccess.getTimerAccess().getTimerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__1__Impl
	rule__Timer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getNameAssignment_1()); }
	(rule__Timer__NameAssignment_1)
	{ after(grammarAccess.getTimerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__2__Impl
	rule__Timer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getDeclarationAssignment_2()); }
	(rule__Timer__DeclarationAssignment_2)
	{ after(grammarAccess.getTimerAccess().getDeclarationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getUnorderedGroup_3()); }
	(rule__Timer__UnorderedGroup_3)
	{ after(grammarAccess.getTimerAccess().getUnorderedGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_3_0__0__Impl
	rule__Timer__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getOffsetKeyword_3_0_0()); }
	'offset'
	{ after(grammarAccess.getTimerAccess().getOffsetKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getOffsetAssignment_3_0_1()); }
	(rule__Timer__OffsetAssignment_3_0_1)
	{ after(grammarAccess.getTimerAccess().getOffsetAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_3_3__0__Impl
	rule__Timer__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getColonEqualsSignKeyword_3_3_0()); }
	':='
	{ after(grammarAccess.getTimerAccess().getColonEqualsSignKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getDefinitionAssignment_3_3_1()); }
	(rule__Timer__DefinitionAssignment_3_3_1)
	{ after(grammarAccess.getTimerAccess().getDefinitionAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeliefVariableImpl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group__0__Impl
	rule__BeliefVariableImpl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getDescriptionAssignment_0()); }
	(rule__BeliefVariableImpl__DescriptionAssignment_0)?
	{ after(grammarAccess.getBeliefVariableImplAccess().getDescriptionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group__1__Impl
	rule__BeliefVariableImpl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getBeliefvarKeyword_1()); }
	'beliefvar'
	{ after(grammarAccess.getBeliefVariableImplAccess().getBeliefvarKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group__2__Impl
	rule__BeliefVariableImpl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getNameAssignment_2()); }
	(rule__BeliefVariableImpl__NameAssignment_2)
	{ after(grammarAccess.getBeliefVariableImplAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group__3__Impl
	rule__BeliefVariableImpl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getDeclarationAssignment_3()); }
	(rule__BeliefVariableImpl__DeclarationAssignment_3)
	{ after(grammarAccess.getBeliefVariableImplAccess().getDeclarationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4()); }
	(rule__BeliefVariableImpl__UnorderedGroup_4)
	{ after(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeliefVariableImpl__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group_4_0__0__Impl
	rule__BeliefVariableImpl__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getReferenceKeyword_4_0_0()); }
	'reference'
	{ after(grammarAccess.getBeliefVariableImplAccess().getReferenceKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getReferenceAssignment_4_0_1()); }
	(rule__BeliefVariableImpl__ReferenceAssignment_4_0_1)
	{ after(grammarAccess.getBeliefVariableImplAccess().getReferenceAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeliefVariableImpl__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group_4_1__0__Impl
	rule__BeliefVariableImpl__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getSurvivalKeyword_4_1_0()); }
	'survival'
	{ after(grammarAccess.getBeliefVariableImplAccess().getSurvivalKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeliefVariableImplAccess().getSurvivalAssignment_4_1_1()); }
	(rule__BeliefVariableImpl__SurvivalAssignment_4_1_1)
	{ after(grammarAccess.getBeliefVariableImplAccess().getSurvivalAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getDescriptionAssignment_0()); }
	(rule__Property__DescriptionAssignment_0)?
	{ after(grammarAccess.getPropertyAccess().getDescriptionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getPropertyKeyword_1()); }
	'property'
	{ after(grammarAccess.getPropertyAccess().getPropertyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_2()); }
	(rule__Property__NameAssignment_2)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__3__Impl
	rule__Property__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getAlternatives_3()); }
	(rule__Property__Alternatives_3)
	{ after(grammarAccess.getPropertyAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getUnorderedGroup_4()); }
	(rule__Property__UnorderedGroup_4)
	{ after(grammarAccess.getPropertyAccess().getUnorderedGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_3_0__0__Impl
	rule__Property__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getColonKeyword_3_0_0()); }
	':'
	{ after(grammarAccess.getPropertyAccess().getColonKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_3_0__1__Impl
	rule__Property__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getDeclarationAssignment_3_0_1()); }
	(rule__Property__DeclarationAssignment_3_0_1)
	{ after(grammarAccess.getPropertyAccess().getDeclarationAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_3_0__2__Impl
	rule__Property__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getColonEqualsSignKeyword_3_0_2()); }
	':='
	{ after(grammarAccess.getPropertyAccess().getColonEqualsSignKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getTransformationAssignment_3_0_3()); }
	(rule__Property__TransformationAssignment_3_0_3)
	{ after(grammarAccess.getPropertyAccess().getTransformationAssignment_3_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_4_0__0__Impl
	rule__Property__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getReferenceKeyword_4_0_0()); }
	'reference'
	{ after(grammarAccess.getPropertyAccess().getReferenceKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getReferenceAssignment_4_0_1()); }
	(rule__Property__ReferenceAssignment_4_0_1)
	{ after(grammarAccess.getPropertyAccess().getReferenceAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_4_1__0__Impl
	rule__Property__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getSurvivalKeyword_4_1_0()); }
	'survival'
	{ after(grammarAccess.getPropertyAccess().getSurvivalKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getSurvivalAssignment_4_1_1()); }
	(rule__Property__SurvivalAssignment_4_1_1)
	{ after(grammarAccess.getPropertyAccess().getSurvivalAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
	(rule__Import__ImportURIAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Observation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__0__Impl
	rule__Observation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getDescriptionAssignment_0()); }
	(rule__Observation__DescriptionAssignment_0)?
	{ after(grammarAccess.getObservationAccess().getDescriptionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__1__Impl
	rule__Observation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getObservationKeyword_1()); }
	'observation'
	{ after(grammarAccess.getObservationAccess().getObservationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__2__Impl
	rule__Observation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getNameAssignment_2()); }
	(rule__Observation__NameAssignment_2)
	{ after(grammarAccess.getObservationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__3__Impl
	rule__Observation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getObservationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__4__Impl
	rule__Observation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getPatternAssignment_4()); }
	(rule__Observation__PatternAssignment_4)
	{ after(grammarAccess.getObservationAccess().getPatternAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getAlternatives_5()); }
	(rule__Observation__Alternatives_5)
	{ after(grammarAccess.getObservationAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Observation__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group_5_1__0__Impl
	rule__Observation__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getLeftCurlyBracketKeyword_5_1_0()); }
	'{'
	{ after(grammarAccess.getObservationAccess().getLeftCurlyBracketKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group_5_1__1__Impl
	rule__Observation__Group_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getObservationAccess().getActionsAssignment_5_1_1()); }
		(rule__Observation__ActionsAssignment_5_1_1)
		{ after(grammarAccess.getObservationAccess().getActionsAssignment_5_1_1()); }
	)
	(
		{ before(grammarAccess.getObservationAccess().getActionsAssignment_5_1_1()); }
		(rule__Observation__ActionsAssignment_5_1_1)*
		{ after(grammarAccess.getObservationAccess().getActionsAssignment_5_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group_5_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group_5_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getRightCurlyBracketKeyword_5_1_2()); }
	'}'
	{ after(grammarAccess.getObservationAccess().getRightCurlyBracketKeyword_5_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetVariable__Group__0__Impl
	rule__SetVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetVariableAccess().getSetsKeyword_0()); }
	'sets'
	{ after(grammarAccess.getSetVariableAccess().getSetsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetVariable__Group__1__Impl
	rule__SetVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetVariableAccess().getVariableAssignment_1()); }
	(rule__SetVariable__VariableAssignment_1)
	{ after(grammarAccess.getSetVariableAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetVariable__Group__2__Impl
	rule__SetVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetVariableAccess().getColonEqualsSignKeyword_2()); }
	':='
	{ after(grammarAccess.getSetVariableAccess().getColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetVariableAccess().getExpressionAssignment_3()); }
	(rule__SetVariable__ExpressionAssignment_3)
	{ after(grammarAccess.getSetVariableAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClearEvidence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClearEvidence__Group__0__Impl
	rule__ClearEvidence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClearEvidence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClearEvidenceAccess().getClearsKeyword_0()); }
	'clears'
	{ after(grammarAccess.getClearEvidenceAccess().getClearsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClearEvidence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClearEvidence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClearEvidence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClearEvidenceAccess().getTargetAssignment_1()); }
	(rule__ClearEvidence__TargetAssignment_1)
	{ after(grammarAccess.getClearEvidenceAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetEvidence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetEvidence__Group__0__Impl
	rule__SetEvidence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetEvidenceAccess().getInfluenceAssignment_0()); }
	(rule__SetEvidence__InfluenceAssignment_0)
	{ after(grammarAccess.getSetEvidenceAccess().getInfluenceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetEvidence__Group__1__Impl
	rule__SetEvidence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetEvidenceAccess().getTargetAssignment_1()); }
	(rule__SetEvidence__TargetAssignment_1)
	{ after(grammarAccess.getSetEvidenceAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetEvidence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2()); }
	(rule__SetEvidence__UnorderedGroup_2)
	{ after(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetEvidence__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetEvidence__Group_2_1__0__Impl
	rule__SetEvidence__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetEvidenceAccess().getSurvivalKeyword_2_1_0()); }
	'survival'
	{ after(grammarAccess.getSetEvidenceAccess().getSurvivalKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetEvidence__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetEvidenceAccess().getSurvivalAssignment_2_1_1()); }
	(rule__SetEvidence__SurvivalAssignment_2_1_1)
	{ after(grammarAccess.getSetEvidenceAccess().getSurvivalAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartTimer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartTimer__Group__0__Impl
	rule__StartTimer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTimer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartTimerAccess().getStartsKeyword_0()); }
	'starts'
	{ after(grammarAccess.getStartTimerAccess().getStartsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTimer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartTimer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTimer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartTimerAccess().getTimerAssignment_1()); }
	(rule__StartTimer__TimerAssignment_1)
	{ after(grammarAccess.getStartTimerAccess().getTimerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StopTimer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopTimer__Group__0__Impl
	rule__StopTimer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopTimerAccess().getStopsKeyword_0()); }
	'stops'
	{ after(grammarAccess.getStopTimerAccess().getStopsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopTimer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopTimerAccess().getTimerAssignment_1()); }
	(rule__StopTimer__TimerAssignment_1)
	{ after(grammarAccess.getStopTimerAccess().getTimerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResumeTimer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResumeTimer__Group__0__Impl
	rule__ResumeTimer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResumeTimer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResumeTimerAccess().getResumesKeyword_0()); }
	'resumes'
	{ after(grammarAccess.getResumeTimerAccess().getResumesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResumeTimer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResumeTimer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResumeTimer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResumeTimerAccess().getTimerAssignment_1()); }
	(rule__ResumeTimer__TimerAssignment_1)
	{ after(grammarAccess.getResumeTimerAccess().getTimerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeDefinition__Group__0__Impl
	rule__DataTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeDefinitionAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getDataTypeDefinitionAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeDefinition__Group__1__Impl
	rule__DataTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__DataTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getDataTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeDefinition__Group__2__Impl
	rule__DataTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeDefinitionAccess().getDataTypeAssignment_3()); }
	(rule__DataTypeDefinition__DataTypeAssignment_3)
	{ after(grammarAccess.getDataTypeDefinitionAccess().getDataTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__0__Impl
	rule__BooleanType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0()); }
	()
	{ after(grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__1__Impl
	rule__BooleanType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1()); }
	'boolean'
	{ after(grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getGroup_2()); }
	(rule__BooleanType__Group_2__0)?
	{ after(grammarAccess.getBooleanTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group_2__0__Impl
	rule__BooleanType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getBooleanTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group_2__1__Impl
	rule__BooleanType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getCardinalityAssignment_2_1()); }
	(rule__BooleanType__CardinalityAssignment_2_1)
	{ after(grammarAccess.getBooleanTypeAccess().getCardinalityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getBooleanTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group__0__Impl
	rule__EnumType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getEnumTypeAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group__1__Impl
	rule__EnumType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getGroup_1()); }
	(rule__EnumType__Group_1__0)?
	{ after(grammarAccess.getEnumTypeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group__2__Impl
	rule__EnumType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group__3__Impl
	rule__EnumType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getLiteralsAssignment_3()); }
	(rule__EnumType__LiteralsAssignment_3)
	{ after(grammarAccess.getEnumTypeAccess().getLiteralsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group__4__Impl
	rule__EnumType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEnumTypeAccess().getGroup_4()); }
		(rule__EnumType__Group_4__0)
		{ after(grammarAccess.getEnumTypeAccess().getGroup_4()); }
	)
	(
		{ before(grammarAccess.getEnumTypeAccess().getGroup_4()); }
		(rule__EnumType__Group_4__0)*
		{ after(grammarAccess.getEnumTypeAccess().getGroup_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group_1__0__Impl
	rule__EnumType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getEnumTypeAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group_1__1__Impl
	rule__EnumType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getCardinalityAssignment_1_1()); }
	(rule__EnumType__CardinalityAssignment_1_1)
	{ after(grammarAccess.getEnumTypeAccess().getCardinalityAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getEnumTypeAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group_4__0__Impl
	rule__EnumType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getEnumTypeAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeAccess().getLiteralsAssignment_4_1()); }
	(rule__EnumType__LiteralsAssignment_4_1)
	{ after(grammarAccess.getEnumTypeAccess().getLiteralsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteral__Group__0__Impl
	rule__EnumLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralAccess().getEnumLiteralAction_0()); }
	()
	{ after(grammarAccess.getEnumLiteralAccess().getEnumLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralAccess().getNameAssignment_1()); }
	(rule__EnumLiteral__NameAssignment_1)
	{ after(grammarAccess.getEnumLiteralAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventType__Group__0__Impl
	rule__EventType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTypeAccess().getEventTypeAction_0()); }
	()
	{ after(grammarAccess.getEventTypeAccess().getEventTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventType__Group__1__Impl
	rule__EventType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTypeAccess().getEventtypeKeyword_1()); }
	'eventtype'
	{ after(grammarAccess.getEventTypeAccess().getEventtypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTypeAccess().getGroup_2()); }
	(rule__EventType__Group_2__0)?
	{ after(grammarAccess.getEventTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventType__Group_2__0__Impl
	rule__EventType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getEventTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventType__Group_2__1__Impl
	rule__EventType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTypeAccess().getCardinalityAssignment_2_1()); }
	(rule__EventType__CardinalityAssignment_2_1)
	{ after(grammarAccess.getEventTypeAccess().getCardinalityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getEventTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericType__Group__0__Impl
	rule__NumericType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeAccess().getNumericTypeAction_0()); }
	()
	{ after(grammarAccess.getNumericTypeAccess().getNumericTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericType__Group__1__Impl
	rule__NumericType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeAccess().getNumberKeyword_1()); }
	'number'
	{ after(grammarAccess.getNumericTypeAccess().getNumberKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericType__Group__2__Impl
	rule__NumericType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeAccess().getGroup_2()); }
	(rule__NumericType__Group_2__0)?
	{ after(grammarAccess.getNumericTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeAccess().getConstraintsAssignment_3()); }
	(rule__NumericType__ConstraintsAssignment_3)*
	{ after(grammarAccess.getNumericTypeAccess().getConstraintsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericType__Group_2__0__Impl
	rule__NumericType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getNumericTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericType__Group_2__1__Impl
	rule__NumericType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeAccess().getCardinalityAssignment_2_1()); }
	(rule__NumericType__CardinalityAssignment_2_1)
	{ after(grammarAccess.getNumericTypeAccess().getCardinalityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getNumericTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LowerBound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerBound__Group__0__Impl
	rule__LowerBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerBound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerBoundAccess().getLowerKeyword_0()); }
	'lower'
	{ after(grammarAccess.getLowerBoundAccess().getLowerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerBound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerBound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerBoundAccess().getValueAssignment_1()); }
	(rule__LowerBound__ValueAssignment_1)
	{ after(grammarAccess.getLowerBoundAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpperBound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperBound__Group__0__Impl
	rule__UpperBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperBoundAccess().getUpperKeyword_0()); }
	'upper'
	{ after(grammarAccess.getUpperBoundAccess().getUpperKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperBoundAccess().getValueAssignment_1()); }
	(rule__UpperBound__ValueAssignment_1)
	{ after(grammarAccess.getUpperBoundAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitMeasuredType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group__0__Impl
	rule__UnitMeasuredType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getUnitMeasuredTypeAction_0()); }
	()
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getUnitMeasuredTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group__1__Impl
	rule__UnitMeasuredType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getNumberKeyword_1()); }
	'number'
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getNumberKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group__2__Impl
	rule__UnitMeasuredType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getGroup_2()); }
	(rule__UnitMeasuredType__Group_2__0)?
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group__3__Impl
	rule__UnitMeasuredType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsAssignment_3()); }
	(rule__UnitMeasuredType__ConstraintsAssignment_3)*
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group__4__Impl
	rule__UnitMeasuredType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getUnitKeyword_4()); }
	'unit'
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getUnitKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group__5__Impl
	rule__UnitMeasuredType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getUnitAssignment_5()); }
	(rule__UnitMeasuredType__UnitAssignment_5)
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getUnitAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsAssignment_6()); }
	(rule__UnitMeasuredType__ConstraintsAssignment_6)*
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitMeasuredType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group_2__0__Impl
	rule__UnitMeasuredType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group_2__1__Impl
	rule__UnitMeasuredType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getCardinalityAssignment_2_1()); }
	(rule__UnitMeasuredType__CardinalityAssignment_2_1)
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getCardinalityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getUnitMeasuredTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeType__Group__0__Impl
	rule__TimeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeTypeAccess().getTimeTypeAction_0()); }
	()
	{ after(grammarAccess.getTimeTypeAccess().getTimeTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeType__Group__1__Impl
	rule__TimeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeTypeAccess().getTimeKeyword_1()); }
	'time'
	{ after(grammarAccess.getTimeTypeAccess().getTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeTypeAccess().getGroup_2()); }
	(rule__TimeType__Group_2__0)?
	{ after(grammarAccess.getTimeTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeType__Group_2__0__Impl
	rule__TimeType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getTimeTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeType__Group_2__1__Impl
	rule__TimeType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeTypeAccess().getCardinalityAssignment_2_1()); }
	(rule__TimeType__CardinalityAssignment_2_1)
	{ after(grammarAccess.getTimeTypeAccess().getCardinalityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getTimeTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventValue__Group__0__Impl
	rule__EventValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventValueAccess().getEventValueAction_0()); }
	()
	{ after(grammarAccess.getEventValueAccess().getEventValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventValueAccess().getEventKeyword_1()); }
	'event'
	{ after(grammarAccess.getEventValueAccess().getEventKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValue__Group__0__Impl
	rule__BooleanValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueAccess().getBooleanValueAction_0()); }
	()
	{ after(grammarAccess.getBooleanValueAccess().getBooleanValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueAccess().getValueAssignment_1()); }
	(rule__BooleanValue__ValueAssignment_1)
	{ after(grammarAccess.getBooleanValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group__0__Impl
	rule__EnumValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getEnumValueAction_0()); }
	()
	{ after(grammarAccess.getEnumValueAccess().getEnumValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getValueAssignment_1()); }
	(rule__EnumValue__ValueAssignment_1)
	{ after(grammarAccess.getEnumValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericValue_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericValue_Impl__Group__0__Impl
	rule__NumericValue_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericValue_ImplAccess().getNumericValueAction_0()); }
	()
	{ after(grammarAccess.getNumericValue_ImplAccess().getNumericValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericValue_Impl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericValue_ImplAccess().getValueAssignment_1()); }
	(rule__NumericValue_Impl__ValueAssignment_1)
	{ after(grammarAccess.getNumericValue_ImplAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitMeasuredValue_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredValue_Impl__Group__0__Impl
	rule__UnitMeasuredValue_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredValue_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredValue_ImplAccess().getUnitMeasuredValueAction_0()); }
	()
	{ after(grammarAccess.getUnitMeasuredValue_ImplAccess().getUnitMeasuredValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredValue_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredValue_Impl__Group__1__Impl
	rule__UnitMeasuredValue_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredValue_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredValue_ImplAccess().getValueAssignment_1()); }
	(rule__UnitMeasuredValue_Impl__ValueAssignment_1)
	{ after(grammarAccess.getUnitMeasuredValue_ImplAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredValue_Impl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredValue_Impl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredValue_Impl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredValue_ImplAccess().getUnitAssignment_2()); }
	(rule__UnitMeasuredValue_Impl__UnitAssignment_2)
	{ after(grammarAccess.getUnitMeasuredValue_ImplAccess().getUnitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group__0__Impl
	rule__TimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getTimeValueAction_0()); }
	()
	{ after(grammarAccess.getTimeValueAccess().getTimeValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group__1__Impl
	rule__TimeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getValueAssignment_1()); }
	(rule__TimeValue__ValueAssignment_1)
	{ after(grammarAccess.getTimeValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeValueAccess().getUnitAssignment_2()); }
	(rule__TimeValue__UnitAssignment_2)
	{ after(grammarAccess.getTimeValueAccess().getUnitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanArray__Group__0__Impl
	rule__BooleanArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanArrayAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getBooleanArrayAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanArray__Group__1__Impl
	rule__BooleanArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanArrayAccess().getValuesAssignment_1()); }
	(rule__BooleanArray__ValuesAssignment_1)
	{ after(grammarAccess.getBooleanArrayAccess().getValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanArray__Group__2__Impl
	rule__BooleanArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanArrayAccess().getGroup_2()); }
	(rule__BooleanArray__Group_2__0)*
	{ after(grammarAccess.getBooleanArrayAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanArray__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanArrayAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getBooleanArrayAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanArray__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanArray__Group_2__0__Impl
	rule__BooleanArray__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanArrayAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getBooleanArrayAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanArray__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanArrayAccess().getValuesAssignment_2_1()); }
	(rule__BooleanArray__ValuesAssignment_2_1)
	{ after(grammarAccess.getBooleanArrayAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumArray__Group__0__Impl
	rule__EnumArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumArrayAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getEnumArrayAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumArray__Group__1__Impl
	rule__EnumArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumArrayAccess().getValuesAssignment_1()); }
	(rule__EnumArray__ValuesAssignment_1)
	{ after(grammarAccess.getEnumArrayAccess().getValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumArray__Group__2__Impl
	rule__EnumArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumArrayAccess().getGroup_2()); }
	(rule__EnumArray__Group_2__0)*
	{ after(grammarAccess.getEnumArrayAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumArray__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumArrayAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getEnumArrayAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumArray__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumArray__Group_2__0__Impl
	rule__EnumArray__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumArrayAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getEnumArrayAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumArray__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumArrayAccess().getValuesAssignment_2_1()); }
	(rule__EnumArray__ValuesAssignment_2_1)
	{ after(grammarAccess.getEnumArrayAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericArray_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericArray_Impl__Group__0__Impl
	rule__NumericArray_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericArray_ImplAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getNumericArray_ImplAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericArray_Impl__Group__1__Impl
	rule__NumericArray_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericArray_ImplAccess().getValuesAssignment_1()); }
	(rule__NumericArray_Impl__ValuesAssignment_1)
	{ after(grammarAccess.getNumericArray_ImplAccess().getValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericArray_Impl__Group__2__Impl
	rule__NumericArray_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericArray_ImplAccess().getGroup_2()); }
	(rule__NumericArray_Impl__Group_2__0)*
	{ after(grammarAccess.getNumericArray_ImplAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericArray_Impl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericArray_ImplAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getNumericArray_ImplAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericArray_Impl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericArray_Impl__Group_2__0__Impl
	rule__NumericArray_Impl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericArray_ImplAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getNumericArray_ImplAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericArray_Impl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericArray_ImplAccess().getValuesAssignment_2_1()); }
	(rule__NumericArray_Impl__ValuesAssignment_2_1)
	{ after(grammarAccess.getNumericArray_ImplAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitMeasuredArray_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredArray_Impl__Group__0__Impl
	rule__UnitMeasuredArray_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredArray_Impl__Group__1__Impl
	rule__UnitMeasuredArray_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesAssignment_1()); }
	(rule__UnitMeasuredArray_Impl__ValuesAssignment_1)
	{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredArray_Impl__Group__2__Impl
	rule__UnitMeasuredArray_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getGroup_2()); }
	(rule__UnitMeasuredArray_Impl__Group_2__0)*
	{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredArray_Impl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitMeasuredArray_Impl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredArray_Impl__Group_2__0__Impl
	rule__UnitMeasuredArray_Impl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitMeasuredArray_Impl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesAssignment_2_1()); }
	(rule__UnitMeasuredArray_Impl__ValuesAssignment_2_1)
	{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeArray__Group__0__Impl
	rule__TimeArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeArrayAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getTimeArrayAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeArray__Group__1__Impl
	rule__TimeArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeArrayAccess().getValuesAssignment_1()); }
	(rule__TimeArray__ValuesAssignment_1)
	{ after(grammarAccess.getTimeArrayAccess().getValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeArray__Group__2__Impl
	rule__TimeArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeArrayAccess().getGroup_2()); }
	(rule__TimeArray__Group_2__0)*
	{ after(grammarAccess.getTimeArrayAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeArray__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeArrayAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getTimeArrayAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeArray__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeArray__Group_2__0__Impl
	rule__TimeArray__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeArrayAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTimeArrayAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeArray__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeArrayAccess().getValuesAssignment_2_1()); }
	(rule__TimeArray__ValuesAssignment_2_1)
	{ after(grammarAccess.getTimeArrayAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OnceTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnceTerm__Group__0__Impl
	rule__OnceTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnceTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnceTermAccess().getOnceKeyword_0()); }
	'once'
	{ after(grammarAccess.getOnceTermAccess().getOnceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnceTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnceTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnceTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnceTermAccess().getTermAssignment_1()); }
	(rule__OnceTerm__TermAssignment_1)
	{ after(grammarAccess.getOnceTermAccess().getTermAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileTerm__Group__0__Impl
	rule__WhileTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileTermAccess().getRepetionTermParserRuleCall_0()); }
	ruleRepetionTerm
	{ after(grammarAccess.getWhileTermAccess().getRepetionTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileTermAccess().getGroup_1()); }
	(rule__WhileTerm__Group_1__0)?
	{ after(grammarAccess.getWhileTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileTerm__Group_1__0__Impl
	rule__WhileTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileTermAccess().getWhileTermLeftAction_1_0()); }
	()
	{ after(grammarAccess.getWhileTermAccess().getWhileTermLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileTerm__Group_1__1__Impl
	rule__WhileTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileTermAccess().getWhileKeyword_1_1()); }
	'while'
	{ after(grammarAccess.getWhileTermAccess().getWhileKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileTerm__Group_1__2__Impl
	rule__WhileTerm__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileTermAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getWhileTermAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileTerm__Group_1__3__Impl
	rule__WhileTerm__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileTermAccess().getRightAssignment_1_3()); }
	(rule__WhileTerm__RightAssignment_1_3)
	{ after(grammarAccess.getWhileTermAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileTerm__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileTermAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getWhileTermAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepetionTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group__0__Impl
	rule__RepetionTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getSequenceTermParserRuleCall_0()); }
	ruleSequenceTerm
	{ after(grammarAccess.getRepetionTermAccess().getSequenceTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getAlternatives_1()); }
	(rule__RepetionTerm__Alternatives_1)?
	{ after(grammarAccess.getRepetionTermAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepetionTerm__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_0__0__Impl
	rule__RepetionTerm__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getRepeatTermTermAction_1_0_0()); }
	()
	{ after(grammarAccess.getRepetionTermAccess().getRepeatTermTermAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_0__1__Impl
	rule__RepetionTerm__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getRepeatKeyword_1_0_1()); }
	'repeat'
	{ after(grammarAccess.getRepetionTermAccess().getRepeatKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_0__2__Impl
	rule__RepetionTerm__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getLeftParenthesisKeyword_1_0_2()); }
	'('
	{ after(grammarAccess.getRepetionTermAccess().getLeftParenthesisKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_0__3__Impl
	rule__RepetionTerm__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getNrepAssignment_1_0_3()); }
	(rule__RepetionTerm__NrepAssignment_1_0_3)
	{ after(grammarAccess.getRepetionTermAccess().getNrepAssignment_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getRightParenthesisKeyword_1_0_4()); }
	')'
	{ after(grammarAccess.getRepetionTermAccess().getRightParenthesisKeyword_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepetionTerm__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_1__0__Impl
	rule__RepetionTerm__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getRangeTermTermAction_1_1_0()); }
	()
	{ after(grammarAccess.getRepetionTermAccess().getRangeTermTermAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_1__1__Impl
	rule__RepetionTerm__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getRangeKeyword_1_1_1()); }
	'range'
	{ after(grammarAccess.getRepetionTermAccess().getRangeKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_1__2__Impl
	rule__RepetionTerm__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getLeftParenthesisKeyword_1_1_2()); }
	'('
	{ after(grammarAccess.getRepetionTermAccess().getLeftParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_1__3__Impl
	rule__RepetionTerm__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getLowerBoundAssignment_1_1_3()); }
	(rule__RepetionTerm__LowerBoundAssignment_1_1_3)
	{ after(grammarAccess.getRepetionTermAccess().getLowerBoundAssignment_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_1__4__Impl
	rule__RepetionTerm__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getCommaKeyword_1_1_4()); }
	','
	{ after(grammarAccess.getRepetionTermAccess().getCommaKeyword_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_1__5__Impl
	rule__RepetionTerm__Group_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getUpperBoundAssignment_1_1_5()); }
	(rule__RepetionTerm__UpperBoundAssignment_1_1_5)
	{ after(grammarAccess.getRepetionTermAccess().getUpperBoundAssignment_1_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepetionTerm__Group_1_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__Group_1_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetionTermAccess().getRightParenthesisKeyword_1_1_6()); }
	')'
	{ after(grammarAccess.getRepetionTermAccess().getRightParenthesisKeyword_1_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group__0__Impl
	rule__SequenceTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getOrEventTermParserRuleCall_0()); }
	ruleOrEventTerm
	{ after(grammarAccess.getSequenceTermAccess().getOrEventTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getGroup_1()); }
	(rule__SequenceTerm__Group_1__0)*
	{ after(grammarAccess.getSequenceTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_1__0__Impl
	rule__SequenceTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getFollowedByTermLeftAction_1_0()); }
	()
	{ after(grammarAccess.getSequenceTermAccess().getFollowedByTermLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_1__1__Impl
	rule__SequenceTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getSequenceTermAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getRightAssignment_1_2()); }
	(rule__SequenceTerm__RightAssignment_1_2)
	{ after(grammarAccess.getSequenceTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrEventTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrEventTerm__Group__0__Impl
	rule__OrEventTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrEventTermAccess().getAndEventTermParserRuleCall_0()); }
	ruleAndEventTerm
	{ after(grammarAccess.getOrEventTermAccess().getAndEventTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrEventTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrEventTermAccess().getGroup_1()); }
	(rule__OrEventTerm__Group_1__0)*
	{ after(grammarAccess.getOrEventTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrEventTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrEventTerm__Group_1__0__Impl
	rule__OrEventTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrEventTermAccess().getOrEventTermLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrEventTermAccess().getOrEventTermLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrEventTerm__Group_1__1__Impl
	rule__OrEventTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrEventTermAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getOrEventTermAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrEventTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrEventTermAccess().getRightAssignment_1_2()); }
	(rule__OrEventTerm__RightAssignment_1_2)
	{ after(grammarAccess.getOrEventTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndEventTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndEventTerm__Group__0__Impl
	rule__AndEventTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndEventTermAccess().getAlternatives_0()); }
	(rule__AndEventTerm__Alternatives_0)
	{ after(grammarAccess.getAndEventTermAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndEventTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndEventTermAccess().getGroup_1()); }
	(rule__AndEventTerm__Group_1__0)*
	{ after(grammarAccess.getAndEventTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndEventTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndEventTerm__Group_1__0__Impl
	rule__AndEventTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndEventTermAccess().getAndEventTermLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndEventTermAccess().getAndEventTermLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndEventTerm__Group_1__1__Impl
	rule__AndEventTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndEventTermAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getAndEventTermAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndEventTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndEventTermAccess().getRightAssignment_1_2()); }
	(rule__AndEventTerm__RightAssignment_1_2)
	{ after(grammarAccess.getAndEventTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotEventTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEventTerm__Group__0__Impl
	rule__NotEventTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEventTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEventTermAccess().getNotEventTermAction_0()); }
	()
	{ after(grammarAccess.getNotEventTermAccess().getNotEventTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEventTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEventTerm__Group__1__Impl
	rule__NotEventTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEventTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEventTermAccess().getNotKeyword_1()); }
	'not'
	{ after(grammarAccess.getNotEventTermAccess().getNotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEventTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotEventTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEventTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotEventTermAccess().getTermAssignment_2()); }
	(rule__NotEventTerm__TermAssignment_2)
	{ after(grammarAccess.getNotEventTermAccess().getTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__0__Impl
	rule__ConditionalTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getOrBooleanTermParserRuleCall_0()); }
	ruleOrBooleanTerm
	{ after(grammarAccess.getConditionalTermAccess().getOrBooleanTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getGroup_1()); }
	(rule__ConditionalTerm__Group_1__0)?
	{ after(grammarAccess.getConditionalTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group_1__0__Impl
	rule__ConditionalTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getConditionalTermTermsAction_1_0()); }
	()
	{ after(grammarAccess.getConditionalTermAccess().getConditionalTermTermsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group_1__1__Impl
	rule__ConditionalTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getQuestionMarkKeyword_1_1()); }
	'?'
	{ after(grammarAccess.getConditionalTermAccess().getQuestionMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group_1__2__Impl
	rule__ConditionalTerm__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getTermsAssignment_1_2()); }
	(rule__ConditionalTerm__TermsAssignment_1_2)
	{ after(grammarAccess.getConditionalTermAccess().getTermsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group_1__3__Impl
	rule__ConditionalTerm__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getColonKeyword_1_3()); }
	':'
	{ after(grammarAccess.getConditionalTermAccess().getColonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getTermsAssignment_1_4()); }
	(rule__ConditionalTerm__TermsAssignment_1_4)
	{ after(grammarAccess.getConditionalTermAccess().getTermsAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrBooleanTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrBooleanTerm__Group__0__Impl
	rule__OrBooleanTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrBooleanTermAccess().getAndBooleanTermParserRuleCall_0()); }
	ruleAndBooleanTerm
	{ after(grammarAccess.getOrBooleanTermAccess().getAndBooleanTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrBooleanTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrBooleanTermAccess().getGroup_1()); }
	(rule__OrBooleanTerm__Group_1__0)*
	{ after(grammarAccess.getOrBooleanTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrBooleanTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrBooleanTerm__Group_1__0__Impl
	rule__OrBooleanTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrBooleanTermAccess().getOrBooleanTermLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrBooleanTermAccess().getOrBooleanTermLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrBooleanTerm__Group_1__1__Impl
	rule__OrBooleanTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrBooleanTermAccess().getVerticalLineKeyword_1_1()); }
	'|'
	{ after(grammarAccess.getOrBooleanTermAccess().getVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrBooleanTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrBooleanTermAccess().getRightAssignment_1_2()); }
	(rule__OrBooleanTerm__RightAssignment_1_2)
	{ after(grammarAccess.getOrBooleanTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndBooleanTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndBooleanTerm__Group__0__Impl
	rule__AndBooleanTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndBooleanTermAccess().getAlternatives_0()); }
	(rule__AndBooleanTerm__Alternatives_0)
	{ after(grammarAccess.getAndBooleanTermAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndBooleanTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndBooleanTermAccess().getGroup_1()); }
	(rule__AndBooleanTerm__Group_1__0)*
	{ after(grammarAccess.getAndBooleanTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndBooleanTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndBooleanTerm__Group_1__0__Impl
	rule__AndBooleanTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndBooleanTermAccess().getAndBooleanTermLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndBooleanTermAccess().getAndBooleanTermLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndBooleanTerm__Group_1__1__Impl
	rule__AndBooleanTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndBooleanTermAccess().getAmpersandKeyword_1_1()); }
	'&'
	{ after(grammarAccess.getAndBooleanTermAccess().getAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndBooleanTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndBooleanTermAccess().getRightAssignment_1_2()); }
	(rule__AndBooleanTerm__RightAssignment_1_2)
	{ after(grammarAccess.getAndBooleanTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotBooleanTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotBooleanTerm__Group__0__Impl
	rule__NotBooleanTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotBooleanTermAccess().getNotBooleanTermAction_0()); }
	()
	{ after(grammarAccess.getNotBooleanTermAccess().getNotBooleanTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotBooleanTerm__Group__1__Impl
	rule__NotBooleanTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotBooleanTermAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getNotBooleanTermAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotBooleanTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotBooleanTermAccess().getTermAssignment_2()); }
	(rule__NotBooleanTerm__TermAssignment_2)
	{ after(grammarAccess.getNotBooleanTermAccess().getTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group__0__Impl
	rule__RelationalTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getAdditionTermParserRuleCall_0()); }
	ruleAdditionTerm
	{ after(grammarAccess.getRelationalTermAccess().getAdditionTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getGroup_1()); }
	(rule__RelationalTerm__Group_1__0)?
	{ after(grammarAccess.getRelationalTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1__0__Impl
	rule__RelationalTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getAlternatives_1_0()); }
	(rule__RelationalTerm__Alternatives_1_0)
	{ after(grammarAccess.getRelationalTermAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getRightAssignment_1_1()); }
	(rule__RelationalTerm__RightAssignment_1_1)
	{ after(grammarAccess.getRelationalTermAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalTerm__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_0__0__Impl
	rule__RelationalTerm__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getEqualTermLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getRelationalTermAccess().getEqualTermLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getEqualsSignKeyword_1_0_0_1()); }
	'='
	{ after(grammarAccess.getRelationalTermAccess().getEqualsSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalTerm__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_1__0__Impl
	rule__RelationalTerm__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getLessThanTermLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getRelationalTermAccess().getLessThanTermLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getLessThanSignKeyword_1_0_1_1()); }
	'<'
	{ after(grammarAccess.getRelationalTermAccess().getLessThanSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalTerm__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_2__0__Impl
	rule__RelationalTerm__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getGreaterThanTermLeftAction_1_0_2_0()); }
	()
	{ after(grammarAccess.getRelationalTermAccess().getGreaterThanTermLeftAction_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getGreaterThanSignKeyword_1_0_2_1()); }
	'>'
	{ after(grammarAccess.getRelationalTermAccess().getGreaterThanSignKeyword_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalTerm__Group_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_3__0__Impl
	rule__RelationalTerm__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getLessEqualTermLeftAction_1_0_3_0()); }
	()
	{ after(grammarAccess.getRelationalTermAccess().getLessEqualTermLeftAction_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getLessThanSignEqualsSignKeyword_1_0_3_1()); }
	'<='
	{ after(grammarAccess.getRelationalTermAccess().getLessThanSignEqualsSignKeyword_1_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalTerm__Group_1_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_4__0__Impl
	rule__RelationalTerm__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getGreaterEqualTermLeftAction_1_0_4_0()); }
	()
	{ after(grammarAccess.getRelationalTermAccess().getGreaterEqualTermLeftAction_1_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getGreaterThanSignEqualsSignKeyword_1_0_4_1()); }
	'>='
	{ after(grammarAccess.getRelationalTermAccess().getGreaterThanSignEqualsSignKeyword_1_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalTerm__Group_1_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_5__0__Impl
	rule__RelationalTerm__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getNotEqualTermLeftAction_1_0_5_0()); }
	()
	{ after(grammarAccess.getRelationalTermAccess().getNotEqualTermLeftAction_1_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalTerm__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__Group_1_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalTermAccess().getExclamationMarkEqualsSignKeyword_1_0_5_1()); }
	'!='
	{ after(grammarAccess.getRelationalTermAccess().getExclamationMarkEqualsSignKeyword_1_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionTerm__Group__0__Impl
	rule__AdditionTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionTermAccess().getMultiplicationTermParserRuleCall_0()); }
	ruleMultiplicationTerm
	{ after(grammarAccess.getAdditionTermAccess().getMultiplicationTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionTermAccess().getGroup_1()); }
	(rule__AdditionTerm__Group_1__0)*
	{ after(grammarAccess.getAdditionTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionTerm__Group_1__0__Impl
	rule__AdditionTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionTermAccess().getAlternatives_1_0()); }
	(rule__AdditionTerm__Alternatives_1_0)
	{ after(grammarAccess.getAdditionTermAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionTerm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionTermAccess().getRightAssignment_1_1()); }
	(rule__AdditionTerm__RightAssignment_1_1)
	{ after(grammarAccess.getAdditionTermAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionTerm__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionTerm__Group_1_0_0__0__Impl
	rule__AdditionTerm__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionTermAccess().getAddTermLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAdditionTermAccess().getAddTermLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionTerm__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionTermAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getAdditionTermAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionTerm__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionTerm__Group_1_0_1__0__Impl
	rule__AdditionTerm__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionTermAccess().getSubTermLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getAdditionTermAccess().getSubTermLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionTerm__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionTermAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getAdditionTermAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationTerm__Group__0__Impl
	rule__MultiplicationTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationTermAccess().getPrimaryTermParserRuleCall_0()); }
	rulePrimaryTerm
	{ after(grammarAccess.getMultiplicationTermAccess().getPrimaryTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationTermAccess().getGroup_1()); }
	(rule__MultiplicationTerm__Group_1__0)*
	{ after(grammarAccess.getMultiplicationTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationTerm__Group_1__0__Impl
	rule__MultiplicationTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationTermAccess().getAlternatives_1_0()); }
	(rule__MultiplicationTerm__Alternatives_1_0)
	{ after(grammarAccess.getMultiplicationTermAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationTerm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationTermAccess().getRightAssignment_1_1()); }
	(rule__MultiplicationTerm__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicationTermAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationTerm__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationTerm__Group_1_0_0__0__Impl
	rule__MultiplicationTerm__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationTermAccess().getMultTermLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicationTermAccess().getMultTermLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationTerm__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationTermAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getMultiplicationTermAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationTerm__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationTerm__Group_1_0_1__0__Impl
	rule__MultiplicationTerm__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationTermAccess().getDivTermLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationTermAccess().getDivTermLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationTerm__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationTermAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getMultiplicationTermAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryTerm__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryTerm__Group_0__0__Impl
	rule__PrimaryTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryTerm__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryTermAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryTermAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryTerm__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryTerm__Group_0__1__Impl
	rule__PrimaryTerm__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryTerm__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryTermAccess().getTermParserRuleCall_0_1()); }
	ruleTerm
	{ after(grammarAccess.getPrimaryTermAccess().getTermParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryTerm__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryTerm__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryTerm__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryTermAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryTermAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelfTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelfTerm__Group__0__Impl
	rule__SelfTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelfTermAccess().getSelfTermAction_0()); }
	()
	{ after(grammarAccess.getSelfTermAccess().getSelfTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelfTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelfTermAccess().getBeliefKeyword_1()); }
	'belief'
	{ after(grammarAccess.getSelfTermAccess().getBeliefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleFunction__Group__0__Impl
	rule__ScheduleFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleFunctionAccess().getScheduleFunctionAction_0()); }
	()
	{ after(grammarAccess.getScheduleFunctionAccess().getScheduleFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleFunction__Group__1__Impl
	rule__ScheduleFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleFunctionAccess().getScheduleKeyword_1()); }
	'schedule'
	{ after(grammarAccess.getScheduleFunctionAccess().getScheduleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleFunction__Group__2__Impl
	rule__ScheduleFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getScheduleFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleFunction__Group__3__Impl
	rule__ScheduleFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleFunctionAccess().getPatternAssignment_3()); }
	(rule__ScheduleFunction__PatternAssignment_3)
	{ after(grammarAccess.getScheduleFunctionAccess().getPatternAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScheduleFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScheduleFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getScheduleFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group__0__Impl
	rule__ArithFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getGroup_0()); }
	(rule__ArithFunction__Group_0__0)?
	{ after(grammarAccess.getArithFunctionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group__1__Impl
	rule__ArithFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getNameAssignment_1()); }
	(rule__ArithFunction__NameAssignment_1)
	{ after(grammarAccess.getArithFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getGroup_2()); }
	(rule__ArithFunction__Group_2__0)?
	{ after(grammarAccess.getArithFunctionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithFunction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_0__0__Impl
	rule__ArithFunction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getTermsAssignment_0_0()); }
	(rule__ArithFunction__TermsAssignment_0_0)
	{ after(grammarAccess.getArithFunctionAccess().getTermsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getApostropheKeyword_0_1()); }
	'\''
	{ after(grammarAccess.getArithFunctionAccess().getApostropheKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithFunction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_2__0__Impl
	rule__ArithFunction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getArithFunctionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_2__1__Impl
	rule__ArithFunction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getGroup_2_1()); }
	(rule__ArithFunction__Group_2_1__0)?
	{ after(grammarAccess.getArithFunctionAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getArithFunctionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithFunction__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_2_1__0__Impl
	rule__ArithFunction__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getTermsAssignment_2_1_0()); }
	(rule__ArithFunction__TermsAssignment_2_1_0)
	{ after(grammarAccess.getArithFunctionAccess().getTermsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getGroup_2_1_1()); }
	(rule__ArithFunction__Group_2_1_1__0)*
	{ after(grammarAccess.getArithFunctionAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithFunction__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_2_1_1__0__Impl
	rule__ArithFunction__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getArithFunctionAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithFunction__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithFunctionAccess().getTermsAssignment_2_1_1_1()); }
	(rule__ArithFunction__TermsAssignment_2_1_1_1)
	{ after(grammarAccess.getArithFunctionAccess().getTermsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group__0__Impl
	rule__AggregationFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getGroup_0()); }
	(rule__AggregationFunction__Group_0__0)?
	{ after(grammarAccess.getAggregationFunctionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group__1__Impl
	rule__AggregationFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getNameAssignment_1()); }
	(rule__AggregationFunction__NameAssignment_1)
	{ after(grammarAccess.getAggregationFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getGroup_2()); }
	(rule__AggregationFunction__Group_2__0)?
	{ after(grammarAccess.getAggregationFunctionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationFunction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_0__0__Impl
	rule__AggregationFunction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getTermsAssignment_0_0()); }
	(rule__AggregationFunction__TermsAssignment_0_0)
	{ after(grammarAccess.getAggregationFunctionAccess().getTermsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getApostropheKeyword_0_1()); }
	'\''
	{ after(grammarAccess.getAggregationFunctionAccess().getApostropheKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationFunction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_2__0__Impl
	rule__AggregationFunction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getAggregationFunctionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_2__1__Impl
	rule__AggregationFunction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getGroup_2_1()); }
	(rule__AggregationFunction__Group_2_1__0)?
	{ after(grammarAccess.getAggregationFunctionAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getAggregationFunctionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationFunction__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_2_1__0__Impl
	rule__AggregationFunction__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getTermsAssignment_2_1_0()); }
	(rule__AggregationFunction__TermsAssignment_2_1_0)
	{ after(grammarAccess.getAggregationFunctionAccess().getTermsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getGroup_2_1_1()); }
	(rule__AggregationFunction__Group_2_1_1__0)*
	{ after(grammarAccess.getAggregationFunctionAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationFunction__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_2_1_1__0__Impl
	rule__AggregationFunction__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getAggregationFunctionAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationFunction__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationFunctionAccess().getTermsAssignment_2_1_1_1()); }
	(rule__AggregationFunction__TermsAssignment_2_1_1_1)
	{ after(grammarAccess.getAggregationFunctionAccess().getTermsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group__0__Impl
	rule__PatternFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getGroup_0()); }
	(rule__PatternFunction__Group_0__0)?
	{ after(grammarAccess.getPatternFunctionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group__1__Impl
	rule__PatternFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getNameAssignment_1()); }
	(rule__PatternFunction__NameAssignment_1)
	{ after(grammarAccess.getPatternFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getGroup_2()); }
	(rule__PatternFunction__Group_2__0)?
	{ after(grammarAccess.getPatternFunctionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternFunction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_0__0__Impl
	rule__PatternFunction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getTermsAssignment_0_0()); }
	(rule__PatternFunction__TermsAssignment_0_0)
	{ after(grammarAccess.getPatternFunctionAccess().getTermsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getApostropheKeyword_0_1()); }
	'\''
	{ after(grammarAccess.getPatternFunctionAccess().getApostropheKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternFunction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_2__0__Impl
	rule__PatternFunction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPatternFunctionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_2__1__Impl
	rule__PatternFunction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getGroup_2_1()); }
	(rule__PatternFunction__Group_2_1__0)?
	{ after(grammarAccess.getPatternFunctionAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPatternFunctionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternFunction__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_2_1__0__Impl
	rule__PatternFunction__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getTermsAssignment_2_1_0()); }
	(rule__PatternFunction__TermsAssignment_2_1_0)
	{ after(grammarAccess.getPatternFunctionAccess().getTermsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getGroup_2_1_1()); }
	(rule__PatternFunction__Group_2_1_1__0)*
	{ after(grammarAccess.getPatternFunctionAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternFunction__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_2_1_1__0__Impl
	rule__PatternFunction__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getPatternFunctionAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternFunction__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternFunctionAccess().getTermsAssignment_2_1_1_1()); }
	(rule__PatternFunction__TermsAssignment_2_1_1_1)
	{ after(grammarAccess.getPatternFunctionAccess().getTermsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group__0__Impl
	rule__CollectionFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getGroup_0()); }
	(rule__CollectionFunction__Group_0__0)?
	{ after(grammarAccess.getCollectionFunctionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group__1__Impl
	rule__CollectionFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getNameAssignment_1()); }
	(rule__CollectionFunction__NameAssignment_1)
	{ after(grammarAccess.getCollectionFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getGroup_2()); }
	(rule__CollectionFunction__Group_2__0)?
	{ after(grammarAccess.getCollectionFunctionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionFunction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_0__0__Impl
	rule__CollectionFunction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getTermsAssignment_0_0()); }
	(rule__CollectionFunction__TermsAssignment_0_0)
	{ after(grammarAccess.getCollectionFunctionAccess().getTermsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getApostropheKeyword_0_1()); }
	'\''
	{ after(grammarAccess.getCollectionFunctionAccess().getApostropheKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionFunction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_2__0__Impl
	rule__CollectionFunction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getCollectionFunctionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_2__1__Impl
	rule__CollectionFunction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getGroup_2_1()); }
	(rule__CollectionFunction__Group_2_1__0)?
	{ after(grammarAccess.getCollectionFunctionAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getCollectionFunctionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionFunction__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_2_1__0__Impl
	rule__CollectionFunction__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getTermsAssignment_2_1_0()); }
	(rule__CollectionFunction__TermsAssignment_2_1_0)
	{ after(grammarAccess.getCollectionFunctionAccess().getTermsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getGroup_2_1_1()); }
	(rule__CollectionFunction__Group_2_1_1__0)*
	{ after(grammarAccess.getCollectionFunctionAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionFunction__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_2_1_1__0__Impl
	rule__CollectionFunction__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getCollectionFunctionAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionFunction__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionFunctionAccess().getTermsAssignment_2_1_1_1()); }
	(rule__CollectionFunction__TermsAssignment_2_1_1_1)
	{ after(grammarAccess.getCollectionFunctionAccess().getTermsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getGroup_2()); }
	(rule__EDouble__Group_2__0)?
	{ after(grammarAccess.getEDoubleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_2__0__Impl
	rule__EDouble__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralQualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralQualifiedName__Group__0__Impl
	rule__LiteralQualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralQualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getLiteralQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralQualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralQualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralQualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLiteralQualifiedNameAccess().getGroup_1()); }
		(rule__LiteralQualifiedName__Group_1__0)
		{ after(grammarAccess.getLiteralQualifiedNameAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getLiteralQualifiedNameAccess().getGroup_1()); }
		(rule__LiteralQualifiedName__Group_1__0)*
		{ after(grammarAccess.getLiteralQualifiedNameAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralQualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralQualifiedName__Group_1__0__Impl
	rule__LiteralQualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralQualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralQualifiedNameAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getLiteralQualifiedNameAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralQualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralQualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralQualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getLiteralQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__UnorderedGroup_3
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTimerAccess().getUnorderedGroup_3());
	}
:
	rule__Timer__UnorderedGroup_3__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getTimerAccess().getUnorderedGroup_3())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTimerAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}

rule__Timer__UnorderedGroup_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getTimerAccess().getGroup_3_0()); }
					(rule__Timer__Group_3_0__0)
					{ after(grammarAccess.getTimerAccess().getGroup_3_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getTimerAccess().getOnceAssignment_3_1()); }
					(rule__Timer__OnceAssignment_3_1)
					{ after(grammarAccess.getTimerAccess().getOnceAssignment_3_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getTimerAccess().getPausedAssignment_3_2()); }
					(rule__Timer__PausedAssignment_3_2)
					{ after(grammarAccess.getTimerAccess().getPausedAssignment_3_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getTimerAccess().getGroup_3_3()); }
					(rule__Timer__Group_3_3__0)
					{ after(grammarAccess.getTimerAccess().getGroup_3_3()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimerAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}

rule__Timer__UnorderedGroup_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__UnorderedGroup_3__Impl
	rule__Timer__UnorderedGroup_3__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__UnorderedGroup_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__UnorderedGroup_3__Impl
	rule__Timer__UnorderedGroup_3__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__UnorderedGroup_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__UnorderedGroup_3__Impl
	rule__Timer__UnorderedGroup_3__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__UnorderedGroup_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__UnorderedGroup_3__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__BeliefVariableImpl__UnorderedGroup_4
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4());
	}
:
	rule__BeliefVariableImpl__UnorderedGroup_4__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__UnorderedGroup_4__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getBeliefVariableImplAccess().getGroup_4_0()); }
					(rule__BeliefVariableImpl__Group_4_0__0)
					{ after(grammarAccess.getBeliefVariableImplAccess().getGroup_4_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getBeliefVariableImplAccess().getGroup_4_1()); }
					(rule__BeliefVariableImpl__Group_4_1__0)
					{ after(grammarAccess.getBeliefVariableImplAccess().getGroup_4_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__UnorderedGroup_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__UnorderedGroup_4__Impl
	rule__BeliefVariableImpl__UnorderedGroup_4__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__UnorderedGroup_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeliefVariableImpl__UnorderedGroup_4__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__UnorderedGroup_4
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getPropertyAccess().getUnorderedGroup_4());
	}
:
	rule__Property__UnorderedGroup_4__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getPropertyAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}

rule__Property__UnorderedGroup_4__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyAccess().getUnorderedGroup_4(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyAccess().getUnorderedGroup_4(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyAccess().getGroup_4_0()); }
					(rule__Property__Group_4_0__0)
					{ after(grammarAccess.getPropertyAccess().getGroup_4_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyAccess().getUnorderedGroup_4(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyAccess().getUnorderedGroup_4(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyAccess().getGroup_4_1()); }
					(rule__Property__Group_4_1__0)
					{ after(grammarAccess.getPropertyAccess().getGroup_4_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}

rule__Property__UnorderedGroup_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__UnorderedGroup_4__Impl
	rule__Property__UnorderedGroup_4__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__UnorderedGroup_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__UnorderedGroup_4__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__SetEvidence__UnorderedGroup_2
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2());
	}
:
	rule__SetEvidence__UnorderedGroup_2__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__SetEvidence__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getSetEvidenceAccess().getStrengthAssignment_2_0()); }
					(rule__SetEvidence__StrengthAssignment_2_0)
					{ after(grammarAccess.getSetEvidenceAccess().getStrengthAssignment_2_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getSetEvidenceAccess().getGroup_2_1()); }
					(rule__SetEvidence__Group_2_1__0)
					{ after(grammarAccess.getSetEvidenceAccess().getGroup_2_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__SetEvidence__UnorderedGroup_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetEvidence__UnorderedGroup_2__Impl
	rule__SetEvidence__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__UnorderedGroup_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetEvidence__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__RoqmeModel__DescriptionAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoqmeModelAccess().getDescriptionElementDescriptionParserRuleCall_0_0_0()); }
		ruleElementDescription
		{ after(grammarAccess.getRoqmeModelAccess().getDescriptionElementDescriptionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__NamespaceAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoqmeModelAccess().getNamespaceEStringParserRuleCall_0_2_0()); }
		ruleEString
		{ after(grammarAccess.getRoqmeModelAccess().getNamespaceEStringParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__SentencesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoqmeModelAccess().getSentencesImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getRoqmeModelAccess().getSentencesImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__DataTypesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoqmeModelAccess().getDataTypesDataTypeDefinitionParserRuleCall_2_0_0()); }
		ruleDataTypeDefinition
		{ after(grammarAccess.getRoqmeModelAccess().getDataTypesDataTypeDefinitionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__VariablesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoqmeModelAccess().getVariablesTypedVariableParserRuleCall_2_1_0()); }
		ruleTypedVariable
		{ after(grammarAccess.getRoqmeModelAccess().getVariablesTypedVariableParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoqmeModel__SentencesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoqmeModelAccess().getSentencesSentenceParserRuleCall_2_2_0()); }
		ruleSentence
		{ after(grammarAccess.getRoqmeModelAccess().getSentencesSentenceParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__DescriptionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveContextAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
		ruleElementDescription
		{ after(grammarAccess.getPrimitiveContextAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveContextAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimitiveContextAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveContext__DeclarationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveContextAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0()); }
		ruleDataTypeDeclaration
		{ after(grammarAccess.getPrimitiveContextAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__DescriptionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedContextAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
		ruleElementDescription
		{ after(grammarAccess.getDerivedContextAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedContextAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDerivedContextAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__DeclarationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedContextAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0()); }
		ruleDataTypeDeclaration
		{ after(grammarAccess.getDerivedContextAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedContext__DefinitionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedContextAccess().getDefinitionContextPatternParserRuleCall_6_0()); }
		ruleContextPattern
		{ after(grammarAccess.getDerivedContextAccess().getDefinitionContextPatternParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralPurposeVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGeneralPurposeVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__DeclarationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralPurposeVariableAccess().getDeclarationDataTypeDeclarationParserRuleCall_3_0()); }
		ruleDataTypeDeclaration
		{ after(grammarAccess.getGeneralPurposeVariableAccess().getDeclarationDataTypeDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralPurposeVariable__DefinitionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralPurposeVariableAccess().getDefinitionGeneralExpressionParserRuleCall_4_1_0()); }
		ruleGeneralExpression
		{ after(grammarAccess.getGeneralPurposeVariableAccess().getDefinitionGeneralExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DescriptionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
		ruleElementDescription
		{ after(grammarAccess.getParameterAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DeclarationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0()); }
		ruleDataTypeDeclaration
		{ after(grammarAccess.getParameterAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__InitializedToAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getInitializedToTypedValueParserRuleCall_5_1_0()); }
		ruleTypedValue
		{ after(grammarAccess.getParameterAccess().getInitializedToTypedValueParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTimerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__DeclarationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getDeclarationInbuiltDeclarationParserRuleCall_2_0()); }
		ruleInbuiltDeclaration
		{ after(grammarAccess.getTimerAccess().getDeclarationInbuiltDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__OffsetAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getOffsetTimeValueParserRuleCall_3_0_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getTimerAccess().getOffsetTimeValueParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__OnceAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getOnceOnetimeKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getTimerAccess().getOnceOnetimeKeyword_3_1_0()); }
			'onetime'
			{ after(grammarAccess.getTimerAccess().getOnceOnetimeKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getTimerAccess().getOnceOnetimeKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__PausedAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getPausedPausedKeyword_3_2_0()); }
		(
			{ before(grammarAccess.getTimerAccess().getPausedPausedKeyword_3_2_0()); }
			'paused'
			{ after(grammarAccess.getTimerAccess().getPausedPausedKeyword_3_2_0()); }
		)
		{ after(grammarAccess.getTimerAccess().getPausedPausedKeyword_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__DefinitionAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getDefinitionGeneralExpressionParserRuleCall_3_3_1_0()); }
		ruleGeneralExpression
		{ after(grammarAccess.getTimerAccess().getDefinitionGeneralExpressionParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__DescriptionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeliefVariableImplAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
		ruleElementDescription
		{ after(grammarAccess.getBeliefVariableImplAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeliefVariableImplAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBeliefVariableImplAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__DeclarationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeliefVariableImplAccess().getDeclarationInbuiltDeclarationParserRuleCall_3_0()); }
		ruleInbuiltDeclaration
		{ after(grammarAccess.getBeliefVariableImplAccess().getDeclarationInbuiltDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__ReferenceAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeliefVariableImplAccess().getReferenceEDoubleParserRuleCall_4_0_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getBeliefVariableImplAccess().getReferenceEDoubleParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeliefVariableImpl__SurvivalAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeliefVariableImplAccess().getSurvivalTimeValueParserRuleCall_4_1_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getBeliefVariableImplAccess().getSurvivalTimeValueParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__DescriptionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
		ruleElementDescription
		{ after(grammarAccess.getPropertyAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__DeclarationAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getDeclarationDataTypeDeclarationParserRuleCall_3_0_1_0()); }
		ruleDataTypeDeclaration
		{ after(grammarAccess.getPropertyAccess().getDeclarationDataTypeDeclarationParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TransformationAssignment_3_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTransformationOutputTransformationParserRuleCall_3_0_3_0()); }
		ruleOutputTransformation
		{ after(grammarAccess.getPropertyAccess().getTransformationOutputTransformationParserRuleCall_3_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__DeclarationAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getDeclarationInbuiltDeclarationParserRuleCall_3_1_0()); }
		ruleInbuiltDeclaration
		{ after(grammarAccess.getPropertyAccess().getDeclarationInbuiltDeclarationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ReferenceAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getReferenceEDoubleParserRuleCall_4_0_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getPropertyAccess().getReferenceEDoubleParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__SurvivalAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getSurvivalTimeValueParserRuleCall_4_1_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getPropertyAccess().getSurvivalTimeValueParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURIEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getImportAccess().getImportURIEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__DescriptionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
		ruleElementDescription
		{ after(grammarAccess.getObservationAccess().getDescriptionElementDescriptionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getObservationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__PatternAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getPatternContextPatternParserRuleCall_4_0()); }
		ruleContextPattern
		{ after(grammarAccess.getObservationAccess().getPatternContextPatternParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__ActionsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getActionsActionParserRuleCall_5_0_0()); }
		ruleAction
		{ after(grammarAccess.getObservationAccess().getActionsActionParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__ActionsAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getActionsActionParserRuleCall_5_1_1_0()); }
		ruleAction
		{ after(grammarAccess.getObservationAccess().getActionsActionParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetVariableAccess().getVariableTypedVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSetVariableAccess().getVariableTypedVariableQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSetVariableAccess().getVariableTypedVariableQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSetVariableAccess().getVariableTypedVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVariable__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetVariableAccess().getExpressionGeneralExpressionParserRuleCall_3_0()); }
		ruleGeneralExpression
		{ after(grammarAccess.getSetVariableAccess().getExpressionGeneralExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClearEvidence__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClearEvidenceAccess().getTargetBeliefVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getClearEvidenceAccess().getTargetBeliefVariableQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getClearEvidenceAccess().getTargetBeliefVariableQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getClearEvidenceAccess().getTargetBeliefVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__InfluenceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetEvidenceAccess().getInfluenceInfluenceEnumEnumRuleCall_0_0()); }
		ruleInfluenceEnum
		{ after(grammarAccess.getSetEvidenceAccess().getInfluenceInfluenceEnumEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetEvidenceAccess().getTargetBeliefVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSetEvidenceAccess().getTargetBeliefVariableQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSetEvidenceAccess().getTargetBeliefVariableQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSetEvidenceAccess().getTargetBeliefVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__StrengthAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetEvidenceAccess().getStrengthStrengthEnumEnumRuleCall_2_0_0()); }
		ruleStrengthEnum
		{ after(grammarAccess.getSetEvidenceAccess().getStrengthStrengthEnumEnumRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEvidence__SurvivalAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetEvidenceAccess().getSurvivalTimeValueParserRuleCall_2_1_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getSetEvidenceAccess().getSurvivalTimeValueParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartTimer__TimerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartTimerAccess().getTimerTimerCrossReference_1_0()); }
		(
			{ before(grammarAccess.getStartTimerAccess().getTimerTimerQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getStartTimerAccess().getTimerTimerQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getStartTimerAccess().getTimerTimerCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimer__TimerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopTimerAccess().getTimerTimerCrossReference_1_0()); }
		(
			{ before(grammarAccess.getStopTimerAccess().getTimerTimerQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getStopTimerAccess().getTimerTimerQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getStopTimerAccess().getTimerTimerCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResumeTimer__TimerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResumeTimerAccess().getTimerTimerCrossReference_1_0()); }
		(
			{ before(grammarAccess.getResumeTimerAccess().getTimerTimerQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getResumeTimerAccess().getTimerTimerQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getResumeTimerAccess().getTimerTimerCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeDefinitionAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getDataTypeDefinitionAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__DataTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDataTypeParserRuleCall_3_0()); }
		ruleDataType
		{ after(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDataTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__CardinalityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getBooleanTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__CardinalityAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeAccess().getCardinalityINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEnumTypeAccess().getCardinalityINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__LiteralsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeAccess().getLiteralsEnumLiteralParserRuleCall_3_0()); }
		ruleEnumLiteral
		{ after(grammarAccess.getEnumTypeAccess().getLiteralsEnumLiteralParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__LiteralsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeAccess().getLiteralsEnumLiteralParserRuleCall_4_1_0()); }
		ruleEnumLiteral
		{ after(grammarAccess.getEnumTypeAccess().getLiteralsEnumLiteralParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventType__CardinalityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEventTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__CardinalityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumericTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__ConstraintsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_3_0()); }
		ruleNumericTypeConstraint
		{ after(grammarAccess.getNumericTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerBound__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerBoundAccess().getValueEDoubleParserRuleCall_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getLowerBoundAccess().getValueEDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperBoundAccess().getValueEDoubleParserRuleCall_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getUpperBoundAccess().getValueEDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__CardinalityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getUnitMeasuredTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__ConstraintsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_3_0()); }
		ruleNumericTypeConstraint
		{ after(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__UnitAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredTypeAccess().getUnitEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getUnitMeasuredTypeAccess().getUnitEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredType__ConstraintsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_6_0()); }
		ruleNumericTypeConstraint
		{ after(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__CardinalityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getValueEnumLiteralCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEnumValueAccess().getValueEnumLiteralLiteralQualifiedNameParserRuleCall_1_0_1()); }
			ruleLiteralQualifiedName
			{ after(grammarAccess.getEnumValueAccess().getValueEnumLiteralLiteralQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEnumValueAccess().getValueEnumLiteralCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue_Impl__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValue_ImplAccess().getValueEDoubleParserRuleCall_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getNumericValue_ImplAccess().getValueEDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredValue_Impl__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredValue_ImplAccess().getValueEDoubleParserRuleCall_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getUnitMeasuredValue_ImplAccess().getValueEDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredValue_Impl__UnitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredValue_ImplAccess().getUnitEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getUnitMeasuredValue_ImplAccess().getUnitEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getValueEDoubleParserRuleCall_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getTimeValueAccess().getValueEDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__UnitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeValueAccess().getUnitTimeUnitEnumParserRuleCall_2_0()); }
		ruleTimeUnitEnum
		{ after(grammarAccess.getTimeValueAccess().getUnitTimeUnitEnumParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanArrayAccess().getValuesBooleanValueParserRuleCall_1_0()); }
		ruleBooleanValue
		{ after(grammarAccess.getBooleanArrayAccess().getValuesBooleanValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanArray__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanArrayAccess().getValuesBooleanValueParserRuleCall_2_1_0()); }
		ruleBooleanValue
		{ after(grammarAccess.getBooleanArrayAccess().getValuesBooleanValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumArrayAccess().getValuesEnumValueParserRuleCall_1_0()); }
		ruleEnumValue
		{ after(grammarAccess.getEnumArrayAccess().getValuesEnumValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumArray__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumArrayAccess().getValuesEnumValueParserRuleCall_2_1_0()); }
		ruleEnumValue
		{ after(grammarAccess.getEnumArrayAccess().getValuesEnumValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericArray_ImplAccess().getValuesNumericValue_ImplParserRuleCall_1_0()); }
		ruleNumericValue_Impl
		{ after(grammarAccess.getNumericArray_ImplAccess().getValuesNumericValue_ImplParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericArray_Impl__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericArray_ImplAccess().getValuesNumericValue_ImplParserRuleCall_2_1_0()); }
		ruleNumericValue_Impl
		{ after(grammarAccess.getNumericArray_ImplAccess().getValuesNumericValue_ImplParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesUnitMeasuredValue_ImplParserRuleCall_1_0()); }
		ruleUnitMeasuredValue_Impl
		{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesUnitMeasuredValue_ImplParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitMeasuredArray_Impl__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesUnitMeasuredValue_ImplParserRuleCall_2_1_0()); }
		ruleUnitMeasuredValue_Impl
		{ after(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesUnitMeasuredValue_ImplParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeArrayAccess().getValuesTimeValueParserRuleCall_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getTimeArrayAccess().getValuesTimeValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeArray__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeArrayAccess().getValuesTimeValueParserRuleCall_2_1_0()); }
		ruleTimeValue
		{ after(grammarAccess.getTimeArrayAccess().getValuesTimeValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedDeclaration__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainedDeclarationAccess().getTypeDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getContainedDeclarationAccess().getTypeDataTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencedDeclaration__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferencedDeclarationAccess().getTypeDataTypeDefinitionCrossReference_0()); }
		(
			{ before(grammarAccess.getReferencedDeclarationAccess().getTypeDataTypeDefinitionIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferencedDeclarationAccess().getTypeDataTypeDefinitionIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getReferencedDeclarationAccess().getTypeDataTypeDefinitionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralExpression__TermAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralExpressionAccess().getTermTermParserRuleCall_0()); }
		ruleTerm
		{ after(grammarAccess.getGeneralExpressionAccess().getTermTermParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputTransformation__TermAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputTransformationAccess().getTermTermParserRuleCall_0()); }
		ruleTerm
		{ after(grammarAccess.getOutputTransformationAccess().getTermTermParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextPattern__TermAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextPatternAccess().getTermTermParserRuleCall_0()); }
		ruleTerm
		{ after(grammarAccess.getContextPatternAccess().getTermTermParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnceTerm__TermAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnceTermAccess().getTermWhileTermParserRuleCall_1_0()); }
		ruleWhileTerm
		{ after(grammarAccess.getOnceTermAccess().getTermWhileTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileTerm__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileTermAccess().getRightOrBooleanTermParserRuleCall_1_3_0()); }
		ruleOrBooleanTerm
		{ after(grammarAccess.getWhileTermAccess().getRightOrBooleanTermParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__NrepAssignment_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetionTermAccess().getNrepINTTerminalRuleCall_1_0_3_0()); }
		RULE_INT
		{ after(grammarAccess.getRepetionTermAccess().getNrepINTTerminalRuleCall_1_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__LowerBoundAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetionTermAccess().getLowerBoundINTTerminalRuleCall_1_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getRepetionTermAccess().getLowerBoundINTTerminalRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetionTerm__UpperBoundAssignment_1_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetionTermAccess().getUpperBoundINTTerminalRuleCall_1_1_5_0()); }
		RULE_INT
		{ after(grammarAccess.getRepetionTermAccess().getUpperBoundINTTerminalRuleCall_1_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTermAccess().getRightConditionalTermParserRuleCall_1_2_0()); }
		ruleConditionalTerm
		{ after(grammarAccess.getSequenceTermAccess().getRightConditionalTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrEventTerm__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrEventTermAccess().getRightAndEventTermParserRuleCall_1_2_0()); }
		ruleAndEventTerm
		{ after(grammarAccess.getOrEventTermAccess().getRightAndEventTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndEventTerm__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndEventTermAccess().getRightAlternatives_1_2_0()); }
		(rule__AndEventTerm__RightAlternatives_1_2_0)
		{ after(grammarAccess.getAndEventTermAccess().getRightAlternatives_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEventTerm__TermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotEventTermAccess().getTermConditionalTermParserRuleCall_2_0()); }
		ruleConditionalTerm
		{ after(grammarAccess.getNotEventTermAccess().getTermConditionalTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__TermsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalTermAccess().getTermsOrBooleanTermParserRuleCall_1_2_0()); }
		ruleOrBooleanTerm
		{ after(grammarAccess.getConditionalTermAccess().getTermsOrBooleanTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__TermsAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalTermAccess().getTermsConditionalTermParserRuleCall_1_4_0()); }
		ruleConditionalTerm
		{ after(grammarAccess.getConditionalTermAccess().getTermsConditionalTermParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrBooleanTerm__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrBooleanTermAccess().getRightAndBooleanTermParserRuleCall_1_2_0()); }
		ruleAndBooleanTerm
		{ after(grammarAccess.getOrBooleanTermAccess().getRightAndBooleanTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndBooleanTerm__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndBooleanTermAccess().getRightAlternatives_1_2_0()); }
		(rule__AndBooleanTerm__RightAlternatives_1_2_0)
		{ after(grammarAccess.getAndBooleanTermAccess().getRightAlternatives_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanTerm__TermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotBooleanTermAccess().getTermRelationalTermParserRuleCall_2_0()); }
		ruleRelationalTerm
		{ after(grammarAccess.getNotBooleanTermAccess().getTermRelationalTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalTerm__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalTermAccess().getRightAdditionTermParserRuleCall_1_1_0()); }
		ruleAdditionTerm
		{ after(grammarAccess.getRelationalTermAccess().getRightAdditionTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionTerm__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionTermAccess().getRightMultiplicationTermParserRuleCall_1_1_0()); }
		ruleMultiplicationTerm
		{ after(grammarAccess.getAdditionTermAccess().getRightMultiplicationTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationTerm__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationTermAccess().getRightPrimaryTermParserRuleCall_1_1_0()); }
		rulePrimaryTerm
		{ after(grammarAccess.getMultiplicationTermAccess().getRightPrimaryTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarTerm__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarTermAccess().getVariableTypedVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVarTermAccess().getVariableTypedVariableQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getVarTermAccess().getVariableTypedVariableQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVarTermAccess().getVariableTypedVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstTerm__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstTermAccess().getValueTypedValueParserRuleCall_0()); }
		ruleTypedValue
		{ after(grammarAccess.getConstTermAccess().getValueTypedValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleFunction__PatternAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScheduleFunctionAccess().getPatternEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getScheduleFunctionAccess().getPatternEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__TermsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithFunctionAccess().getTermsAlternatives_0_0_0()); }
		(rule__ArithFunction__TermsAlternatives_0_0_0)
		{ after(grammarAccess.getArithFunctionAccess().getTermsAlternatives_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithFunctionAccess().getNameArithFtnEnumEnumRuleCall_1_0()); }
		ruleArithFtnEnum
		{ after(grammarAccess.getArithFunctionAccess().getNameArithFtnEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__TermsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithFunctionAccess().getTermsTermParserRuleCall_2_1_0_0()); }
		ruleTerm
		{ after(grammarAccess.getArithFunctionAccess().getTermsTermParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunction__TermsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getArithFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__TermsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationFunctionAccess().getTermsAlternatives_0_0_0()); }
		(rule__AggregationFunction__TermsAlternatives_0_0_0)
		{ after(grammarAccess.getAggregationFunctionAccess().getTermsAlternatives_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationFunctionAccess().getNameAggregationFtnEnumEnumRuleCall_1_0()); }
		ruleAggregationFtnEnum
		{ after(grammarAccess.getAggregationFunctionAccess().getNameAggregationFtnEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__TermsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationFunctionAccess().getTermsTermParserRuleCall_2_1_0_0()); }
		ruleTerm
		{ after(grammarAccess.getAggregationFunctionAccess().getTermsTermParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationFunction__TermsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getAggregationFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__TermsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternFunctionAccess().getTermsAlternatives_0_0_0()); }
		(rule__PatternFunction__TermsAlternatives_0_0_0)
		{ after(grammarAccess.getPatternFunctionAccess().getTermsAlternatives_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternFunctionAccess().getNamePatternFtnEnumEnumRuleCall_1_0()); }
		rulePatternFtnEnum
		{ after(grammarAccess.getPatternFunctionAccess().getNamePatternFtnEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__TermsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternFunctionAccess().getTermsTermParserRuleCall_2_1_0_0()); }
		ruleTerm
		{ after(grammarAccess.getPatternFunctionAccess().getTermsTermParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternFunction__TermsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getPatternFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__TermsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionFunctionAccess().getTermsAlternatives_0_0_0()); }
		(rule__CollectionFunction__TermsAlternatives_0_0_0)
		{ after(grammarAccess.getCollectionFunctionAccess().getTermsAlternatives_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionFunctionAccess().getNameCollectionFtnEnumEnumRuleCall_1_0()); }
		ruleCollectionFtnEnum
		{ after(grammarAccess.getCollectionFunctionAccess().getNameCollectionFtnEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__TermsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionFunctionAccess().getTermsTermParserRuleCall_2_1_0_0()); }
		ruleTerm
		{ after(grammarAccess.getCollectionFunctionAccess().getTermsTermParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionFunction__TermsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getCollectionFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ROQME_DESCRIPTION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
