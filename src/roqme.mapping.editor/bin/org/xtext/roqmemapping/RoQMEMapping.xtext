//  This file belongs to the RoQME toolchain.
//  Copyright (C) 2019  University of Extremadura, University of MÃ¡laga, Biometric Vox.
//
//  RoQME is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 3 of the License, or
//  any later version.
//
//  RoQME is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  GNU GPLv3 link: http://www.gnu.org/licenses/gpl-3.0.html

grammar org.xtext.roqmemapping.RoQMEMapping with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.ecore.org/service/ServiceDefinition" as serviceDefinition
import "platform:/resource/roqme.metamodel/metamodel/kernel/roqmekernel.ecore" as kernel
import "platform:/resource/roqme.metamodel/metamodel/mapping/roqmemapping.ecore" as mapping

MappingModel returns mapping::MappingModel:
	(imports += Import)*
	(monitors += Monitor)*;

Import returns mapping::Import:
	'import' importURI=EString;
	
Monitor returns mapping::Monitor:
	'context' context=[kernel::Context | QualifiedName] 'monitor' 
	'{'
		(('attribute' ':' source=QualifiedName '[' sourceType=EString ']') &
		('service' ':' service=[serviceDefinition::CommunicationServiceDefinition | QualifiedName]) &
		(opts += Period)? &
		(opts += MinTimeBtwUpdates)? &
		(opts += MinDiffBtwUpdates)?)
	'}';

Period returns mapping::Period:
	'period' ':' value=INT unit=('ms' | 's' | 'min' | 'h');
	
MinTimeBtwUpdates returns mapping::MinTimeBtwUpdates:
	'minTimeBtwUpdates' ':' value=INT unit=('ms' | 's' | 'min' | 'h');
	
MinDiffBtwUpdates returns mapping::MinDiffBtwUpdates:
	'minDiffBtwUpdates' ':' value=EDouble;
	
EString returns ecore::EString:
	STRING | ID;

EDouble returns ecore::EDouble:
	'-'? INT ('.' INT)?;
	
QualifiedName returns ecore::EString: 
	ID ('.' ID)*;