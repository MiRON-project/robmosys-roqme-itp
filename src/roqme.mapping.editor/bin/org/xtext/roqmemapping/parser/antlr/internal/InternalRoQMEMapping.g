/*
 * generated by Xtext 2.12.0
 */
grammar InternalRoQMEMapping;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.roqmemapping.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.roqmemapping.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.roqmemapping.services.RoQMEMappingGrammarAccess;

}

@parser::members {

 	private RoQMEMappingGrammarAccess grammarAccess;

    public InternalRoQMEMappingParser(TokenStream input, RoQMEMappingGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MappingModel";
   	}

   	@Override
   	protected RoQMEMappingGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMappingModel
entryRuleMappingModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingModelRule()); }
	iv_ruleMappingModel=ruleMappingModel
	{ $current=$iv_ruleMappingModel.current; }
	EOF;

// Rule MappingModel
ruleMappingModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingModelAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"org.xtext.roqmemapping.RoQMEMapping.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingModelAccess().getMonitorsMonitorParserRuleCall_1_0());
				}
				lv_monitors_1_0=ruleMonitor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingModelRule());
					}
					add(
						$current,
						"monitors",
						lv_monitors_1_0,
						"org.xtext.roqmemapping.RoQMEMapping.Monitor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportURIEStringParserRuleCall_1_0());
				}
				lv_importURI_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.xtext.roqmemapping.RoQMEMapping.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMonitor
entryRuleMonitor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMonitorRule()); }
	iv_ruleMonitor=ruleMonitor
	{ $current=$iv_ruleMonitor.current; }
	EOF;

// Rule Monitor
ruleMonitor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getMonitorAccess().getContextKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonitorRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMonitorAccess().getContextContextCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='monitor'
		{
			newLeafNode(otherlv_2, grammarAccess.getMonitorAccess().getMonitorKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMonitorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getMonitorAccess().getUnorderedGroup_4());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 0);
					}
								({true}?=>(otherlv_5='attribute'
								{
									newLeafNode(otherlv_5, grammarAccess.getMonitorAccess().getAttributeKeyword_4_0_0());
								}
								otherlv_6=':'
								{
									newLeafNode(otherlv_6, grammarAccess.getMonitorAccess().getColonKeyword_4_0_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getMonitorAccess().getSourceQualifiedNameParserRuleCall_4_0_2_0());
										}
										lv_source_7_0=ruleQualifiedName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getMonitorRule());
											}
											set(
												$current,
												"source",
												lv_source_7_0,
												"org.xtext.roqmemapping.RoQMEMapping.QualifiedName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_8='['
								{
									newLeafNode(otherlv_8, grammarAccess.getMonitorAccess().getLeftSquareBracketKeyword_4_0_3());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getMonitorAccess().getSourceTypeEStringParserRuleCall_4_0_4_0());
										}
										lv_sourceType_9_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getMonitorRule());
											}
											set(
												$current,
												"sourceType",
												lv_sourceType_9_0,
												"org.xtext.roqmemapping.RoQMEMapping.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_10=']'
								{
									newLeafNode(otherlv_10, grammarAccess.getMonitorAccess().getRightSquareBracketKeyword_4_0_5());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMonitorAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 1);
					}
								({true}?=>(otherlv_11='service'
								{
									newLeafNode(otherlv_11, grammarAccess.getMonitorAccess().getServiceKeyword_4_1_0());
								}
								otherlv_12=':'
								{
									newLeafNode(otherlv_12, grammarAccess.getMonitorAccess().getColonKeyword_4_1_1());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getMonitorRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getMonitorAccess().getServiceCommunicationServiceDefinitionCrossReference_4_1_2_0());
										}
										ruleQualifiedName
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMonitorAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 2);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getMonitorAccess().getOptsPeriodParserRuleCall_4_2_0());
									}
									lv_opts_14_0=rulePeriod
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getMonitorRule());
										}
										add(
											$current,
											"opts",
											lv_opts_14_0,
											"org.xtext.roqmemapping.RoQMEMapping.Period");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMonitorAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 3);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getMonitorAccess().getOptsMinTimeBtwUpdatesParserRuleCall_4_3_0());
									}
									lv_opts_15_0=ruleMinTimeBtwUpdates
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getMonitorRule());
										}
										add(
											$current,
											"opts",
											lv_opts_15_0,
											"org.xtext.roqmemapping.RoQMEMapping.MinTimeBtwUpdates");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMonitorAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMonitorAccess().getUnorderedGroup_4(), 4);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getMonitorAccess().getOptsMinDiffBtwUpdatesParserRuleCall_4_4_0());
									}
									lv_opts_16_0=ruleMinDiffBtwUpdates
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getMonitorRule());
										}
										add(
											$current,
											"opts",
											lv_opts_16_0,
											"org.xtext.roqmemapping.RoQMEMapping.MinDiffBtwUpdates");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMonitorAccess().getUnorderedGroup_4());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getMonitorAccess().getUnorderedGroup_4())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getMonitorAccess().getUnorderedGroup_4());
				}
		)
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getMonitorAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePeriod
entryRulePeriod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodRule()); }
	iv_rulePeriod=rulePeriod
	{ $current=$iv_rulePeriod.current; }
	EOF;

// Rule Period
rulePeriod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='period'
		{
			newLeafNode(otherlv_0, grammarAccess.getPeriodAccess().getPeriodKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPeriodAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getPeriodAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPeriodRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_unit_3_1='ms'
					{
						newLeafNode(lv_unit_3_1, grammarAccess.getPeriodAccess().getUnitMsKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPeriodRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_1, null);
					}
					    |
					lv_unit_3_2='s'
					{
						newLeafNode(lv_unit_3_2, grammarAccess.getPeriodAccess().getUnitSKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPeriodRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_2, null);
					}
					    |
					lv_unit_3_3='min'
					{
						newLeafNode(lv_unit_3_3, grammarAccess.getPeriodAccess().getUnitMinKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPeriodRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_3, null);
					}
					    |
					lv_unit_3_4='h'
					{
						newLeafNode(lv_unit_3_4, grammarAccess.getPeriodAccess().getUnitHKeyword_3_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPeriodRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_4, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMinTimeBtwUpdates
entryRuleMinTimeBtwUpdates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinTimeBtwUpdatesRule()); }
	iv_ruleMinTimeBtwUpdates=ruleMinTimeBtwUpdates
	{ $current=$iv_ruleMinTimeBtwUpdates.current; }
	EOF;

// Rule MinTimeBtwUpdates
ruleMinTimeBtwUpdates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='minTimeBtwUpdates'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinTimeBtwUpdatesAccess().getMinTimeBtwUpdatesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinTimeBtwUpdatesAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getMinTimeBtwUpdatesAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMinTimeBtwUpdatesRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_unit_3_1='ms'
					{
						newLeafNode(lv_unit_3_1, grammarAccess.getMinTimeBtwUpdatesAccess().getUnitMsKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMinTimeBtwUpdatesRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_1, null);
					}
					    |
					lv_unit_3_2='s'
					{
						newLeafNode(lv_unit_3_2, grammarAccess.getMinTimeBtwUpdatesAccess().getUnitSKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMinTimeBtwUpdatesRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_2, null);
					}
					    |
					lv_unit_3_3='min'
					{
						newLeafNode(lv_unit_3_3, grammarAccess.getMinTimeBtwUpdatesAccess().getUnitMinKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMinTimeBtwUpdatesRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_3, null);
					}
					    |
					lv_unit_3_4='h'
					{
						newLeafNode(lv_unit_3_4, grammarAccess.getMinTimeBtwUpdatesAccess().getUnitHKeyword_3_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMinTimeBtwUpdatesRule());
						}
						setWithLastConsumed($current, "unit", lv_unit_3_4, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMinDiffBtwUpdates
entryRuleMinDiffBtwUpdates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinDiffBtwUpdatesRule()); }
	iv_ruleMinDiffBtwUpdates=ruleMinDiffBtwUpdates
	{ $current=$iv_ruleMinDiffBtwUpdates.current; }
	EOF;

// Rule MinDiffBtwUpdates
ruleMinDiffBtwUpdates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='minDiffBtwUpdates'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinDiffBtwUpdatesAccess().getMinDiffBtwUpdatesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinDiffBtwUpdatesAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinDiffBtwUpdatesAccess().getValueEDoubleParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinDiffBtwUpdatesRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.roqmemapping.RoQMEMapping.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2_0());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2_1());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
