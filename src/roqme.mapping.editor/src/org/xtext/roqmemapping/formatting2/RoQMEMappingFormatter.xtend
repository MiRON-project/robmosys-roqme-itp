/*
 * generated by Xtext 2.12.0
 */
package org.xtext.roqmemapping.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.roqmemapping.services.RoQMEMappingGrammarAccess
import roqme.metamodel.mapping.ConfigOpt
import roqme.metamodel.mapping.Import
import roqme.metamodel.mapping.MappingModel
import roqme.metamodel.mapping.Monitor

class RoQMEMappingFormatter extends AbstractFormatter2 {
	
	@Inject extension RoQMEMappingGrammarAccess

	def dispatch void format(MappingModel mappingModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Import _import : mappingModel.getImports()) {
			_import.format;
		}
		for (Monitor monitor : mappingModel.getMonitors()) {
			monitor.format;
		}
	}

	def dispatch void format(Monitor monitor, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (ConfigOpt configOpt : monitor.getOpts()) {
			configOpt.format;
		}
	}
	
	// TODO: implement for 
}
