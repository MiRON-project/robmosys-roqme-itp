/*
 * generated by Xtext 2.12.0
 */
grammar InternalRoQME;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.roqme.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.roqme.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.roqme.services.RoQMEGrammarAccess;

}

@parser::members {

 	private RoQMEGrammarAccess grammarAccess;

    public InternalRoQMEParser(TokenStream input, RoQMEGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RoqmeModel";
   	}

   	@Override
   	protected RoQMEGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRoqmeModel
entryRuleRoqmeModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoqmeModelRule()); }
	iv_ruleRoqmeModel=ruleRoqmeModel
	{ $current=$iv_ruleRoqmeModel.current; }
	EOF;

// Rule RoqmeModel
ruleRoqmeModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRoqmeModelAccess().getDescriptionElementDescriptionParserRuleCall_0_0_0());
					}
					lv_description_0_0=ruleElementDescription
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoqmeModelRule());
						}
						set(
							$current,
							"description",
							lv_description_0_0,
							"org.xtext.roqme.RoQME.ElementDescription");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_1='roqme'
			{
				newLeafNode(otherlv_1, grammarAccess.getRoqmeModelAccess().getRoqmeKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRoqmeModelAccess().getNamespaceEStringParserRuleCall_0_2_0());
					}
					lv_namespace_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoqmeModelRule());
						}
						set(
							$current,
							"namespace",
							lv_namespace_2_0,
							"org.xtext.roqme.RoQME.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRoqmeModelAccess().getSentencesImportParserRuleCall_1_0());
				}
				lv_sentences_3_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoqmeModelRule());
					}
					add(
						$current,
						"sentences",
						lv_sentences_3_0,
						"org.xtext.roqme.RoQME.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRoqmeModelAccess().getDataTypesDataTypeDefinitionParserRuleCall_2_0_0());
					}
					lv_dataTypes_4_0=ruleDataTypeDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoqmeModelRule());
						}
						add(
							$current,
							"dataTypes",
							lv_dataTypes_4_0,
							"org.xtext.roqme.RoQME.DataTypeDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getRoqmeModelAccess().getVariablesTypedVariableParserRuleCall_2_1_0());
					}
					lv_variables_5_0=ruleTypedVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoqmeModelRule());
						}
						add(
							$current,
							"variables",
							lv_variables_5_0,
							"org.xtext.roqme.RoQME.TypedVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getRoqmeModelAccess().getSentencesSentenceParserRuleCall_2_2_0());
					}
					lv_sentences_6_0=ruleSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoqmeModelRule());
						}
						add(
							$current,
							"sentences",
							lv_sentences_6_0,
							"org.xtext.roqme.RoQME.Sentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTypedVariable
entryRuleTypedVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedVariableRule()); }
	iv_ruleTypedVariable=ruleTypedVariable
	{ $current=$iv_ruleTypedVariable.current; }
	EOF;

// Rule TypedVariable
ruleTypedVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypedVariableAccess().getParameterParserRuleCall_0());
		}
		this_Parameter_0=ruleParameter
		{
			$current = $this_Parameter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypedVariableAccess().getTimerParserRuleCall_1());
		}
		this_Timer_1=ruleTimer
		{
			$current = $this_Timer_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypedVariableAccess().getGeneralPurposeVariableParserRuleCall_2());
		}
		this_GeneralPurposeVariable_2=ruleGeneralPurposeVariable
		{
			$current = $this_GeneralPurposeVariable_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypedVariableAccess().getContextParserRuleCall_3());
		}
		this_Context_3=ruleContext
		{
			$current = $this_Context_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypedVariableAccess().getBeliefVariableParserRuleCall_4());
		}
		this_BeliefVariable_4=ruleBeliefVariable
		{
			$current = $this_BeliefVariable_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	iv_ruleContext=ruleContext
	{ $current=$iv_ruleContext.current; }
	EOF;

// Rule Context
ruleContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getContextAccess().getDerivedContextParserRuleCall_0());
		}
		this_DerivedContext_0=ruleDerivedContext
		{
			$current = $this_DerivedContext_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContextAccess().getPrimitiveContextParserRuleCall_1());
		}
		this_PrimitiveContext_1=rulePrimitiveContext
		{
			$current = $this_PrimitiveContext_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimitiveContext
entryRulePrimitiveContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveContextRule()); }
	iv_rulePrimitiveContext=rulePrimitiveContext
	{ $current=$iv_rulePrimitiveContext.current; }
	EOF;

// Rule PrimitiveContext
rulePrimitiveContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveContextAccess().getDescriptionElementDescriptionParserRuleCall_0_0());
				}
				lv_description_0_0=ruleElementDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveContextRule());
					}
					set(
						$current,
						"description",
						lv_description_0_0,
						"org.xtext.roqme.RoQME.ElementDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='context'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimitiveContextAccess().getContextKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPrimitiveContextAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveContextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getPrimitiveContextAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveContextAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0());
				}
				lv_declaration_4_0=ruleDataTypeDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveContextRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_4_0,
						"org.xtext.roqme.RoQME.DataTypeDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDerivedContext
entryRuleDerivedContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerivedContextRule()); }
	iv_ruleDerivedContext=ruleDerivedContext
	{ $current=$iv_ruleDerivedContext.current; }
	EOF;

// Rule DerivedContext
ruleDerivedContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivedContextAccess().getDescriptionElementDescriptionParserRuleCall_0_0());
				}
				lv_description_0_0=ruleElementDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivedContextRule());
					}
					set(
						$current,
						"description",
						lv_description_0_0,
						"org.xtext.roqme.RoQME.ElementDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='context'
		{
			newLeafNode(otherlv_1, grammarAccess.getDerivedContextAccess().getContextKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDerivedContextAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDerivedContextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getDerivedContextAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivedContextAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0());
				}
				lv_declaration_4_0=ruleDataTypeDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivedContextRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_4_0,
						"org.xtext.roqme.RoQME.DataTypeDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=':='
		{
			newLeafNode(otherlv_5, grammarAccess.getDerivedContextAccess().getColonEqualsSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivedContextAccess().getDefinitionContextPatternParserRuleCall_6_0());
				}
				lv_definition_6_0=ruleContextPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivedContextRule());
					}
					set(
						$current,
						"definition",
						lv_definition_6_0,
						"org.xtext.roqme.RoQME.ContextPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGeneralPurposeVariable
entryRuleGeneralPurposeVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralPurposeVariableRule()); }
	iv_ruleGeneralPurposeVariable=ruleGeneralPurposeVariable
	{ $current=$iv_ruleGeneralPurposeVariable.current; }
	EOF;

// Rule GeneralPurposeVariable
ruleGeneralPurposeVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeneralPurposeVariableAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGeneralPurposeVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralPurposeVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeneralPurposeVariableAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralPurposeVariableAccess().getDeclarationDataTypeDeclarationParserRuleCall_3_0());
				}
				lv_declaration_3_0=ruleDataTypeDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralPurposeVariableRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_3_0,
						"org.xtext.roqme.RoQME.DataTypeDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':='
			{
				newLeafNode(otherlv_4, grammarAccess.getGeneralPurposeVariableAccess().getColonEqualsSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeneralPurposeVariableAccess().getDefinitionGeneralExpressionParserRuleCall_4_1_0());
					}
					lv_definition_5_0=ruleGeneralExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeneralPurposeVariableRule());
						}
						set(
							$current,
							"definition",
							lv_definition_5_0,
							"org.xtext.roqme.RoQME.GeneralExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getDescriptionElementDescriptionParserRuleCall_0_0());
				}
				lv_description_0_0=ruleElementDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"description",
						lv_description_0_0,
						"org.xtext.roqme.RoQME.ElementDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='param'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getParamKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getDeclarationDataTypeDeclarationParserRuleCall_4_0());
				}
				lv_declaration_4_0=ruleDataTypeDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_4_0,
						"org.xtext.roqme.RoQME.DataTypeDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='default'
			{
				newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getDefaultKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getInitializedToTypedValueParserRuleCall_5_1_0());
					}
					lv_initializedTo_6_0=ruleTypedValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"initializedTo",
							lv_initializedTo_6_0,
							"org.xtext.roqme.RoQME.TypedValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTimer
entryRuleTimer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimerRule()); }
	iv_ruleTimer=ruleTimer
	{ $current=$iv_ruleTimer.current; }
	EOF;

// Rule Timer
ruleTimer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='timer'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimerAccess().getTimerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTimerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTimerAccess().getDeclarationInbuiltDeclarationParserRuleCall_2_0());
				}
				lv_declaration_2_0=ruleInbuiltDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimerRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_2_0,
						"org.xtext.roqme.RoQME.InbuiltDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getTimerAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='offset'
								{
									newLeafNode(otherlv_4, grammarAccess.getTimerAccess().getOffsetKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getTimerAccess().getOffsetTimeValueParserRuleCall_3_0_1_0());
										}
										lv_offset_5_0=ruleTimeValue
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getTimerRule());
											}
											set(
												$current,
												"offset",
												lv_offset_5_0,
												"org.xtext.roqme.RoQME.TimeValue");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimerAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_once_6_0='onetime'
									{
										newLeafNode(lv_once_6_0, grammarAccess.getTimerAccess().getOnceOnetimeKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTimerRule());
										}
										setWithLastConsumed($current, "once", true, "onetime");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimerAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									lv_paused_7_0='paused'
									{
										newLeafNode(lv_paused_7_0, grammarAccess.getTimerAccess().getPausedPausedKeyword_3_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTimerRule());
										}
										setWithLastConsumed($current, "paused", true, "paused");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimerAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getTimerAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_8=':='
								{
									newLeafNode(otherlv_8, grammarAccess.getTimerAccess().getColonEqualsSignKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getTimerAccess().getDefinitionGeneralExpressionParserRuleCall_3_3_1_0());
										}
										lv_definition_9_0=ruleGeneralExpression
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getTimerRule());
											}
											set(
												$current,
												"definition",
												lv_definition_9_0,
												"org.xtext.roqme.RoQME.GeneralExpression");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimerAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getTimerAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getTimerAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleBeliefVariable
entryRuleBeliefVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeliefVariableRule()); }
	iv_ruleBeliefVariable=ruleBeliefVariable
	{ $current=$iv_ruleBeliefVariable.current; }
	EOF;

// Rule BeliefVariable
ruleBeliefVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBeliefVariableAccess().getBeliefVariableImplParserRuleCall_0());
		}
		this_BeliefVariableImpl_0=ruleBeliefVariableImpl
		{
			$current = $this_BeliefVariableImpl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBeliefVariableAccess().getPropertyParserRuleCall_1());
		}
		this_Property_1=ruleProperty
		{
			$current = $this_Property_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBeliefVariableImpl
entryRuleBeliefVariableImpl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeliefVariableImplRule()); }
	iv_ruleBeliefVariableImpl=ruleBeliefVariableImpl
	{ $current=$iv_ruleBeliefVariableImpl.current; }
	EOF;

// Rule BeliefVariableImpl
ruleBeliefVariableImpl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBeliefVariableImplAccess().getDescriptionElementDescriptionParserRuleCall_0_0());
				}
				lv_description_0_0=ruleElementDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBeliefVariableImplRule());
					}
					set(
						$current,
						"description",
						lv_description_0_0,
						"org.xtext.roqme.RoQME.ElementDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='beliefvar'
		{
			newLeafNode(otherlv_1, grammarAccess.getBeliefVariableImplAccess().getBeliefvarKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getBeliefVariableImplAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBeliefVariableImplRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBeliefVariableImplAccess().getDeclarationInbuiltDeclarationParserRuleCall_3_0());
				}
				lv_declaration_3_0=ruleInbuiltDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBeliefVariableImplRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_3_0,
						"org.xtext.roqme.RoQME.InbuiltDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4(), 0);
					}
								({true}?=>(otherlv_5='reference'
								{
									newLeafNode(otherlv_5, grammarAccess.getBeliefVariableImplAccess().getReferenceKeyword_4_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getBeliefVariableImplAccess().getReferenceEDoubleParserRuleCall_4_0_1_0());
										}
										lv_reference_6_0=ruleEDouble
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getBeliefVariableImplRule());
											}
											set(
												$current,
												"reference",
												lv_reference_6_0,
												"org.xtext.roqme.RoQME.EDouble");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4(), 1);
					}
								({true}?=>(otherlv_7='survival'
								{
									newLeafNode(otherlv_7, grammarAccess.getBeliefVariableImplAccess().getSurvivalKeyword_4_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getBeliefVariableImplAccess().getSurvivalTimeValueParserRuleCall_4_1_1_0());
										}
										lv_survival_8_0=ruleTimeValue
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getBeliefVariableImplRule());
											}
											set(
												$current,
												"survival",
												lv_survival_8_0,
												"org.xtext.roqme.RoQME.TimeValue");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getBeliefVariableImplAccess().getUnorderedGroup_4());
				}
		)
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getDescriptionElementDescriptionParserRuleCall_0_0());
				}
				lv_description_0_0=ruleElementDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"description",
						lv_description_0_0,
						"org.xtext.roqme.RoQME.ElementDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='property'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getPropertyKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_3=':'
				{
					newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getColonKeyword_3_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getDeclarationDataTypeDeclarationParserRuleCall_3_0_1_0());
						}
						lv_declaration_4_0=ruleDataTypeDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"declaration",
								lv_declaration_4_0,
								"org.xtext.roqme.RoQME.DataTypeDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=':='
				{
					newLeafNode(otherlv_5, grammarAccess.getPropertyAccess().getColonEqualsSignKeyword_3_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertyAccess().getTransformationOutputTransformationParserRuleCall_3_0_3_0());
						}
						lv_transformation_6_0=ruleOutputTransformation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertyRule());
							}
							set(
								$current,
								"transformation",
								lv_transformation_6_0,
								"org.xtext.roqme.RoQME.OutputTransformation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getDeclarationInbuiltDeclarationParserRuleCall_3_1_0());
					}
					lv_declaration_7_0=ruleInbuiltDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"declaration",
							lv_declaration_7_0,
							"org.xtext.roqme.RoQME.InbuiltDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPropertyAccess().getUnorderedGroup_4());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyAccess().getUnorderedGroup_4(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPropertyAccess().getUnorderedGroup_4(), 0);
					}
								({true}?=>(otherlv_9='reference'
								{
									newLeafNode(otherlv_9, grammarAccess.getPropertyAccess().getReferenceKeyword_4_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPropertyAccess().getReferenceEDoubleParserRuleCall_4_0_1_0());
										}
										lv_reference_10_0=ruleEDouble
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPropertyRule());
											}
											set(
												$current,
												"reference",
												lv_reference_10_0,
												"org.xtext.roqme.RoQME.EDouble");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyAccess().getUnorderedGroup_4(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPropertyAccess().getUnorderedGroup_4(), 1);
					}
								({true}?=>(otherlv_11='survival'
								{
									newLeafNode(otherlv_11, grammarAccess.getPropertyAccess().getSurvivalKeyword_4_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPropertyAccess().getSurvivalTimeValueParserRuleCall_4_1_1_0());
										}
										lv_survival_12_0=ruleTimeValue
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPropertyRule());
											}
											set(
												$current,
												"survival",
												lv_survival_12_0,
												"org.xtext.roqme.RoQME.TimeValue");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyAccess().getUnorderedGroup_4());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPropertyAccess().getUnorderedGroup_4());
				}
		)
	)
;

// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	iv_ruleSentence=ruleSentence
	{ $current=$iv_ruleSentence.current; }
	EOF;

// Rule Sentence
ruleSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSentenceAccess().getObservationParserRuleCall());
	}
	this_Observation_0=ruleObservation
	{
		$current = $this_Observation_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportURIEStringParserRuleCall_1_0());
				}
				lv_importURI_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.xtext.roqme.RoQME.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObservation
entryRuleObservation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObservationRule()); }
	iv_ruleObservation=ruleObservation
	{ $current=$iv_ruleObservation.current; }
	EOF;

// Rule Observation
ruleObservation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObservationAccess().getDescriptionElementDescriptionParserRuleCall_0_0());
				}
				lv_description_0_0=ruleElementDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObservationRule());
					}
					set(
						$current,
						"description",
						lv_description_0_0,
						"org.xtext.roqme.RoQME.ElementDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='observation'
		{
			newLeafNode(otherlv_1, grammarAccess.getObservationAccess().getObservationKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getObservationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObservationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getObservationAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObservationAccess().getPatternContextPatternParserRuleCall_4_0());
				}
				lv_pattern_4_0=ruleContextPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObservationRule());
					}
					set(
						$current,
						"pattern",
						lv_pattern_4_0,
						"org.xtext.roqme.RoQME.ContextPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getObservationAccess().getActionsActionParserRuleCall_5_0_0());
					}
					lv_actions_5_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObservationRule());
						}
						add(
							$current,
							"actions",
							lv_actions_5_0,
							"org.xtext.roqme.RoQME.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_6='{'
				{
					newLeafNode(otherlv_6, grammarAccess.getObservationAccess().getLeftCurlyBracketKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getObservationAccess().getActionsActionParserRuleCall_5_1_1_0());
						}
						lv_actions_7_0=ruleAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getObservationRule());
							}
							add(
								$current,
								"actions",
								lv_actions_7_0,
								"org.xtext.roqme.RoQME.Action");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_8='}'
				{
					newLeafNode(otherlv_8, grammarAccess.getObservationAccess().getRightCurlyBracketKeyword_5_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getSetVariableParserRuleCall_0());
		}
		this_SetVariable_0=ruleSetVariable
		{
			$current = $this_SetVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getClearEvidenceParserRuleCall_1());
		}
		this_ClearEvidence_1=ruleClearEvidence
		{
			$current = $this_ClearEvidence_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getSetEvidenceParserRuleCall_2());
		}
		this_SetEvidence_2=ruleSetEvidence
		{
			$current = $this_SetEvidence_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getTimerActionParserRuleCall_3());
		}
		this_TimerAction_3=ruleTimerAction
		{
			$current = $this_TimerAction_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTimerAction
entryRuleTimerAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimerActionRule()); }
	iv_ruleTimerAction=ruleTimerAction
	{ $current=$iv_ruleTimerAction.current; }
	EOF;

// Rule TimerAction
ruleTimerAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTimerActionAccess().getStartTimerParserRuleCall_0());
		}
		this_StartTimer_0=ruleStartTimer
		{
			$current = $this_StartTimer_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimerActionAccess().getStopTimerParserRuleCall_1());
		}
		this_StopTimer_1=ruleStopTimer
		{
			$current = $this_StopTimer_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimerActionAccess().getResumeTimerParserRuleCall_2());
		}
		this_ResumeTimer_2=ruleResumeTimer
		{
			$current = $this_ResumeTimer_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSetVariable
entryRuleSetVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetVariableRule()); }
	iv_ruleSetVariable=ruleSetVariable
	{ $current=$iv_ruleSetVariable.current; }
	EOF;

// Rule SetVariable
ruleSetVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sets'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetVariableAccess().getSetsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetVariableRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSetVariableAccess().getVariableTypedVariableCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':='
		{
			newLeafNode(otherlv_2, grammarAccess.getSetVariableAccess().getColonEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetVariableAccess().getExpressionGeneralExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleGeneralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetVariableRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"org.xtext.roqme.RoQME.GeneralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClearEvidence
entryRuleClearEvidence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClearEvidenceRule()); }
	iv_ruleClearEvidence=ruleClearEvidence
	{ $current=$iv_ruleClearEvidence.current; }
	EOF;

// Rule ClearEvidence
ruleClearEvidence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='clears'
		{
			newLeafNode(otherlv_0, grammarAccess.getClearEvidenceAccess().getClearsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClearEvidenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getClearEvidenceAccess().getTargetBeliefVariableCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSetEvidence
entryRuleSetEvidence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetEvidenceRule()); }
	iv_ruleSetEvidence=ruleSetEvidence
	{ $current=$iv_ruleSetEvidence.current; }
	EOF;

// Rule SetEvidence
ruleSetEvidence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSetEvidenceAccess().getInfluenceInfluenceEnumEnumRuleCall_0_0());
				}
				lv_influence_0_0=ruleInfluenceEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetEvidenceRule());
					}
					set(
						$current,
						"influence",
						lv_influence_0_0,
						"org.xtext.roqme.RoQME.InfluenceEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetEvidenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSetEvidenceAccess().getTargetBeliefVariableCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getSetEvidenceAccess().getStrengthStrengthEnumEnumRuleCall_2_0_0());
									}
									lv_strength_3_0=ruleStrengthEnum
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSetEvidenceRule());
										}
										set(
											$current,
											"strength",
											lv_strength_3_0,
											"org.xtext.roqme.RoQME.StrengthEnum");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_4='survival'
								{
									newLeafNode(otherlv_4, grammarAccess.getSetEvidenceAccess().getSurvivalKeyword_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getSetEvidenceAccess().getSurvivalTimeValueParserRuleCall_2_1_1_0());
										}
										lv_survival_5_0=ruleTimeValue
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSetEvidenceRule());
											}
											set(
												$current,
												"survival",
												lv_survival_5_0,
												"org.xtext.roqme.RoQME.TimeValue");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getSetEvidenceAccess().getUnorderedGroup_2());
				}
		)
	)
;

// Entry rule entryRuleStartTimer
entryRuleStartTimer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartTimerRule()); }
	iv_ruleStartTimer=ruleStartTimer
	{ $current=$iv_ruleStartTimer.current; }
	EOF;

// Rule StartTimer
ruleStartTimer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='starts'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartTimerAccess().getStartsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartTimerRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getStartTimerAccess().getTimerTimerCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStopTimer
entryRuleStopTimer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStopTimerRule()); }
	iv_ruleStopTimer=ruleStopTimer
	{ $current=$iv_ruleStopTimer.current; }
	EOF;

// Rule StopTimer
ruleStopTimer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='stops'
		{
			newLeafNode(otherlv_0, grammarAccess.getStopTimerAccess().getStopsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStopTimerRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getStopTimerAccess().getTimerTimerCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleResumeTimer
entryRuleResumeTimer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResumeTimerRule()); }
	iv_ruleResumeTimer=ruleResumeTimer
	{ $current=$iv_ruleResumeTimer.current; }
	EOF;

// Rule ResumeTimer
ruleResumeTimer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='resumes'
		{
			newLeafNode(otherlv_0, grammarAccess.getResumeTimerAccess().getResumesKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResumeTimerRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getResumeTimerAccess().getTimerTimerCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeDefinitionRule()); }
	iv_ruleDataTypeDefinition=ruleDataTypeDefinition
	{ $current=$iv_ruleDataTypeDefinition.current; }
	EOF;

// Rule DataTypeDefinition
ruleDataTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='type'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataTypeDefinitionAccess().getTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataTypeDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.roqme.RoQME.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDataTypeParserRuleCall_3_0());
				}
				lv_dataType_3_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataTypeDefinitionRule());
					}
					set(
						$current,
						"dataType",
						lv_dataType_3_0,
						"org.xtext.roqme.RoQME.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getBooleanTypeParserRuleCall_0());
		}
		this_BooleanType_0=ruleBooleanType
		{
			$current = $this_BooleanType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getEnumTypeParserRuleCall_1());
		}
		this_EnumType_1=ruleEnumType
		{
			$current = $this_EnumType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getEventTypeParserRuleCall_2());
		}
		this_EventType_2=ruleEventType
		{
			$current = $this_EventType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getNumericTypeParserRuleCall_3());
		}
		this_NumericType_3=ruleNumericType
		{
			$current = $this_NumericType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getUnitMeasuredTypeParserRuleCall_4());
		}
		this_UnitMeasuredType_4=ruleUnitMeasuredType
		{
			$current = $this_UnitMeasuredType_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getTimeTypeParserRuleCall_5());
		}
		this_TimeType_5=ruleTimeType
		{
			$current = $this_TimeType_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	iv_ruleBooleanType=ruleBooleanType
	{ $current=$iv_ruleBooleanType.current; }
	EOF;

// Rule BooleanType
ruleBooleanType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0(),
					$current);
			}
		)
		otherlv_1='boolean'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1());
		}
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getBooleanTypeAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					lv_cardinality_3_0=RULE_INT
					{
						newLeafNode(lv_cardinality_3_0, grammarAccess.getBooleanTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanTypeRule());
						}
						setWithLastConsumed(
							$current,
							"cardinality",
							lv_cardinality_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getBooleanTypeAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleEnumType
entryRuleEnumType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTypeRule()); }
	iv_ruleEnumType=ruleEnumType
	{ $current=$iv_ruleEnumType.current; }
	EOF;

// Rule EnumType
ruleEnumType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumTypeAccess().getEnumKeyword_0());
		}
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumTypeAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					lv_cardinality_2_0=RULE_INT
					{
						newLeafNode(lv_cardinality_2_0, grammarAccess.getEnumTypeAccess().getCardinalityINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumTypeRule());
						}
						setWithLastConsumed(
							$current,
							"cardinality",
							lv_cardinality_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getEnumTypeAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeAccess().getLiteralsEnumLiteralParserRuleCall_3_0());
				}
				lv_literals_5_0=ruleEnumLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeRule());
					}
					add(
						$current,
						"literals",
						lv_literals_5_0,
						"org.xtext.roqme.RoQME.EnumLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumTypeAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumTypeAccess().getLiteralsEnumLiteralParserRuleCall_4_1_0());
					}
					lv_literals_7_0=ruleEnumLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumTypeRule());
						}
						add(
							$current,
							"literals",
							lv_literals_7_0,
							"org.xtext.roqme.RoQME.EnumLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumLiteralRule()); }
	iv_ruleEnumLiteral=ruleEnumLiteral
	{ $current=$iv_ruleEnumLiteral.current; }
	EOF;

// Rule EnumLiteral
ruleEnumLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumLiteralAccess().getEnumLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEventType
entryRuleEventType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventTypeRule()); }
	iv_ruleEventType=ruleEventType
	{ $current=$iv_ruleEventType.current; }
	EOF;

// Rule EventType
ruleEventType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEventTypeAccess().getEventTypeAction_0(),
					$current);
			}
		)
		otherlv_1='eventtype'
		{
			newLeafNode(otherlv_1, grammarAccess.getEventTypeAccess().getEventtypeKeyword_1());
		}
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getEventTypeAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					lv_cardinality_3_0=RULE_INT
					{
						newLeafNode(lv_cardinality_3_0, grammarAccess.getEventTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventTypeRule());
						}
						setWithLastConsumed(
							$current,
							"cardinality",
							lv_cardinality_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getEventTypeAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleNumericType
entryRuleNumericType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericTypeRule()); }
	iv_ruleNumericType=ruleNumericType
	{ $current=$iv_ruleNumericType.current; }
	EOF;

// Rule NumericType
ruleNumericType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumericTypeAccess().getNumericTypeAction_0(),
					$current);
			}
		)
		otherlv_1='number'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumericTypeAccess().getNumberKeyword_1());
		}
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getNumericTypeAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					lv_cardinality_3_0=RULE_INT
					{
						newLeafNode(lv_cardinality_3_0, grammarAccess.getNumericTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumericTypeRule());
						}
						setWithLastConsumed(
							$current,
							"cardinality",
							lv_cardinality_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getNumericTypeAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_3_0());
				}
				lv_constraints_5_0=ruleNumericTypeConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_5_0,
						"org.xtext.roqme.RoQME.NumericTypeConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleNumericTypeConstraint
entryRuleNumericTypeConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericTypeConstraintRule()); }
	iv_ruleNumericTypeConstraint=ruleNumericTypeConstraint
	{ $current=$iv_ruleNumericTypeConstraint.current; }
	EOF;

// Rule NumericTypeConstraint
ruleNumericTypeConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumericTypeConstraintAccess().getLowerBoundParserRuleCall_0());
		}
		this_LowerBound_0=ruleLowerBound
		{
			$current = $this_LowerBound_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumericTypeConstraintAccess().getUpperBoundParserRuleCall_1());
		}
		this_UpperBound_1=ruleUpperBound
		{
			$current = $this_UpperBound_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLowerBound
entryRuleLowerBound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLowerBoundRule()); }
	iv_ruleLowerBound=ruleLowerBound
	{ $current=$iv_ruleLowerBound.current; }
	EOF;

// Rule LowerBound
ruleLowerBound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='lower'
		{
			newLeafNode(otherlv_0, grammarAccess.getLowerBoundAccess().getLowerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLowerBoundAccess().getValueEDoubleParserRuleCall_1_0());
				}
				lv_value_1_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLowerBoundRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.roqme.RoQME.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUpperBound
entryRuleUpperBound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpperBoundRule()); }
	iv_ruleUpperBound=ruleUpperBound
	{ $current=$iv_ruleUpperBound.current; }
	EOF;

// Rule UpperBound
ruleUpperBound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='upper'
		{
			newLeafNode(otherlv_0, grammarAccess.getUpperBoundAccess().getUpperKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpperBoundAccess().getValueEDoubleParserRuleCall_1_0());
				}
				lv_value_1_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpperBoundRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.roqme.RoQME.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnitMeasuredType
entryRuleUnitMeasuredType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitMeasuredTypeRule()); }
	iv_ruleUnitMeasuredType=ruleUnitMeasuredType
	{ $current=$iv_ruleUnitMeasuredType.current; }
	EOF;

// Rule UnitMeasuredType
ruleUnitMeasuredType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitMeasuredTypeAccess().getUnitMeasuredTypeAction_0(),
					$current);
			}
		)
		otherlv_1='number'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnitMeasuredTypeAccess().getNumberKeyword_1());
		}
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getUnitMeasuredTypeAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					lv_cardinality_3_0=RULE_INT
					{
						newLeafNode(lv_cardinality_3_0, grammarAccess.getUnitMeasuredTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitMeasuredTypeRule());
						}
						setWithLastConsumed(
							$current,
							"cardinality",
							lv_cardinality_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getUnitMeasuredTypeAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_3_0());
				}
				lv_constraints_5_0=ruleNumericTypeConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitMeasuredTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_5_0,
						"org.xtext.roqme.RoQME.NumericTypeConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='unit'
		{
			newLeafNode(otherlv_6, grammarAccess.getUnitMeasuredTypeAccess().getUnitKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitMeasuredTypeAccess().getUnitEStringParserRuleCall_5_0());
				}
				lv_unit_7_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitMeasuredTypeRule());
					}
					set(
						$current,
						"unit",
						lv_unit_7_0,
						"org.xtext.roqme.RoQME.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitMeasuredTypeAccess().getConstraintsNumericTypeConstraintParserRuleCall_6_0());
				}
				lv_constraints_8_0=ruleNumericTypeConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitMeasuredTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_8_0,
						"org.xtext.roqme.RoQME.NumericTypeConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTimeType
entryRuleTimeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeTypeRule()); }
	iv_ruleTimeType=ruleTimeType
	{ $current=$iv_ruleTimeType.current; }
	EOF;

// Rule TimeType
ruleTimeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimeTypeAccess().getTimeTypeAction_0(),
					$current);
			}
		)
		otherlv_1='time'
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeTypeAccess().getTimeKeyword_1());
		}
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getTimeTypeAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					lv_cardinality_3_0=RULE_INT
					{
						newLeafNode(lv_cardinality_3_0, grammarAccess.getTimeTypeAccess().getCardinalityINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeTypeRule());
						}
						setWithLastConsumed(
							$current,
							"cardinality",
							lv_cardinality_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getTimeTypeAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleTypedValue
entryRuleTypedValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedValueRule()); }
	iv_ruleTypedValue=ruleTypedValue
	{ $current=$iv_ruleTypedValue.current; }
	EOF;

// Rule TypedValue
ruleTypedValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypedValueAccess().getSingleValueParserRuleCall_0());
		}
		this_SingleValue_0=ruleSingleValue
		{
			$current = $this_SingleValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypedValueAccess().getArrayValueParserRuleCall_1());
		}
		this_ArrayValue_1=ruleArrayValue
		{
			$current = $this_ArrayValue_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingleValue
entryRuleSingleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleValueRule()); }
	iv_ruleSingleValue=ruleSingleValue
	{ $current=$iv_ruleSingleValue.current; }
	EOF;

// Rule SingleValue
ruleSingleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSingleValueAccess().getBooleanValueParserRuleCall_0());
		}
		this_BooleanValue_0=ruleBooleanValue
		{
			$current = $this_BooleanValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleValueAccess().getEnumValueParserRuleCall_1());
		}
		this_EnumValue_1=ruleEnumValue
		{
			$current = $this_EnumValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleValueAccess().getNumericValueParserRuleCall_2());
		}
		this_NumericValue_2=ruleNumericValue
		{
			$current = $this_NumericValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleValueAccess().getEventValueParserRuleCall_3());
		}
		this_EventValue_3=ruleEventValue
		{
			$current = $this_EventValue_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEventValue
entryRuleEventValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventValueRule()); }
	iv_ruleEventValue=ruleEventValue
	{ $current=$iv_ruleEventValue.current; }
	EOF;

// Rule EventValue
ruleEventValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEventValueAccess().getEventValueAction_0(),
					$current);
			}
		)
		otherlv_1='event'
		{
			newLeafNode(otherlv_1, grammarAccess.getEventValueAccess().getEventKeyword_1());
		}
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current; }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanValueAccess().getBooleanValueAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_1_0());
				}
				lv_value_1_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanValueRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.roqme.RoQME.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	iv_ruleEnumValue=ruleEnumValue
	{ $current=$iv_ruleEnumValue.current; }
	EOF;

// Rule EnumValue
ruleEnumValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumValueAccess().getEnumValueAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumValueRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEnumValueAccess().getValueEnumLiteralCrossReference_1_0());
				}
				ruleLiteralQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumericValue
entryRuleNumericValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericValueRule()); }
	iv_ruleNumericValue=ruleNumericValue
	{ $current=$iv_ruleNumericValue.current; }
	EOF;

// Rule NumericValue
ruleNumericValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumericValueAccess().getNumericValue_ImplParserRuleCall_0());
		}
		this_NumericValue_Impl_0=ruleNumericValue_Impl
		{
			$current = $this_NumericValue_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumericValueAccess().getUnitMeasuredValueParserRuleCall_1());
		}
		this_UnitMeasuredValue_1=ruleUnitMeasuredValue
		{
			$current = $this_UnitMeasuredValue_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnitMeasuredValue
entryRuleUnitMeasuredValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitMeasuredValueRule()); }
	iv_ruleUnitMeasuredValue=ruleUnitMeasuredValue
	{ $current=$iv_ruleUnitMeasuredValue.current; }
	EOF;

// Rule UnitMeasuredValue
ruleUnitMeasuredValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitMeasuredValueAccess().getUnitMeasuredValue_ImplParserRuleCall_0());
		}
		this_UnitMeasuredValue_Impl_0=ruleUnitMeasuredValue_Impl
		{
			$current = $this_UnitMeasuredValue_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitMeasuredValueAccess().getTimeValueParserRuleCall_1());
		}
		this_TimeValue_1=ruleTimeValue
		{
			$current = $this_TimeValue_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumericValue_Impl
entryRuleNumericValue_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericValue_ImplRule()); }
	iv_ruleNumericValue_Impl=ruleNumericValue_Impl
	{ $current=$iv_ruleNumericValue_Impl.current; }
	EOF;

// Rule NumericValue_Impl
ruleNumericValue_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumericValue_ImplAccess().getNumericValueAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericValue_ImplAccess().getValueEDoubleParserRuleCall_1_0());
				}
				lv_value_1_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericValue_ImplRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.roqme.RoQME.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnitMeasuredValue_Impl
entryRuleUnitMeasuredValue_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitMeasuredValue_ImplRule()); }
	iv_ruleUnitMeasuredValue_Impl=ruleUnitMeasuredValue_Impl
	{ $current=$iv_ruleUnitMeasuredValue_Impl.current; }
	EOF;

// Rule UnitMeasuredValue_Impl
ruleUnitMeasuredValue_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitMeasuredValue_ImplAccess().getUnitMeasuredValueAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitMeasuredValue_ImplAccess().getValueEDoubleParserRuleCall_1_0());
				}
				lv_value_1_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitMeasuredValue_ImplRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.roqme.RoQME.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitMeasuredValue_ImplAccess().getUnitEStringParserRuleCall_2_0());
				}
				lv_unit_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitMeasuredValue_ImplRule());
					}
					set(
						$current,
						"unit",
						lv_unit_2_0,
						"org.xtext.roqme.RoQME.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTimeValue
entryRuleTimeValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeValueRule()); }
	iv_ruleTimeValue=ruleTimeValue
	{ $current=$iv_ruleTimeValue.current; }
	EOF;

// Rule TimeValue
ruleTimeValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimeValueAccess().getTimeValueAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeValueAccess().getValueEDoubleParserRuleCall_1_0());
				}
				lv_value_1_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeValueRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.roqme.RoQME.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeValueAccess().getUnitTimeUnitEnumParserRuleCall_2_0());
				}
				lv_unit_2_0=ruleTimeUnitEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeValueRule());
					}
					set(
						$current,
						"unit",
						lv_unit_2_0,
						"org.xtext.roqme.RoQME.TimeUnitEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTimeUnitEnum
entryRuleTimeUnitEnum returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTimeUnitEnumRule()); }
	iv_ruleTimeUnitEnum=ruleTimeUnitEnum
	{ $current=$iv_ruleTimeUnitEnum.current.getText(); }
	EOF;

// Rule TimeUnitEnum
ruleTimeUnitEnum returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='milliseconds'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getMillisecondsKeyword_0());
		}
		    |
		kw='seconds'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getSecondsKeyword_1());
		}
		    |
		kw='minutes'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getMinutesKeyword_2());
		}
		    |
		kw='hours'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getHoursKeyword_3());
		}
		    |
		kw='days'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getDaysKeyword_4());
		}
		    |
		kw='millisecond'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getMillisecondKeyword_5());
		}
		    |
		kw='second'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getSecondKeyword_6());
		}
		    |
		kw='minute'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getMinuteKeyword_7());
		}
		    |
		kw='hour'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getHourKeyword_8());
		}
		    |
		kw='day'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTimeUnitEnumAccess().getDayKeyword_9());
		}
	)
;

// Entry rule entryRuleArrayValue
entryRuleArrayValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayValueRule()); }
	iv_ruleArrayValue=ruleArrayValue
	{ $current=$iv_ruleArrayValue.current; }
	EOF;

// Rule ArrayValue
ruleArrayValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArrayValueAccess().getNumericArrayParserRuleCall_0());
		}
		this_NumericArray_0=ruleNumericArray
		{
			$current = $this_NumericArray_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArrayValueAccess().getBooleanArrayParserRuleCall_1());
		}
		this_BooleanArray_1=ruleBooleanArray
		{
			$current = $this_BooleanArray_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArrayValueAccess().getEnumArrayParserRuleCall_2());
		}
		this_EnumArray_2=ruleEnumArray
		{
			$current = $this_EnumArray_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanArray
entryRuleBooleanArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanArrayRule()); }
	iv_ruleBooleanArray=ruleBooleanArray
	{ $current=$iv_ruleBooleanArray.current; }
	EOF;

// Rule BooleanArray
ruleBooleanArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getBooleanArrayAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanArrayAccess().getValuesBooleanValueParserRuleCall_1_0());
				}
				lv_values_1_0=ruleBooleanValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanArrayRule());
					}
					add(
						$current,
						"values",
						lv_values_1_0,
						"org.xtext.roqme.RoQME.BooleanValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getBooleanArrayAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanArrayAccess().getValuesBooleanValueParserRuleCall_2_1_0());
					}
					lv_values_3_0=ruleBooleanValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanArrayRule());
						}
						add(
							$current,
							"values",
							lv_values_3_0,
							"org.xtext.roqme.RoQME.BooleanValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getBooleanArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEnumArray
entryRuleEnumArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumArrayRule()); }
	iv_ruleEnumArray=ruleEnumArray
	{ $current=$iv_ruleEnumArray.current; }
	EOF;

// Rule EnumArray
ruleEnumArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumArrayAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumArrayAccess().getValuesEnumValueParserRuleCall_1_0());
				}
				lv_values_1_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumArrayRule());
					}
					add(
						$current,
						"values",
						lv_values_1_0,
						"org.xtext.roqme.RoQME.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getEnumArrayAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumArrayAccess().getValuesEnumValueParserRuleCall_2_1_0());
					}
					lv_values_3_0=ruleEnumValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumArrayRule());
						}
						add(
							$current,
							"values",
							lv_values_3_0,
							"org.xtext.roqme.RoQME.EnumValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleNumericArray
entryRuleNumericArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericArrayRule()); }
	iv_ruleNumericArray=ruleNumericArray
	{ $current=$iv_ruleNumericArray.current; }
	EOF;

// Rule NumericArray
ruleNumericArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumericArrayAccess().getNumericArray_ImplParserRuleCall_0());
		}
		this_NumericArray_Impl_0=ruleNumericArray_Impl
		{
			$current = $this_NumericArray_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumericArrayAccess().getUnitMeasuredArrayParserRuleCall_1());
		}
		this_UnitMeasuredArray_1=ruleUnitMeasuredArray
		{
			$current = $this_UnitMeasuredArray_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnitMeasuredArray
entryRuleUnitMeasuredArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitMeasuredArrayRule()); }
	iv_ruleUnitMeasuredArray=ruleUnitMeasuredArray
	{ $current=$iv_ruleUnitMeasuredArray.current; }
	EOF;

// Rule UnitMeasuredArray
ruleUnitMeasuredArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitMeasuredArrayAccess().getUnitMeasuredArray_ImplParserRuleCall_0());
		}
		this_UnitMeasuredArray_Impl_0=ruleUnitMeasuredArray_Impl
		{
			$current = $this_UnitMeasuredArray_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitMeasuredArrayAccess().getTimeArrayParserRuleCall_1());
		}
		this_TimeArray_1=ruleTimeArray
		{
			$current = $this_TimeArray_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumericArray_Impl
entryRuleNumericArray_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericArray_ImplRule()); }
	iv_ruleNumericArray_Impl=ruleNumericArray_Impl
	{ $current=$iv_ruleNumericArray_Impl.current; }
	EOF;

// Rule NumericArray_Impl
ruleNumericArray_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getNumericArray_ImplAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericArray_ImplAccess().getValuesNumericValue_ImplParserRuleCall_1_0());
				}
				lv_values_1_0=ruleNumericValue_Impl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericArray_ImplRule());
					}
					add(
						$current,
						"values",
						lv_values_1_0,
						"org.xtext.roqme.RoQME.NumericValue_Impl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getNumericArray_ImplAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNumericArray_ImplAccess().getValuesNumericValue_ImplParserRuleCall_2_1_0());
					}
					lv_values_3_0=ruleNumericValue_Impl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumericArray_ImplRule());
						}
						add(
							$current,
							"values",
							lv_values_3_0,
							"org.xtext.roqme.RoQME.NumericValue_Impl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getNumericArray_ImplAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleUnitMeasuredArray_Impl
entryRuleUnitMeasuredArray_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitMeasuredArray_ImplRule()); }
	iv_ruleUnitMeasuredArray_Impl=ruleUnitMeasuredArray_Impl
	{ $current=$iv_ruleUnitMeasuredArray_Impl.current; }
	EOF;

// Rule UnitMeasuredArray_Impl
ruleUnitMeasuredArray_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getUnitMeasuredArray_ImplAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesUnitMeasuredValue_ImplParserRuleCall_1_0());
				}
				lv_values_1_0=ruleUnitMeasuredValue_Impl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitMeasuredArray_ImplRule());
					}
					add(
						$current,
						"values",
						lv_values_1_0,
						"org.xtext.roqme.RoQME.UnitMeasuredValue_Impl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getUnitMeasuredArray_ImplAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitMeasuredArray_ImplAccess().getValuesUnitMeasuredValue_ImplParserRuleCall_2_1_0());
					}
					lv_values_3_0=ruleUnitMeasuredValue_Impl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitMeasuredArray_ImplRule());
						}
						add(
							$current,
							"values",
							lv_values_3_0,
							"org.xtext.roqme.RoQME.UnitMeasuredValue_Impl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getUnitMeasuredArray_ImplAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTimeArray
entryRuleTimeArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeArrayRule()); }
	iv_ruleTimeArray=ruleTimeArray
	{ $current=$iv_ruleTimeArray.current; }
	EOF;

// Rule TimeArray
ruleTimeArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeArrayAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeArrayAccess().getValuesTimeValueParserRuleCall_1_0());
				}
				lv_values_1_0=ruleTimeValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeArrayRule());
					}
					add(
						$current,
						"values",
						lv_values_1_0,
						"org.xtext.roqme.RoQME.TimeValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTimeArrayAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTimeArrayAccess().getValuesTimeValueParserRuleCall_2_1_0());
					}
					lv_values_3_0=ruleTimeValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimeArrayRule());
						}
						add(
							$current,
							"values",
							lv_values_3_0,
							"org.xtext.roqme.RoQME.TimeValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getTimeArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDataTypeDeclaration
entryRuleDataTypeDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeDeclarationRule()); }
	iv_ruleDataTypeDeclaration=ruleDataTypeDeclaration
	{ $current=$iv_ruleDataTypeDeclaration.current; }
	EOF;

// Rule DataTypeDeclaration
ruleDataTypeDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getInbuiltDeclarationParserRuleCall_0());
		}
		this_InbuiltDeclaration_0=ruleInbuiltDeclaration
		{
			$current = $this_InbuiltDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getReferencedDeclarationParserRuleCall_1());
		}
		this_ReferencedDeclaration_1=ruleReferencedDeclaration
		{
			$current = $this_ReferencedDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getContainedDeclarationParserRuleCall_2());
		}
		this_ContainedDeclaration_2=ruleContainedDeclaration
		{
			$current = $this_ContainedDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleContainedDeclaration
entryRuleContainedDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContainedDeclarationRule()); }
	iv_ruleContainedDeclaration=ruleContainedDeclaration
	{ $current=$iv_ruleContainedDeclaration.current; }
	EOF;

// Rule ContainedDeclaration
ruleContainedDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getContainedDeclarationAccess().getTypeDataTypeParserRuleCall_0());
			}
			lv_type_0_0=ruleDataType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getContainedDeclarationRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.xtext.roqme.RoQME.DataType");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInbuiltDeclaration
entryRuleInbuiltDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInbuiltDeclarationRule()); }
	iv_ruleInbuiltDeclaration=ruleInbuiltDeclaration
	{ $current=$iv_ruleInbuiltDeclaration.current; }
	EOF;

// Rule InbuiltDeclaration
ruleInbuiltDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getInbuiltDeclarationAccess().getInbuiltDeclarationAction(),
				$current);
		}
	)
;

// Entry rule entryRuleReferencedDeclaration
entryRuleReferencedDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferencedDeclarationRule()); }
	iv_ruleReferencedDeclaration=ruleReferencedDeclaration
	{ $current=$iv_ruleReferencedDeclaration.current; }
	EOF;

// Rule ReferencedDeclaration
ruleReferencedDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getReferencedDeclarationRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getReferencedDeclarationAccess().getTypeDataTypeDefinitionCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleGeneralExpression
entryRuleGeneralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralExpressionRule()); }
	iv_ruleGeneralExpression=ruleGeneralExpression
	{ $current=$iv_ruleGeneralExpression.current; }
	EOF;

// Rule GeneralExpression
ruleGeneralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getGeneralExpressionAccess().getTermTermParserRuleCall_0());
			}
			lv_term_0_0=ruleTerm
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getGeneralExpressionRule());
				}
				set(
					$current,
					"term",
					lv_term_0_0,
					"org.xtext.roqme.RoQME.Term");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOutputTransformation
entryRuleOutputTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputTransformationRule()); }
	iv_ruleOutputTransformation=ruleOutputTransformation
	{ $current=$iv_ruleOutputTransformation.current; }
	EOF;

// Rule OutputTransformation
ruleOutputTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOutputTransformationAccess().getTermTermParserRuleCall_0());
			}
			lv_term_0_0=ruleTerm
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOutputTransformationRule());
				}
				set(
					$current,
					"term",
					lv_term_0_0,
					"org.xtext.roqme.RoQME.Term");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleContextPattern
entryRuleContextPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextPatternRule()); }
	iv_ruleContextPattern=ruleContextPattern
	{ $current=$iv_ruleContextPattern.current; }
	EOF;

// Rule ContextPattern
ruleContextPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getContextPatternAccess().getTermTermParserRuleCall_0());
			}
			lv_term_0_0=ruleTerm
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getContextPatternRule());
				}
				set(
					$current,
					"term",
					lv_term_0_0,
					"org.xtext.roqme.RoQME.Term");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getOnceTermParserRuleCall_0());
		}
		this_OnceTerm_0=ruleOnceTerm
		{
			$current = $this_OnceTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getWhileTermParserRuleCall_1());
		}
		this_WhileTerm_1=ruleWhileTerm
		{
			$current = $this_WhileTerm_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOnceTerm
entryRuleOnceTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnceTermRule()); }
	iv_ruleOnceTerm=ruleOnceTerm
	{ $current=$iv_ruleOnceTerm.current; }
	EOF;

// Rule OnceTerm
ruleOnceTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='once'
		{
			newLeafNode(otherlv_0, grammarAccess.getOnceTermAccess().getOnceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOnceTermAccess().getTermWhileTermParserRuleCall_1_0());
				}
				lv_term_1_0=ruleWhileTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOnceTermRule());
					}
					set(
						$current,
						"term",
						lv_term_1_0,
						"org.xtext.roqme.RoQME.WhileTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhileTerm
entryRuleWhileTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileTermRule()); }
	iv_ruleWhileTerm=ruleWhileTerm
	{ $current=$iv_ruleWhileTerm.current; }
	EOF;

// Rule WhileTerm
ruleWhileTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getWhileTermAccess().getRepetionTermParserRuleCall_0());
		}
		this_RepetionTerm_0=ruleRepetionTerm
		{
			$current = $this_RepetionTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getWhileTermAccess().getWhileTermLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='while'
			{
				newLeafNode(otherlv_2, grammarAccess.getWhileTermAccess().getWhileKeyword_1_1());
			}
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getWhileTermAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWhileTermAccess().getRightOrBooleanTermParserRuleCall_1_3_0());
					}
					lv_right_4_0=ruleOrBooleanTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhileTermRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"org.xtext.roqme.RoQME.OrBooleanTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getWhileTermAccess().getRightParenthesisKeyword_1_4());
			}
		)?
	)
;

// Entry rule entryRuleRepetionTerm
entryRuleRepetionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepetionTermRule()); }
	iv_ruleRepetionTerm=ruleRepetionTerm
	{ $current=$iv_ruleRepetionTerm.current; }
	EOF;

// Rule RepetionTerm
ruleRepetionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRepetionTermAccess().getSequenceTermParserRuleCall_0());
		}
		this_SequenceTerm_0=ruleSequenceTerm
		{
			$current = $this_SequenceTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getRepetionTermAccess().getRepeatTermTermAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='repeat'
				{
					newLeafNode(otherlv_2, grammarAccess.getRepetionTermAccess().getRepeatKeyword_1_0_1());
				}
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getRepetionTermAccess().getLeftParenthesisKeyword_1_0_2());
				}
				(
					(
						lv_nrep_4_0=RULE_INT
						{
							newLeafNode(lv_nrep_4_0, grammarAccess.getRepetionTermAccess().getNrepINTTerminalRuleCall_1_0_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRepetionTermRule());
							}
							setWithLastConsumed(
								$current,
								"nrep",
								lv_nrep_4_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getRepetionTermAccess().getRightParenthesisKeyword_1_0_4());
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getRepetionTermAccess().getRangeTermTermAction_1_1_0(),
							$current);
					}
				)
				otherlv_7='range'
				{
					newLeafNode(otherlv_7, grammarAccess.getRepetionTermAccess().getRangeKeyword_1_1_1());
				}
				otherlv_8='('
				{
					newLeafNode(otherlv_8, grammarAccess.getRepetionTermAccess().getLeftParenthesisKeyword_1_1_2());
				}
				(
					(
						lv_lowerBound_9_0=RULE_INT
						{
							newLeafNode(lv_lowerBound_9_0, grammarAccess.getRepetionTermAccess().getLowerBoundINTTerminalRuleCall_1_1_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRepetionTermRule());
							}
							setWithLastConsumed(
								$current,
								"lowerBound",
								lv_lowerBound_9_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getRepetionTermAccess().getCommaKeyword_1_1_4());
				}
				(
					(
						lv_upperBound_11_0=RULE_INT
						{
							newLeafNode(lv_upperBound_11_0, grammarAccess.getRepetionTermAccess().getUpperBoundINTTerminalRuleCall_1_1_5_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRepetionTermRule());
							}
							setWithLastConsumed(
								$current,
								"upperBound",
								lv_upperBound_11_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				otherlv_12=')'
				{
					newLeafNode(otherlv_12, grammarAccess.getRepetionTermAccess().getRightParenthesisKeyword_1_1_6());
				}
			)
		)?
	)
;

// Entry rule entryRuleSequenceTerm
entryRuleSequenceTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceTermRule()); }
	iv_ruleSequenceTerm=ruleSequenceTerm
	{ $current=$iv_ruleSequenceTerm.current; }
	EOF;

// Rule SequenceTerm
ruleSequenceTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSequenceTermAccess().getOrEventTermParserRuleCall_0());
		}
		this_OrEventTerm_0=ruleOrEventTerm
		{
			$current = $this_OrEventTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getSequenceTermAccess().getFollowedByTermLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='->'
			{
				newLeafNode(otherlv_2, grammarAccess.getSequenceTermAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceTermAccess().getRightConditionalTermParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleConditionalTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceTermRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.roqme.RoQME.ConditionalTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOrEventTerm
entryRuleOrEventTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrEventTermRule()); }
	iv_ruleOrEventTerm=ruleOrEventTerm
	{ $current=$iv_ruleOrEventTerm.current; }
	EOF;

// Rule OrEventTerm
ruleOrEventTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrEventTermAccess().getAndEventTermParserRuleCall_0());
		}
		this_AndEventTerm_0=ruleAndEventTerm
		{
			$current = $this_AndEventTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrEventTermAccess().getOrEventTermLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='or'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrEventTermAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrEventTermAccess().getRightAndEventTermParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndEventTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrEventTermRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.roqme.RoQME.AndEventTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndEventTerm
entryRuleAndEventTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndEventTermRule()); }
	iv_ruleAndEventTerm=ruleAndEventTerm
	{ $current=$iv_ruleAndEventTerm.current; }
	EOF;

// Rule AndEventTerm
ruleAndEventTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAndEventTermAccess().getNotEventTermParserRuleCall_0_0());
			}
			this_NotEventTerm_0=ruleNotEventTerm
			{
				$current = $this_NotEventTerm_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getAndEventTermAccess().getConditionalTermParserRuleCall_0_1());
			}
			this_ConditionalTerm_1=ruleConditionalTerm
			{
				$current = $this_ConditionalTerm_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndEventTermAccess().getAndEventTermLeftAction_1_0(),
						$current);
				}
			)
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getAndEventTermAccess().getAndKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAndEventTermAccess().getRightNotEventTermParserRuleCall_1_2_0_0());
						}
						lv_right_4_1=ruleNotEventTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndEventTermRule());
							}
							set(
								$current,
								"right",
								lv_right_4_1,
								"org.xtext.roqme.RoQME.NotEventTerm");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getAndEventTermAccess().getRightConditionalTermParserRuleCall_1_2_0_1());
						}
						lv_right_4_2=ruleConditionalTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndEventTermRule());
							}
							set(
								$current,
								"right",
								lv_right_4_2,
								"org.xtext.roqme.RoQME.ConditionalTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleNotEventTerm
entryRuleNotEventTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotEventTermRule()); }
	iv_ruleNotEventTerm=ruleNotEventTerm
	{ $current=$iv_ruleNotEventTerm.current; }
	EOF;

// Rule NotEventTerm
ruleNotEventTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNotEventTermAccess().getNotEventTermAction_0(),
					$current);
			}
		)
		otherlv_1='not'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotEventTermAccess().getNotKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotEventTermAccess().getTermConditionalTermParserRuleCall_2_0());
				}
				lv_term_2_0=ruleConditionalTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotEventTermRule());
					}
					set(
						$current,
						"term",
						lv_term_2_0,
						"org.xtext.roqme.RoQME.ConditionalTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalTermRule()); }
	iv_ruleConditionalTerm=ruleConditionalTerm
	{ $current=$iv_ruleConditionalTerm.current; }
	EOF;

// Rule ConditionalTerm
ruleConditionalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalTermAccess().getOrBooleanTermParserRuleCall_0());
		}
		this_OrBooleanTerm_0=ruleOrBooleanTerm
		{
			$current = $this_OrBooleanTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getConditionalTermAccess().getConditionalTermTermsAction_1_0(),
						$current);
				}
			)
			otherlv_2='?'
			{
				newLeafNode(otherlv_2, grammarAccess.getConditionalTermAccess().getQuestionMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalTermAccess().getTermsOrBooleanTermParserRuleCall_1_2_0());
					}
					lv_terms_3_0=ruleOrBooleanTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
						}
						add(
							$current,
							"terms",
							lv_terms_3_0,
							"org.xtext.roqme.RoQME.OrBooleanTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getConditionalTermAccess().getColonKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalTermAccess().getTermsConditionalTermParserRuleCall_1_4_0());
					}
					lv_terms_5_0=ruleConditionalTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
						}
						add(
							$current,
							"terms",
							lv_terms_5_0,
							"org.xtext.roqme.RoQME.ConditionalTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOrBooleanTerm
entryRuleOrBooleanTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrBooleanTermRule()); }
	iv_ruleOrBooleanTerm=ruleOrBooleanTerm
	{ $current=$iv_ruleOrBooleanTerm.current; }
	EOF;

// Rule OrBooleanTerm
ruleOrBooleanTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrBooleanTermAccess().getAndBooleanTermParserRuleCall_0());
		}
		this_AndBooleanTerm_0=ruleAndBooleanTerm
		{
			$current = $this_AndBooleanTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrBooleanTermAccess().getOrBooleanTermLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='|'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrBooleanTermAccess().getVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrBooleanTermAccess().getRightAndBooleanTermParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndBooleanTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrBooleanTermRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.roqme.RoQME.AndBooleanTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndBooleanTerm
entryRuleAndBooleanTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndBooleanTermRule()); }
	iv_ruleAndBooleanTerm=ruleAndBooleanTerm
	{ $current=$iv_ruleAndBooleanTerm.current; }
	EOF;

// Rule AndBooleanTerm
ruleAndBooleanTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAndBooleanTermAccess().getNotBooleanTermParserRuleCall_0_0());
			}
			this_NotBooleanTerm_0=ruleNotBooleanTerm
			{
				$current = $this_NotBooleanTerm_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getAndBooleanTermAccess().getRelationalTermParserRuleCall_0_1());
			}
			this_RelationalTerm_1=ruleRelationalTerm
			{
				$current = $this_RelationalTerm_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndBooleanTermAccess().getAndBooleanTermLeftAction_1_0(),
						$current);
				}
			)
			otherlv_3='&'
			{
				newLeafNode(otherlv_3, grammarAccess.getAndBooleanTermAccess().getAmpersandKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAndBooleanTermAccess().getRightNotBooleanTermParserRuleCall_1_2_0_0());
						}
						lv_right_4_1=ruleNotBooleanTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndBooleanTermRule());
							}
							set(
								$current,
								"right",
								lv_right_4_1,
								"org.xtext.roqme.RoQME.NotBooleanTerm");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getAndBooleanTermAccess().getRightRelationalTermParserRuleCall_1_2_0_1());
						}
						lv_right_4_2=ruleRelationalTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndBooleanTermRule());
							}
							set(
								$current,
								"right",
								lv_right_4_2,
								"org.xtext.roqme.RoQME.RelationalTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleNotBooleanTerm
entryRuleNotBooleanTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotBooleanTermRule()); }
	iv_ruleNotBooleanTerm=ruleNotBooleanTerm
	{ $current=$iv_ruleNotBooleanTerm.current; }
	EOF;

// Rule NotBooleanTerm
ruleNotBooleanTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNotBooleanTermAccess().getNotBooleanTermAction_0(),
					$current);
			}
		)
		otherlv_1='!'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotBooleanTermAccess().getExclamationMarkKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotBooleanTermAccess().getTermRelationalTermParserRuleCall_2_0());
				}
				lv_term_2_0=ruleRelationalTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotBooleanTermRule());
					}
					set(
						$current,
						"term",
						lv_term_2_0,
						"org.xtext.roqme.RoQME.RelationalTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelationalTerm
entryRuleRelationalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalTermRule()); }
	iv_ruleRelationalTerm=ruleRelationalTerm
	{ $current=$iv_ruleRelationalTerm.current; }
	EOF;

// Rule RelationalTerm
ruleRelationalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalTermAccess().getAdditionTermParserRuleCall_0());
		}
		this_AdditionTerm_0=ruleAdditionTerm
		{
			$current = $this_AdditionTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelationalTermAccess().getEqualTermLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='='
					{
						newLeafNode(otherlv_2, grammarAccess.getRelationalTermAccess().getEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelationalTermAccess().getLessThanTermLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='<'
					{
						newLeafNode(otherlv_4, grammarAccess.getRelationalTermAccess().getLessThanSignKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelationalTermAccess().getGreaterThanTermLeftAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6='>'
					{
						newLeafNode(otherlv_6, grammarAccess.getRelationalTermAccess().getGreaterThanSignKeyword_1_0_2_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelationalTermAccess().getLessEqualTermLeftAction_1_0_3_0(),
								$current);
						}
					)
					otherlv_8='<='
					{
						newLeafNode(otherlv_8, grammarAccess.getRelationalTermAccess().getLessThanSignEqualsSignKeyword_1_0_3_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelationalTermAccess().getGreaterEqualTermLeftAction_1_0_4_0(),
								$current);
						}
					)
					otherlv_10='>='
					{
						newLeafNode(otherlv_10, grammarAccess.getRelationalTermAccess().getGreaterThanSignEqualsSignKeyword_1_0_4_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelationalTermAccess().getNotEqualTermLeftAction_1_0_5_0(),
								$current);
						}
					)
					otherlv_12='!='
					{
						newLeafNode(otherlv_12, grammarAccess.getRelationalTermAccess().getExclamationMarkEqualsSignKeyword_1_0_5_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalTermAccess().getRightAdditionTermParserRuleCall_1_1_0());
					}
					lv_right_13_0=ruleAdditionTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalTermRule());
						}
						set(
							$current,
							"right",
							lv_right_13_0,
							"org.xtext.roqme.RoQME.AdditionTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAdditionTerm
entryRuleAdditionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionTermRule()); }
	iv_ruleAdditionTerm=ruleAdditionTerm
	{ $current=$iv_ruleAdditionTerm.current; }
	EOF;

// Rule AdditionTerm
ruleAdditionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionTermAccess().getMultiplicationTermParserRuleCall_0());
		}
		this_MultiplicationTerm_0=ruleMultiplicationTerm
		{
			$current = $this_MultiplicationTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditionTermAccess().getAddTermLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getAdditionTermAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditionTermAccess().getSubTermLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getAdditionTermAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionTermAccess().getRightMultiplicationTermParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMultiplicationTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionTermRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.xtext.roqme.RoQME.MultiplicationTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicationTerm
entryRuleMultiplicationTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationTermRule()); }
	iv_ruleMultiplicationTerm=ruleMultiplicationTerm
	{ $current=$iv_ruleMultiplicationTerm.current; }
	EOF;

// Rule MultiplicationTerm
ruleMultiplicationTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationTermAccess().getPrimaryTermParserRuleCall_0());
		}
		this_PrimaryTerm_0=rulePrimaryTerm
		{
			$current = $this_PrimaryTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicationTermAccess().getMultTermLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getMultiplicationTermAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicationTermAccess().getDivTermLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getMultiplicationTermAccess().getSolidusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationTermAccess().getRightPrimaryTermParserRuleCall_1_1_0());
					}
					lv_right_5_0=rulePrimaryTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationTermRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.xtext.roqme.RoQME.PrimaryTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryTerm
entryRulePrimaryTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryTermRule()); }
	iv_rulePrimaryTerm=rulePrimaryTerm
	{ $current=$iv_rulePrimaryTerm.current; }
	EOF;

// Rule PrimaryTerm
rulePrimaryTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryTermAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryTermAccess().getTermParserRuleCall_0_1());
			}
			this_Term_1=ruleTerm
			{
				$current = $this_Term_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryTermAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryTermAccess().getConstTermParserRuleCall_1());
		}
		this_ConstTerm_3=ruleConstTerm
		{
			$current = $this_ConstTerm_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryTermAccess().getVarTermParserRuleCall_2());
		}
		this_VarTerm_4=ruleVarTerm
		{
			$current = $this_VarTerm_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryTermAccess().getSelfTermParserRuleCall_3());
		}
		this_SelfTerm_5=ruleSelfTerm
		{
			$current = $this_SelfTerm_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryTermAccess().getFunctionTermParserRuleCall_4());
		}
		this_FunctionTerm_6=ruleFunctionTerm
		{
			$current = $this_FunctionTerm_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVarTerm
entryRuleVarTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarTermRule()); }
	iv_ruleVarTerm=ruleVarTerm
	{ $current=$iv_ruleVarTerm.current; }
	EOF;

// Rule VarTerm
ruleVarTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVarTermRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getVarTermAccess().getVariableTypedVariableCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConstTerm
entryRuleConstTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstTermRule()); }
	iv_ruleConstTerm=ruleConstTerm
	{ $current=$iv_ruleConstTerm.current; }
	EOF;

// Rule ConstTerm
ruleConstTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConstTermAccess().getValueTypedValueParserRuleCall_0());
			}
			lv_value_0_0=ruleTypedValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConstTermRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.roqme.RoQME.TypedValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSelfTerm
entryRuleSelfTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelfTermRule()); }
	iv_ruleSelfTerm=ruleSelfTerm
	{ $current=$iv_ruleSelfTerm.current; }
	EOF;

// Rule SelfTerm
ruleSelfTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelfTermAccess().getSelfTermAction_0(),
					$current);
			}
		)
		otherlv_1='belief'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelfTermAccess().getBeliefKeyword_1());
		}
	)
;

// Entry rule entryRuleFunctionTerm
entryRuleFunctionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionTermRule()); }
	iv_ruleFunctionTerm=ruleFunctionTerm
	{ $current=$iv_ruleFunctionTerm.current; }
	EOF;

// Rule FunctionTerm
ruleFunctionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionTermAccess().getArithFunctionParserRuleCall_0());
		}
		this_ArithFunction_0=ruleArithFunction
		{
			$current = $this_ArithFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionTermAccess().getAggregationFunctionParserRuleCall_1());
		}
		this_AggregationFunction_1=ruleAggregationFunction
		{
			$current = $this_AggregationFunction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionTermAccess().getPatternFunctionParserRuleCall_2());
		}
		this_PatternFunction_2=rulePatternFunction
		{
			$current = $this_PatternFunction_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionTermAccess().getCollectionFunctionParserRuleCall_3());
		}
		this_CollectionFunction_3=ruleCollectionFunction
		{
			$current = $this_CollectionFunction_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionTermAccess().getScheduleFunctionParserRuleCall_4());
		}
		this_ScheduleFunction_4=ruleScheduleFunction
		{
			$current = $this_ScheduleFunction_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleScheduleFunction
entryRuleScheduleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScheduleFunctionRule()); }
	iv_ruleScheduleFunction=ruleScheduleFunction
	{ $current=$iv_ruleScheduleFunction.current; }
	EOF;

// Rule ScheduleFunction
ruleScheduleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getScheduleFunctionAccess().getScheduleFunctionAction_0(),
					$current);
			}
		)
		otherlv_1='schedule'
		{
			newLeafNode(otherlv_1, grammarAccess.getScheduleFunctionAccess().getScheduleKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getScheduleFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleFunctionAccess().getPatternEStringParserRuleCall_3_0());
				}
				lv_pattern_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleFunctionRule());
					}
					set(
						$current,
						"pattern",
						lv_pattern_3_0,
						"org.xtext.roqme.RoQME.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getScheduleFunctionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleArithFunction
entryRuleArithFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithFunctionRule()); }
	iv_ruleArithFunction=ruleArithFunction
	{ $current=$iv_ruleArithFunction.current; }
	EOF;

// Rule ArithFunction
ruleArithFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArithFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0());
						}
						lv_terms_0_1=ruleVarTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArithFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_0_1,
								"org.xtext.roqme.RoQME.VarTerm");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getArithFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1());
						}
						lv_terms_0_2=ruleSelfTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArithFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_0_2,
								"org.xtext.roqme.RoQME.SelfTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_1='\''
			{
				newLeafNode(otherlv_1, grammarAccess.getArithFunctionAccess().getApostropheKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getArithFunctionAccess().getNameArithFtnEnumEnumRuleCall_1_0());
				}
				lv_name_2_0=ruleArithFtnEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.roqme.RoQME.ArithFtnEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getArithFunctionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArithFunctionAccess().getTermsTermParserRuleCall_2_1_0_0());
						}
						lv_terms_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArithFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_4_0,
								"org.xtext.roqme.RoQME.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getArithFunctionAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getArithFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0());
							}
							lv_terms_6_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArithFunctionRule());
								}
								add(
									$current,
									"terms",
									lv_terms_6_0,
									"org.xtext.roqme.RoQME.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getArithFunctionAccess().getRightParenthesisKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleAggregationFunction
entryRuleAggregationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAggregationFunctionRule()); }
	iv_ruleAggregationFunction=ruleAggregationFunction
	{ $current=$iv_ruleAggregationFunction.current; }
	EOF;

// Rule AggregationFunction
ruleAggregationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAggregationFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0());
						}
						lv_terms_0_1=ruleVarTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAggregationFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_0_1,
								"org.xtext.roqme.RoQME.VarTerm");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getAggregationFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1());
						}
						lv_terms_0_2=ruleSelfTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAggregationFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_0_2,
								"org.xtext.roqme.RoQME.SelfTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_1='\''
			{
				newLeafNode(otherlv_1, grammarAccess.getAggregationFunctionAccess().getApostropheKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAggregationFunctionAccess().getNameAggregationFtnEnumEnumRuleCall_1_0());
				}
				lv_name_2_0=ruleAggregationFtnEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAggregationFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.roqme.RoQME.AggregationFtnEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getAggregationFunctionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAggregationFunctionAccess().getTermsTermParserRuleCall_2_1_0_0());
						}
						lv_terms_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAggregationFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_4_0,
								"org.xtext.roqme.RoQME.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getAggregationFunctionAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getAggregationFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0());
							}
							lv_terms_6_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAggregationFunctionRule());
								}
								add(
									$current,
									"terms",
									lv_terms_6_0,
									"org.xtext.roqme.RoQME.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getAggregationFunctionAccess().getRightParenthesisKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRulePatternFunction
entryRulePatternFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternFunctionRule()); }
	iv_rulePatternFunction=rulePatternFunction
	{ $current=$iv_rulePatternFunction.current; }
	EOF;

// Rule PatternFunction
rulePatternFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPatternFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0());
						}
						lv_terms_0_1=ruleVarTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPatternFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_0_1,
								"org.xtext.roqme.RoQME.VarTerm");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getPatternFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1());
						}
						lv_terms_0_2=ruleSelfTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPatternFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_0_2,
								"org.xtext.roqme.RoQME.SelfTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_1='\''
			{
				newLeafNode(otherlv_1, grammarAccess.getPatternFunctionAccess().getApostropheKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternFunctionAccess().getNamePatternFtnEnumEnumRuleCall_1_0());
				}
				lv_name_2_0=rulePatternFtnEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.roqme.RoQME.PatternFtnEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getPatternFunctionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPatternFunctionAccess().getTermsTermParserRuleCall_2_1_0_0());
						}
						lv_terms_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPatternFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_4_0,
								"org.xtext.roqme.RoQME.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getPatternFunctionAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPatternFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0());
							}
							lv_terms_6_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPatternFunctionRule());
								}
								add(
									$current,
									"terms",
									lv_terms_6_0,
									"org.xtext.roqme.RoQME.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getPatternFunctionAccess().getRightParenthesisKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleCollectionFunction
entryRuleCollectionFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionFunctionRule()); }
	iv_ruleCollectionFunction=ruleCollectionFunction
	{ $current=$iv_ruleCollectionFunction.current; }
	EOF;

// Rule CollectionFunction
ruleCollectionFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionFunctionAccess().getTermsVarTermParserRuleCall_0_0_0_0());
						}
						lv_terms_0_1=ruleVarTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_0_1,
								"org.xtext.roqme.RoQME.VarTerm");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getCollectionFunctionAccess().getTermsSelfTermParserRuleCall_0_0_0_1());
						}
						lv_terms_0_2=ruleSelfTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_0_2,
								"org.xtext.roqme.RoQME.SelfTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_1='\''
			{
				newLeafNode(otherlv_1, grammarAccess.getCollectionFunctionAccess().getApostropheKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionFunctionAccess().getNameCollectionFtnEnumEnumRuleCall_1_0());
				}
				lv_name_2_0=ruleCollectionFtnEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.roqme.RoQME.CollectionFtnEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getCollectionFunctionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionFunctionAccess().getTermsTermParserRuleCall_2_1_0_0());
						}
						lv_terms_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionFunctionRule());
							}
							add(
								$current,
								"terms",
								lv_terms_4_0,
								"org.xtext.roqme.RoQME.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getCollectionFunctionAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCollectionFunctionAccess().getTermsTermParserRuleCall_2_1_1_1_0());
							}
							lv_terms_6_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCollectionFunctionRule());
								}
								add(
									$current,
									"terms",
									lv_terms_6_0,
									"org.xtext.roqme.RoQME.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getCollectionFunctionAccess().getRightParenthesisKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2_0());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2_1());
			}
		)?
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleLiteralQualifiedName
entryRuleLiteralQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLiteralQualifiedNameRule()); }
	iv_ruleLiteralQualifiedName=ruleLiteralQualifiedName
	{ $current=$iv_ruleLiteralQualifiedName.current.getText(); }
	EOF;

// Rule LiteralQualifiedName
ruleLiteralQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getLiteralQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='::'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLiteralQualifiedNameAccess().getColonColonKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getLiteralQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)+
	)
;

// Entry rule entryRuleElementDescription
entryRuleElementDescription returns [String current=null]:
	{ newCompositeNode(grammarAccess.getElementDescriptionRule()); }
	iv_ruleElementDescription=ruleElementDescription
	{ $current=$iv_ruleElementDescription.current.getText(); }
	EOF;

// Rule ElementDescription
ruleElementDescription returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ROQME_DESCRIPTION_0=RULE_ROQME_DESCRIPTION
	{
		$current.merge(this_ROQME_DESCRIPTION_0);
	}
	{
		newLeafNode(this_ROQME_DESCRIPTION_0, grammarAccess.getElementDescriptionAccess().getROQME_DESCRIPTIONTerminalRuleCall());
	}
;

// Rule InfluenceEnum
ruleInfluenceEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='reinforces'
			{
				$current = grammarAccess.getInfluenceEnumAccess().getREINFORCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getInfluenceEnumAccess().getREINFORCEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='undermines'
			{
				$current = grammarAccess.getInfluenceEnumAccess().getUNDERMINEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getInfluenceEnumAccess().getUNDERMINEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule StrengthEnum
ruleStrengthEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='veryhigh'
			{
				$current = grammarAccess.getStrengthEnumAccess().getVERY_HIGHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStrengthEnumAccess().getVERY_HIGHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='high'
			{
				$current = grammarAccess.getStrengthEnumAccess().getHIGHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStrengthEnumAccess().getHIGHEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MEDIUM'
			{
				$current = grammarAccess.getStrengthEnumAccess().getMEDIUMEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getStrengthEnumAccess().getMEDIUMEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='low'
			{
				$current = grammarAccess.getStrengthEnumAccess().getLOWEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getStrengthEnumAccess().getLOWEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='verylow'
			{
				$current = grammarAccess.getStrengthEnumAccess().getVERY_LOWEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getStrengthEnumAccess().getVERY_LOWEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule ArithFtnEnum
ruleArithFtnEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='pow'
			{
				$current = grammarAccess.getArithFtnEnumAccess().getPOWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getArithFtnEnumAccess().getPOWEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='sqrt'
			{
				$current = grammarAccess.getArithFtnEnumAccess().getSQRTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getArithFtnEnumAccess().getSQRTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='exp'
			{
				$current = grammarAccess.getArithFtnEnumAccess().getEXPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getArithFtnEnumAccess().getEXPEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='abs'
			{
				$current = grammarAccess.getArithFtnEnumAccess().getABSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getArithFtnEnumAccess().getABSEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule AggregationFtnEnum
ruleAggregationFtnEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='avg'
			{
				$current = grammarAccess.getAggregationFtnEnumAccess().getAVGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAggregationFtnEnumAccess().getAVGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='min'
			{
				$current = grammarAccess.getAggregationFtnEnumAccess().getMINEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAggregationFtnEnumAccess().getMINEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='max'
			{
				$current = grammarAccess.getAggregationFtnEnumAccess().getMAXEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAggregationFtnEnumAccess().getMAXEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='count'
			{
				$current = grammarAccess.getAggregationFtnEnumAccess().getCOUNTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAggregationFtnEnumAccess().getCOUNTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='sum'
			{
				$current = grammarAccess.getAggregationFtnEnumAccess().getSUMEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAggregationFtnEnumAccess().getSUMEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='decreasing'
			{
				$current = grammarAccess.getAggregationFtnEnumAccess().getDECREASINGEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getAggregationFtnEnumAccess().getDECREASINGEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='increasing'
			{
				$current = grammarAccess.getAggregationFtnEnumAccess().getINCREASINGEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getAggregationFtnEnumAccess().getINCREASINGEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='stable'
			{
				$current = grammarAccess.getAggregationFtnEnumAccess().getSTABLEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getAggregationFtnEnumAccess().getSTABLEEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule PatternFtnEnum
rulePatternFtnEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='eventWhen'
			{
				$current = grammarAccess.getPatternFtnEnumAccess().getEVENT_WHENEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPatternFtnEnumAccess().getEVENT_WHENEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='update'
			{
				$current = grammarAccess.getPatternFtnEnumAccess().getUPDATEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPatternFtnEnumAccess().getUPDATEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='period'
			{
				$current = grammarAccess.getPatternFtnEnumAccess().getPERIODEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPatternFtnEnumAccess().getPERIODEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule CollectionFtnEnum
ruleCollectionFtnEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='first'
			{
				$current = grammarAccess.getCollectionFtnEnumAccess().getFIRSTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCollectionFtnEnumAccess().getFIRSTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='last'
			{
				$current = grammarAccess.getCollectionFtnEnumAccess().getLASTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCollectionFtnEnumAccess().getLASTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='at'
			{
				$current = grammarAccess.getCollectionFtnEnumAccess().getATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCollectionFtnEnumAccess().getATEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='size'
			{
				$current = grammarAccess.getCollectionFtnEnumAccess().getSIZEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCollectionFtnEnumAccess().getSIZEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='isEmpty'
			{
				$current = grammarAccess.getCollectionFtnEnumAccess().getIS_EMPTYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getCollectionFtnEnumAccess().getIS_EMPTYEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='includes'
			{
				$current = grammarAccess.getCollectionFtnEnumAccess().getINCLUDESEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getCollectionFtnEnumAccess().getINCLUDESEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_ROQME_DESCRIPTION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
