//  This file belongs to the RoQME toolchain.
//  Copyright (C) 2019  University of Extremadura, University of Málaga, Biometric Vox.
//
//  RoQME is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 3 of the License, or
//  any later version.
//
//  RoQME is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  GNU GPLv3 link: http://www.gnu.org/licenses/gpl-3.0.html

package roqme.generator.project

import org.eclipse.xtext.generator.IFileSystemAccess2

class RoqmeEmptyProjectInitializer {

	def generateModels(String projectName, IFileSystemAccess2 fsa) {	
		fsa.generateFile(projectName + '.roqme', createRoqmeModel(projectName));
		fsa.generateFile(projectName + '.roqmemap', createRoqmemapModel(projectName));
	}
	
	def createRoqmeModel(String projectName) {
	
		'''
		/*
		 * RoQME Model. Generated by the RoQME Modeling Tool
		 */
		
		/*
		 * RoQME allows you to specify Context variables (e.g., battery level) and, 
		 * from them, relevant context patterns (e.g., “the battery level drops more 
		 * than 1% per minute”). The detection of a context pattern is considered an 
		 * Observation in a belief network, used to specify the dynamics of non-functional
		 * properties (e.g., power consumption). The degree of fulfillment of these 
		 * non-functional properties are expressed as QoS Metrics.
		 */
		  
		/*
		 * Syntax example:
		 *
		 * roqme example
		 *
		 * property powerConsumption
		 * context batteryLevel : number
		 * observation obs1 : batteryLevel < 20 undermines powerConsumption
		 */	
		'''
	}

	
	def createRoqmemapModel(String projectName) {
		
		'''
		/*
		 * RoQME-to-RobMoSys mapping model. Generated by the RoQME Modeling Tool
		 */
		
		/*
		 * This mapping model gathers a set of monitors, each one linked to a
		 * RoQME Context and to a RobMoSys ServiceDefinition, describing the 
		 * associated context provider.
		 */
		
		import "«projectName».roqme"
		
		/*
		 * Syntax example:
		 *
		 * import "CommBasicObjects.types"
		 * import "CommBasicObjects.services"
		 *
		 * context batteryLevel monitor {
		 *   service : CommBasicObjects.BatteryQueryService 
		 *   attribute : CommBasicObjects.CommBatteryData.level [Integer]
		 *   period : 10s 
		 * }
		 */
		'''
	}
}